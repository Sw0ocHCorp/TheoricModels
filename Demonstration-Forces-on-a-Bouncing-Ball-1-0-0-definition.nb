(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1020990,      19166]
NotebookOptionsPosition[    853339,      15985]
NotebookOutlinePosition[   1010251,      18954]
CellTagsIndexPosition[   1008573,      18906]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Forces on a Bouncing Ball", "Title",
 TaggingRules->{},
 CellChangeTimes->{{3.6331116690124664`*^9, 3.6331116754725313`*^9}, {
  3.639254081141254*^9, 3.639254088397292*^9}, {3.6422595689520407`*^9, 
  3.6422595931841383`*^9}, {3.642265215408503*^9, 3.6422652188542023`*^9}},
 CellTags->{"Name", "Title"},
 CellID->835860012,ExpressionUUID->"3d914caa-2c59-4b6a-a5b9-cf2a60c2ee61"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d154adf1-29cb-4366-9bca-8f634cf97976"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"df2f3096-ff93-4594-a6e4-adc8b44c3af7"],

Cell[TextData[{
 "A ball flies through the air, hits the ground, and bounces back up. You can \
choose a soccer ball, basketball, or volleyball, and select the initial \
velocity, angle of incidence, and angle of rebound to determine the forces on \
the ball when it hits the ground. The coefficient of restitution ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "d26951a9-e1d8-4c5e-8394-f2a065100803"],
 " for each type of ball is estimated as 0.8, which means that the vertical \
velocity is reduced by 20% after impact with the ground. Frictional forces \
also reduce the horizontal velocity of the ball. The frictional and normal \
forces are found from the input values, using the change of momentum \
component with time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath",ExpressionUUID->
  "e4fb7546-e9b3-429a-a5be-ca1066b1669f"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "-", 
       SubscriptBox["p", "0"]}], ")"}], "/", "t"}], "=", "F"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "164fb5e1-d232-41fd-bd0f-57ac4385f8ec"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394893319591055`*^9}, {3.6394904605373654`*^9, 
   3.639490462324608*^9}, {3.6417507804613028`*^9, 3.6417508820470695`*^9}, {
   3.6417510374425993`*^9, 3.641751090642174*^9}, 3.6422525274476337`*^9, {
   3.6422525580834165`*^9, 3.6422525584422283`*^9}, {3.642258967162825*^9, 
   3.64225903271731*^9}, {3.642259076990644*^9, 3.642259201579056*^9}, {
   3.6422592400119247`*^9, 3.6422592733735332`*^9}, {3.642259311982484*^9, 
   3.642259382281148*^9}, {3.642259418650608*^9, 3.6422594311067553`*^9}, {
   3.6422594893182707`*^9, 3.642259493085114*^9}, {3.642259535934679*^9, 
   3.642259561714554*^9}, 3.642259849408599*^9, {3.6422602235212307`*^9, 
   3.642260251886909*^9}, {3.6422610037293653`*^9, 3.64226100933694*^9}, {
   3.6422639118921947`*^9, 3.642263916601514*^9}, {3.642264055247294*^9, 
   3.6422640562622643`*^9}, {3.6422641058412113`*^9, 3.642264108138142*^9}, {
   3.6422642295740423`*^9, 3.6422642732698107`*^9}, {3.6422643132553463`*^9, 
   3.642264371232991*^9}, {3.642264813369945*^9, 3.642264852513803*^9}, {
   3.6422649692297993`*^9, 3.6422650067270317`*^9}, {3.6422650888096724`*^9, 
   3.642265131611216*^9}, {3.642265933823502*^9, 3.6422659701841087`*^9}, {
   3.64226917358939*^9, 3.642269236635412*^9}, {3.642440889754896*^9, 
   3.642440894630224*^9}},
 CellID->783605,ExpressionUUID->"235dd197-9fd8-47e0-b67b-bcba0ed2a5d2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6a9d368b-5360-4ec4-987b-b4a5ec75e6b2"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"3bbf16ce-1744-45f5-b58c-2c5f9cc63c28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"basketball", " ", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", 
           RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", " ", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.3"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", " ", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"-", "0.3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "2.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "2.2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "2.2"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bbhoop", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"Thickness", "[", "0.01", "]"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"Thickness", "[", "0.005", "]"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4.5"}], ",", "0.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.5", ",", "4.5"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.02", "]"}], ",", "Red"}], "}"}], 
         "]"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2.5"}], ",", " ", "0.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", " ", "3"}], "}"}]}], "]"}]}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Scale", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Translate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.7"}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.675", ",", "2"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"0.375", ",", "1.3"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.375"}], ",", "1.3"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.675"}], ",", "2"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.9"}], "}"}]}], "\[IndentingNewLine]", 
              "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", 
            RowBox[{"-", "1.9"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"2.2", ",", "3"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Scale", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Translate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "0.007", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.675", ",", "0.1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Pi", ",", 
                RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1.35"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"2.2", ",", "2.25"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Scale", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Translate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "0.007", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.675", ",", "0.1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", 
            RowBox[{"-", "1.2"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"2.2", ",", "3"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bballhoop", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"Translate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Scale", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "bbhoop", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pitch", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Green", ",", " ", "0.5"}], "]"}], ",", 
        RowBox[{"Rectangle", " ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "23"}], ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"23", ",", 
            RowBox[{"-", "16"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "19.5"}], ",", 
             RowBox[{"-", "12.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"19.5", ",", 
             RowBox[{"-", "12.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "19.5"}], ",", "12.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"19.5", ",", "12.5"}], "}"}]}], "}"}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "19.5"}], ",", "12.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "19.5"}], ",", 
             RowBox[{"-", "12.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "12.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "12.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"19.5", ",", "12.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"19.5", ",", 
             RowBox[{"-", "12.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", " ", "[", "0", "]"}], ",", "White", ",", 
        RowBox[{"EdgeForm", " ", "[", 
         RowBox[{"{", 
          RowBox[{"White", ",", "Thick"}], "}"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"19.5", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"21.5", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", " ", "[", "0", "]"}], ",", "White", ",", 
        RowBox[{"EdgeForm", " ", "[", 
         RowBox[{"{", 
          RowBox[{"White", ",", "Thick"}], "}"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "19.5"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "21.5"}], ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", " ", "[", "0", "]"}], ",", "White", ",", 
        RowBox[{"EdgeForm", " ", "[", 
         RowBox[{"{", 
          RowBox[{"White", ",", "Thick"}], "}"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "19.5"}], ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "17.5"}], ",", 
            RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", " ", "[", "0", "]"}], ",", "White", ",", 
        RowBox[{"EdgeForm", " ", "[", 
         RowBox[{"{", 
          RowBox[{"White", ",", "Thick"}], "}"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"19.5", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"17.5", ",", 
            RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", " ", "[", "0", "]"}], ",", "White", ",", 
        RowBox[{"EdgeForm", " ", "[", 
         RowBox[{"{", 
          RowBox[{"White", ",", "Thick"}], "}"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "19.5"}], ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "11.5"}], ",", 
            RowBox[{"-", "8"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", " ", "[", "0", "]"}], ",", "White", ",", 
        RowBox[{"EdgeForm", " ", "[", 
         RowBox[{"{", 
          RowBox[{"White", ",", "Thick"}], "}"}], "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"19.5", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.5", ",", 
            RowBox[{"-", "8"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", 
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "14.5"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14.5", ",", "0"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "4"}], "]"}], ",", " ", 
        RowBox[{"Circle", " ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "11.5"}], ",", "0"}], "}"}], ",", "2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "4"}], "]"}], ",", " ", 
        RowBox[{"Circle", " ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"11.5", ",", "0"}], "}"}], ",", "2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Pi", "/", "2"}], ",", 
            RowBox[{"3", 
             RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soccerball", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"EdgeForm", " ", "[", 
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", "Thick"}], "}"}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.25"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0.75"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.05", ",", 
             RowBox[{"-", "0.7"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.25"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.3"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.25"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.75"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0.75"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", "1.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.05", ",", 
             RowBox[{"-", "0.7"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "1.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.25"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.85"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.3"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.85"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", "2.95"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.75"}], ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.8"}], ",", "2.4"}], "}"}]}], "}"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2.85"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.5", ",", "1.7"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.85", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "1.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", 
             RowBox[{"-", "2.6"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "2.2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "2.95"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"volleyball", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.007", "]"}], ",", "Black"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "3.05"}], "]"}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.6", ",", "2.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0.75"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.8"}], ",", "2.9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.8", ",", "2.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.8", ",", "0.8"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.4"}], ",", 
             RowBox[{"-", "2.2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.4"}], ",", 
             RowBox[{"-", "2.2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.2"}], ",", 
             RowBox[{"-", "2.8"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6", ",", 
             RowBox[{"-", "2.9"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.4"}], ",", 
             RowBox[{"-", "2.2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", 
             RowBox[{"-", "2.8"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", 
             RowBox[{"-", "2.6"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", 
             RowBox[{"-", "1.2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.8", ",", 
             RowBox[{"-", "0.75"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.3"}], ",", 
             RowBox[{"-", "1.2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.2", ",", 
             RowBox[{"-", "2.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.2", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", 
             RowBox[{"-", "2.6"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.6"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", 
             RowBox[{"-", "2.6"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.6"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.2"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.5"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.35"}], ",", "2.6"}], "}"}]}], "}"}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vball1", "=", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"White", ",", "0.1"}], "]"}], ",", " ", 
        RowBox[{"EdgeForm", "[", "Black", "]"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4.8"}], ",", "4.85"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4.8", ",", "4.5"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"White", ",", "0.1"}], "]"}], ",", " ", 
        RowBox[{"EdgeForm", "[", "Black", "]"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4.8"}], ",", "2.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4.8", ",", "2.45"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4.7"}], ",", "y"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4.7", ",", "y"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "3", ",", "4.5", ",", "0.3"}], "}"}]}], "]"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "4.5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2.8"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "4.7"}], ",", "4.7", ",", "0.5"}], "}"}]}], "]"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Gray", ",", "0.5"}], "]"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4.7"}], ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Gray", ",", "0.5"}], "]"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4.7", ",", "5"}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseball", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"White", ",", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.003", "]"}], ",", "Black"}], "}"}], 
         "]"}], ",", " ", 
        RowBox[{"Thickness", "[", "0.03", "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "3"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "1.8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1.8"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"BezierCurve", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "1.8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1.8"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bbbat", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"Brown", ",", " ", "0.5"}], "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4.9"}], ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.25", ",", "0.25"}], "}"}]}], "}"}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"Brown", ",", "0.5"}], "]"}], ",", " ", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.3"}], ",", "0.25"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.75"}], ",", "1.4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "1.9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"Brown", ",", "0.5"}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4.5"}], ",", "4.5"}], "}"}], ",", "0.71"}], "]"}]}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"Scale", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Brown", ",", 
             RowBox[{"EdgeForm", "[", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", " ", 
                RowBox[{"Lighter", " ", "[", 
                 RowBox[{"Brown", ",", "0.5"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.15", ",", "0.15"}], "}"}], ",", "0.5"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.7", ",", "0.5"}], "}"}]}], "]"}], ",", 
         RowBox[{"Pi", "/", "4"}]}], "]"}], "}"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"field", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"Translate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Scale", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "pitch", "}"}], ",", 
        RowBox[{"1", "/", "8"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vballnet", "=", "\[IndentingNewLine]", 
    RowBox[{"Translate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Scale", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "vball1", "}"}], ",", " ", 
        RowBox[{"1", "/", "1.65"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "2.8"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"baseballBat", "=", "\[IndentingNewLine]", 
   RowBox[{"Translate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Scale", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "bbbat", "}"}], ",", 
       RowBox[{"1", "/", "1.5"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2.5"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.627961901406307*^9, 3.627961952902772*^9}, {
  3.627961997343981*^9, 3.627962050183876*^9}, {3.627962133558531*^9, 
  3.6279622970518017`*^9}, {3.62796232754255*^9, 3.627962615503622*^9}, {
  3.6279947115336137`*^9, 3.6279947166062403`*^9}, {3.627995000791093*^9, 
  3.6279950814288754`*^9}, {3.6279960490622487`*^9, 3.6279961034146194`*^9}, {
  3.6295566844745893`*^9, 3.6295566919809914`*^9}, {3.629861815012059*^9, 
  3.629861822418434*^9}, {3.6309523716165915`*^9, 3.6309524910159025`*^9}},
 CellID->1057865521,ExpressionUUID->"381d0bd5-a154-4956-9a36-08809cc1eb56"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6035c749-5c52-4d60-881b-59fc7bdf1d43"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"c8623103-da94-49c0-9f32-c7f275627569"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "f", ",", " ", "m", ",", " ", "background", ",", " ", "time", ",", " ", 
       "vInitialY", ",", " ", "vInitialX", ",", " ", "vFinalY", ",", " ", 
       "vFinalX", ",", " ", "fGravity", ",", " ", "fX", ",", " ", "fY", ",", 
       " ", "fNormal", ",", " ", "fFriction", ",", " ", "fNet", ",", " ", 
       "\[CapitalTheta]Net", ",", " ", "forcediagram"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"vInitial", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], 
                    "]"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"vInitial", "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], 
                    "]"}]}], ")"}]}], ")"}]}], ")"}], ",", " ", 
             RowBox[{"x", "<", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.8", "*", 
              RowBox[{"(", 
               RowBox[{"(", 
                RowBox[{"x", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"vFinal", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], 
                    ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"vFinal", "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], 
                    ")"}]}], ")"}]}], ")"}], ")"}]}], ",", " ", 
             RowBox[{"x", ">", "0"}]}], "}"}]}], "}"}], "]"}]}], ";"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"m", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "ball", ",", "basketball", ",", "0.6", ",", "soccerball", ",", " ", 
         "0.45", ",", " ", "volleyball", ",", " ", "0.3", ",", " ", 
         "baseball", ",", " ", "0.145", ",", "ball", ",", "0"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"background", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "ball", ",", "basketball", ",", "bballhoop", ",", "soccerball", ",", 
         "field", ",", "volleyball", ",", "vballnet", ",", "ball", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"time", " ", "=", " ", "0.25"}], ";", "\[IndentingNewLine]", 
      RowBox[{"vInitialY", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", "1"}], "*", 
        RowBox[{"(", 
         RowBox[{"N", "[", 
          RowBox[{"vInitial", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], "]"}]}], "]"}],
          ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vInitialX", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"vInitial", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], "]"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"vFinalY", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"vFinal", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"vFinalX", " ", "=", "  ", 
       RowBox[{"N", "[", 
        RowBox[{"vFinal", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"fGravity", " ", "=", " ", 
       RowBox[{"m", "*", "10"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fX", " ", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "*", "vFinalX"}], ")"}], " ", "-", " ", 
           RowBox[{"(", 
            RowBox[{"m", "*", "vInitialX"}], ")"}]}], ")"}], "/", "time"}], 
        ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fY", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "*", "vFinalY"}], ")"}], " ", "-", " ", 
           RowBox[{"(", 
            RowBox[{"m", "*", "vInitialY"}], ")"}]}], ")"}], "/", "time"}], 
        ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fNormal", " ", "=", " ", 
       RowBox[{"fY", "+", "fGravity"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fFriction", " ", "=", " ", 
       RowBox[{"-", "fX"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fNet", " ", "=", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"fX", "^", "2"}], " ", "+", " ", 
          RowBox[{"fY", "^", "2"}]}], ")"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalTheta]Net", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"180", "/", "Pi"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"ArcSin", "[", 
          RowBox[{"(", 
           RowBox[{"fY", "/", "fNet"}], ")"}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vFinal", " ", "=", " ", 
       RowBox[{"0.8", "*", "vInitial"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"forcediagram", " ", "=", 
       RowBox[{"{", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", " ", 
           RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Dashed", ",", 
           RowBox[{"Arrowheads", "\[Rule]", 
            RowBox[{"{", "0.03", "}"}]}], ",", 
           RowBox[{"Arrow", " ", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", "0.4", ")"}]}], "fFriction"}], ",", 
                RowBox[{
                 RowBox[{"(", "0.4", ")"}], 
                 RowBox[{"(", 
                  RowBox[{"fNormal", "-", "fGravity"}], ")"}]}]}], "}"}]}], 
             "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(F\), \(Net\)]\) =\>\"", ",", " ", 
               "15"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.5"}], ",", "1.75"}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"fNet", ",", "\"\< N\>\""}], "}"}], "]"}], ",", " ", 
               "12"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.75"}], ",", "1.75"}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(Net\)]\) =\>\"", ",", 
               " ", "15"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.5"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\[CapitalTheta]Net", ",", "\"\<\[Degree]\>\""}], 
                 "}"}], "]"}], ",", " ", "12"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.75"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", 
           RowBox[{"Thickness", "[", "0.003", "]"}], ",", " ", 
           RowBox[{"Line", " ", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2.5", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "5"}], ",", " ", "0"}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", 
           RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
           RowBox[{"Arrowheads", "\[Rule]", 
            RowBox[{"{", "0.03", "}"}]}], ",", " ", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", "0.4", ")"}]}], "fFriction"}], ",", " ", "0"}],
                "}"}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", 
           RowBox[{"Thickness", "[", "0.008", "]"}], ",", " ", 
           RowBox[{"Arrowheads", "\[Rule]", 
            RowBox[{"{", "0.03", "}"}]}], ",", 
           RowBox[{"Arrow", " ", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"(", "0.4", ")"}], "fNormal"}]}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", 
           RowBox[{"Thickness", "[", "0.008", "]"}], ",", " ", 
           RowBox[{"Arrowheads", "\[Rule]", 
            RowBox[{"{", "0.03", "}"}]}], ",", 
           RowBox[{"Arrow", " ", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", "0.4", ")"}]}], "fGravity"}]}], "}"}]}], "}"}],
             "]"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(F\), \(Friction\)]\) =\>\"", ",", " ",
                "14"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2.5"}], ",", 
               RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"fFriction", ",", " ", "13"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2.5"}], ",", 
               RowBox[{"-", "1.1"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(F\), \(Normal\)]\) = \>\"", ",", 
               "14"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.25", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"fNormal", ",", "13"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.25", ",", "1.4"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(F\), \(Gravity\)]\) = \>\"", ",", 
               "14"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1.25", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"fGravity", ",", "13"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1.25", ",", 
               RowBox[{"-", "1.6"}]}], "}"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Thick"}], "}"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Scale", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Translate", "[", 
               RowBox[{
                RowBox[{"{", "background", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.75"}], ",", 
                  RowBox[{"-", "11.5"}]}], "}"}]}], "]"}], "}"}], ",", "1"}], 
            "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Transparent", ",", " ", 
             RowBox[{"EdgeForm", "[", "Black", "]"}], ",", " ", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "5"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"5", ",", "3.25"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", " ", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\[CapitalTheta]Initial", ",", "\"\<\[Degree]\>\""}],
                  "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.25"}], ",", "0.25"}], "}"}]}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", " ", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\[CapitalTheta]Final", ",", "\"\<\[Degree]\>\""}], 
                 "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.25", ",", "0.25"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(V\), SubscriptBox[\(x\), \(0\)]]\) \
=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", 
                 RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", " ", 
              RowBox[{"vInitialX", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.75"}], ",", 
                 RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(x\)]\) =\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", " ", 
              RowBox[{"vFinalX", ",", 
               RowBox[{"{", 
                RowBox[{"2.25", ",", 
                 RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(V\), SubscriptBox[\(y\), \(0\)]]\) \
=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", "1.255"}], "}"}]}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", " ", 
              RowBox[{"vInitialY", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", "0.75"}], "}"}]}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(y\)]\) =\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1.255"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", " ", 
              RowBox[{"vFinalY", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "0.75"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(V\), \(0\)]\) =\>\"", ",", " ", 
                 "10"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.5"}], ",", "1.75"}], "}"}]}], "]"}]}], "}"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", " ", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"vInitial", ",", "\"\< m/s\>\""}], "}"}], "]"}], 
                 ",", " ", "10"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5"}], ",", "1.75"}], "}"}]}], "]"}]}], "}"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< =\>\""}], "}"}], "]"}], ",", "10"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.25", ",", "1.75"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"vFinal", ",", "\"\< m/s\>\""}], "}"}], "]"}], ",",
                  "10"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2.1", ",", "1.75"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(F\), \(x\)]\) = \>\"", ",", " ", 
                 "13"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", 
                 RowBox[{"-", "2.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", " ", 
                RowBox[{"fX", ",", "13"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2.5"}], ",", 
                 RowBox[{"-", "2.5"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(F\), \(y\)]\) = \>\"", ",", " ", 
                 "13"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", 
                 RowBox[{"-", "3.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", " ", 
                RowBox[{"fY", ",", "13"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2.5"}], ",", 
                 RowBox[{"-", "3.25"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Net force on ball =\>\"", " ", ",", " ", "15"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2.75"}], ",", 
                 RowBox[{"-", "9.75"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", " ", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"fNet", ",", "\"\< N\>\""}], "}"}], "]"}], ",", 
                 "15"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.25", ",", 
                 RowBox[{"-", "9.75"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
             RowBox[{"Arrowheads", "\[Rule]", 
              RowBox[{"{", "0.02", "}"}]}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.2", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], 
                    "]"}]}]}], ")"}]}], ")"}], ",", " ", 
                  RowBox[{"(", 
                   RowBox[{"1.2", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], 
                    "]"}]}], ")"}]}], ")"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.2", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], 
                    "]"}]}]}], ")"}]}], ")"}], ",", "0"}], "}"}]}], "}"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.2", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Initial", " ", "Degree"}], 
                    "]"}]}]}], ")"}]}], ")"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.2"}], ",", "0"}], "}"}]}], "}"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.15", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], 
                    ")"}]}], ")"}], ",", " ", "0"}], "}"}]}], "}"}], "]"}], 
             ",", " ", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.15", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], 
                    ")"}]}], ")"}], ",", " ", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.15", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], 
                    ")"}]}], ")"}], ",", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.8", "*", 
                    RowBox[{"(", 
                    RowBox[{"(", 
                    RowBox[{"1.15", "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[CapitalTheta]Final", " ", "Degree"}], "]"}]}], 
                    ")"}]}], ")"}], ")"}]}], ")"}]}], "}"}]}], "}"}], "]"}]}],
             "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{"forcediagram", ",", 
             RowBox[{"{", 
              RowBox[{"7", ",", 
               RowBox[{"-", "8"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Scale", "[", "\[IndentingNewLine]", 
              RowBox[{"ball", ",", 
               RowBox[{"1", "/", "7"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"f", "[", "t", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "9.75"}], ",", "3.25"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"1.1", " ", "410"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", "\"\<initial speed (m/s)\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vInitial", ",", "10", ",", "\"\<\>\""}], "}"}], ",", " ", "10",
      ",", "5", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
   "\"\<incident angle (\[Degree])\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalTheta]Initial", ",", " ", "35", ",", " ", "\"\<\>\""}], "}"}],
      ",", "35", ",", "30", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
   "\"\<rebound angle (\[Degree])\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalTheta]Final", ",", " ", "30", ",", " ", "\"\<\>\""}], 
      "}"}], ",", "30", ",", "25", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", " ", "Trigger", ",", 
     RowBox[{"ImageSize", "\[Rule]", "50"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", "\"\<\>\"", 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ball", ",", "soccerball", ",", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"soccerball", "\[Rule]", " ", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "soccerball", "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "30"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"basketball", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "basketball", "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "30"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"volleyball", "\[Rule]", " ", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "volleyball", "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "30"}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ControlType", "\[Rule]", "RadioButtonBar"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<\>\"", ",", 
   "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<reset controls\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vInitial", " ", "=", " ", "10"}], ",", " ", 
       RowBox[{"\[CapitalTheta]Initial", "=", "35"}], ",", 
       RowBox[{"\[CapitalTheta]Final", "=", "30"}], ",", 
       RowBox[{"t", "=", 
        RowBox[{"-", "3"}]}], ",", " ", 
       RowBox[{"ball", " ", "=", " ", "soccerball"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
     "vInitial", ",", "\[CapitalTheta]Initial", ",", "\[CapitalTheta]Final", 
      ",", "t", ",", "ball"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.6302453578778753`*^9, 3.6302453582459927`*^9}, {
   3.630248830504613*^9, 3.6302488393374395`*^9}, {3.6302495344046555`*^9, 
   3.630249625304718*^9}, {3.6302497025023994`*^9, 3.63024970708186*^9}, {
   3.6302498493623724`*^9, 3.630249858566307*^9}, {3.6302502343894663`*^9, 
   3.6302502532965097`*^9}, {3.630414637647439*^9, 3.6304146484489098`*^9}, 
   3.6304149006908274`*^9, 3.630414963568*^9, 3.6304150508810153`*^9, {
   3.630415111150344*^9, 3.630415190198702*^9}, {3.6304153147166557`*^9, 
   3.6304153300385714`*^9}, 3.6304153928407135`*^9, {3.6304154355454135`*^9, 
   3.630415498754693*^9}, {3.6304155681079445`*^9, 3.6304155684740596`*^9}, {
   3.630415601468651*^9, 3.6304156033082395`*^9}, {3.630415755954204*^9, 
   3.6304158281193633`*^9}, {3.6304158741111126`*^9, 3.630415883948266*^9}, {
   3.630415957191766*^9, 3.6304159575998955`*^9}, {3.6304160689796286`*^9, 
   3.6304160693087325`*^9}, {3.6304161327290792`*^9, 
   3.6304161336013613`*^9}, {3.630421625937805*^9, 3.6304216640920362`*^9}, {
   3.6304217421430817`*^9, 3.6304218046331215`*^9}, {3.630421877998667*^9, 
   3.6304219048472767`*^9}, {3.630421981008704*^9, 3.630422106218882*^9}, {
   3.630422152428708*^9, 3.6304221530358925`*^9}, {3.630422215320882*^9, 
   3.6304222415192842`*^9}, {3.630422337700144*^9, 3.6304225113338413`*^9}, {
   3.630422713023552*^9, 3.630422814372058*^9}, {3.630422850409622*^9, 
   3.630422937241478*^9}, {3.6304229821548915`*^9, 3.6304229825860233`*^9}, {
   3.630423090905778*^9, 3.630423262217739*^9}, {3.630423299814802*^9, 
   3.630423506355056*^9}, 3.6304236319163427`*^9, {3.630423676425617*^9, 
   3.630423731796379*^9}, {3.6304238808362007`*^9, 3.6304240297279625`*^9}, {
   3.6304240699208603`*^9, 3.6304242045760555`*^9}, {3.630424238313876*^9, 
   3.630424373898373*^9}, {3.630424498623387*^9, 3.6304245014723034`*^9}, {
   3.6304245775797167`*^9, 3.6304247771957583`*^9}, {3.6304248111016345`*^9, 
   3.6304248478454275`*^9}, {3.630424944639475*^9, 3.6304249511905775`*^9}, {
   3.6304250126923113`*^9, 3.6304250348164053`*^9}, {3.630425091330538*^9, 
   3.6304251268659353`*^9}, {3.630425158391053*^9, 3.630425166194557*^9}, {
   3.6304252107978673`*^9, 3.630425366840927*^9}, {3.6304254012309604`*^9, 
   3.63042540595747*^9}, {3.630425450721831*^9, 3.63042548514588*^9}, {
   3.630425517445243*^9, 3.6304255701851587`*^9}, {3.6304256068619227`*^9, 
   3.6304256256319447`*^9}, {3.6304257433787203`*^9, 3.630425743906888*^9}, {
   3.6304259101522274`*^9, 3.630425992935778*^9}, {3.6305230648600492`*^9, 
   3.6305233253756275`*^9}, {3.6305234160897255`*^9, 
   3.6305234639240713`*^9}, {3.63052357070033*^9, 3.6305235714875793`*^9}, {
   3.6305236057345695`*^9, 3.6305236279626956`*^9}, {3.6305237373167825`*^9, 
   3.630523747579069*^9}, {3.6305237953784075`*^9, 3.6305239949914436`*^9}, {
   3.6305240279040003`*^9, 3.6305241269137683`*^9}, {3.6305241944404306`*^9, 
   3.6305244591193414`*^9}, {3.630524525137523*^9, 3.630524526857075*^9}, {
   3.6305245818157053`*^9, 3.6305246402384505`*^9}, {3.630524680070227*^9, 
   3.6305247052413*^9}, {3.6305247853119917`*^9, 3.6305248504318814`*^9}, {
   3.630524941933236*^9, 3.630524976715393*^9}, {3.6305250948993087`*^9, 
   3.630525102048601*^9}, 3.6305251385613165`*^9, {3.630525207833541*^9, 
   3.6305252104233704`*^9}, {3.630590635672552*^9, 3.6305908915606427`*^9}, {
   3.630590977704281*^9, 3.6305909910665703`*^9}, {3.6305910486620445`*^9, 
   3.63059104908418*^9}, {3.6305910874614916`*^9, 3.630591090106341*^9}, {
   3.6305911368743753`*^9, 3.6305911491102977`*^9}, {3.6305912086784096`*^9, 
   3.6305912091015434`*^9}, {3.6305912461524367`*^9, 
   3.6305912497555885`*^9}, {3.630591280345401*^9, 3.630591329425153*^9}, {
   3.6305913797012753`*^9, 3.630591396106541*^9}, {3.6305914384811325`*^9, 
   3.6305914472239375`*^9}, {3.6305915271405754`*^9, 
   3.6305915681777477`*^9}, {3.6305916116837044`*^9, 3.630591664018489*^9}, {
   3.630591737878184*^9, 3.6305917735866394`*^9}, {3.6305918248911*^9, 
   3.6305919173097467`*^9}, {3.6305919804189944`*^9, 3.630592070806991*^9}, {
   3.6305921064024096`*^9, 3.6305922321197405`*^9}, {3.6305922717104416`*^9, 
   3.6305923357940083`*^9}, {3.6305923711463428`*^9, 3.630592436062169*^9}, {
   3.63059271956112*^9, 3.63059274469118*^9}, {3.6305927861554832`*^9, 
   3.630592791792296*^9}, {3.630592830614746*^9, 3.630592831138915*^9}, {
   3.6305928754451294`*^9, 3.6305928888934484`*^9}, {3.6305930448264675`*^9, 
   3.630593083574898*^9}, {3.6305931256824074`*^9, 3.630593231462343*^9}, {
   3.6305933090952473`*^9, 3.630593429658925*^9}, {3.6305934665917807`*^9, 
   3.630593512228416*^9}, {3.6305935436635*^9, 3.63059358224888*^9}, {
   3.6305936265690966`*^9, 3.630593627481388*^9}, {3.630608526224802*^9, 
   3.630608554655922*^9}, {3.6306086676661773`*^9, 3.6306086683023806`*^9}, {
   3.630608881034629*^9, 3.6306089544301715`*^9}, 3.6306089850750055`*^9, {
   3.6306090498627915`*^9, 3.630609059065749*^9}, {3.6306090927775583`*^9, 
   3.6306090990045605`*^9}, {3.630609528442852*^9, 3.630609531322774*^9}, {
   3.63060976344425*^9, 3.63060976396341*^9}, {3.6306098638904676`*^9, 
   3.6306099555178633`*^9}, {3.6306099880523014`*^9, 
   3.6306099933960147`*^9}, {3.6306101952987876`*^9, 
   3.6306101957409286`*^9}, {3.6306102510756807`*^9, 
   3.6306103688054523`*^9}, {3.630610555681402*^9, 3.6306105593275747`*^9}, {
   3.630840786630537*^9, 3.630840793438719*^9}, 3.6308408472099686`*^9, {
   3.6308413685432177`*^9, 3.6308413689543505`*^9}, {3.6308415458551044`*^9, 
   3.630841546343259*^9}, {3.6308415895681257`*^9, 3.6308416071807747`*^9}, {
   3.6308416562115116`*^9, 3.6308416806373453`*^9}, {3.630841735817044*^9, 
   3.6308417476878595`*^9}, {3.6308417896603203`*^9, 3.630841866863087*^9}, {
   3.6308419108812084`*^9, 3.630841916842125*^9}, {3.6308419550293713`*^9, 
   3.6308420358773084`*^9}, {3.630842071387703*^9, 3.6308421075923142`*^9}, {
   3.6308421382791576`*^9, 3.6308421394625406`*^9}, {3.6308421779108725`*^9, 
   3.6308421816650796`*^9}, {3.6308422237445765`*^9, 
   3.6308422657210436`*^9}, {3.6308423439911523`*^9, 
   3.6308423565311785`*^9}, {3.630842410932629*^9, 3.6308424430119224`*^9}, {
   3.6308424755163484`*^9, 3.630842498662774*^9}, {3.6308425402641287`*^9, 
   3.630842540991352*^9}, {3.6308426464671936`*^9, 3.630842647099394*^9}, {
   3.6308426885436993`*^9, 3.6308427056241693`*^9}, {3.6308427869172506`*^9, 
   3.6308427874244123`*^9}, {3.6308429022762585`*^9, 
   3.6308429466014786`*^9}, {3.6308429983500795`*^9, 
   3.6308430117253704`*^9}, {3.6308430477259197`*^9, 3.630843052632498*^9}, {
   3.630843086239274*^9, 3.6308430992144384`*^9}, {3.6308431455032873`*^9, 
   3.6308431492244797`*^9}, {3.630843179614234*^9, 3.63084326791356*^9}, {
   3.630843305618657*^9, 3.630843364694609*^9}, {3.6308434596460705`*^9, 
   3.63084346142664*^9}, {3.630843496118772*^9, 3.6308435072913575`*^9}, {
   3.630843721313014*^9, 3.630843744312392*^9}, {3.630843819522523*^9, 
   3.630843845451842*^9}, {3.6308439201337986`*^9, 3.6308439216232777`*^9}, {
   3.63084396115296*^9, 3.630843966032524*^9}, {3.6308440078329353`*^9, 
   3.6308440240501375`*^9}, {3.630844124291294*^9, 3.6308441385798793`*^9}, {
   3.630844174962552*^9, 3.630844204126907*^9}, {3.6308442396172943`*^9, 
   3.630844241649946*^9}, {3.6308443789119787`*^9, 3.6308444047022543`*^9}, {
   3.630844439056281*^9, 3.630844473042177*^9}, {3.63084451770951*^9, 
   3.630844671694908*^9}, {3.6308447886494403`*^9, 3.630844805156729*^9}, {
   3.630844849715019*^9, 3.630844861081665*^9}, {3.6308449052128286`*^9, 
   3.6308449449465714`*^9}, {3.630845038391552*^9, 3.6308450387646723`*^9}, {
   3.630845080242975*^9, 3.630845285289755*^9}, {3.6308453175921187`*^9, 
   3.6308453205830774`*^9}, {3.6308454102028317`*^9, 3.630845436746348*^9}, {
   3.630845483222256*^9, 3.6308454885089536`*^9}, {3.630845731540918*^9, 
   3.6308457425164394`*^9}, {3.63084593555638*^9, 3.63084599973296*^9}, {
   3.630846032037324*^9, 3.6308460339949503`*^9}, {3.630846097247244*^9, 
   3.630846101887732*^9}, {3.6308461387785645`*^9, 3.630846149899132*^9}, {
   3.630846242463831*^9, 3.630846277234988*^9}, {3.630846419254547*^9, 
   3.6308464395030427`*^9}, {3.630846528039446*^9, 3.630846666679921*^9}, {
   3.630846757645109*^9, 3.630846775982989*^9}, {3.6308468803204613`*^9, 
   3.63084689284748*^9}, {3.630849460976365*^9, 3.630849475314966*^9}, {
   3.630849508910745*^9, 3.6308495585916805`*^9}, {3.630849601898572*^9, 
   3.630849617687639*^9}, {3.630849658499734*^9, 3.6308497097151623`*^9}, {
   3.6308500035954437`*^9, 3.6308500684422474`*^9}, {3.630859322559662*^9, 
   3.6308593490671606`*^9}, {3.6308594621024256`*^9, 
   3.6308595528355336`*^9}, {3.6308597635901537`*^9, 
   3.6308597696580935`*^9}, {3.6308598032288647`*^9, 
   3.6308598487124577`*^9}, {3.630859916962351*^9, 3.6308599281939526`*^9}, {
   3.6308899648389053`*^9, 3.630889976552662*^9}, {3.6308900148679543`*^9, 
   3.630890015582184*^9}, {3.6308900565703344`*^9, 3.6308901273130302`*^9}, {
   3.630890176817913*^9, 3.6308902239650335`*^9}, {3.630890259897565*^9, 
   3.630890271890411*^9}, {3.6308903256236486`*^9, 3.6308903259177427`*^9}, {
   3.6308903998244605`*^9, 3.6308904026583614`*^9}, {3.6308904352248106`*^9, 
   3.6308904699019337`*^9}, {3.630890508237234*^9, 3.6308905906596737`*^9}, {
   3.6308906378838234`*^9, 3.630890726455241*^9}, {3.6308907772135277`*^9, 
   3.6308907854091516`*^9}, {3.630890818465766*^9, 3.63089081928302*^9}, {
   3.630890867525498*^9, 3.630890892786604*^9}, {3.630890930335656*^9, 
   3.630890938514273*^9}, {3.630890978900227*^9, 3.630891008505722*^9}, {
   3.6308910518436365`*^9, 3.630891052512848*^9}, {3.6308911367495527`*^9, 
   3.630891137345743*^9}, {3.630891210859336*^9, 3.6308912111384172`*^9}, {
   3.6308913276928177`*^9, 3.6308913551666217`*^9}, {3.630891407637457*^9, 
   3.630891430807887*^9}, {3.6308915439271865`*^9, 3.6308915938862057`*^9}, {
   3.6308916437121997`*^9, 3.6308916460189323`*^9}, {3.6308918915176907`*^9, 
   3.6308919068015985`*^9}, {3.6308919662026577`*^9, 
   3.6308919665387564`*^9}, {3.6308920131637163`*^9, 3.630892015214372*^9}, {
   3.6308920546580315`*^9, 3.6308920820708227`*^9}, {3.630892131612718*^9, 
   3.6308921867063894`*^9}, {3.630892243019456*^9, 3.630892244170824*^9}, 
   3.63089229221124*^9, {3.6308923268403463`*^9, 3.630892412527835*^9}, {
   3.630892453524987*^9, 3.6308925348410807`*^9}, {3.630892578948224*^9, 
   3.6308925795034018`*^9}, {3.6308926390585117`*^9, 3.630892699493898*^9}, {
   3.6308927392316475`*^9, 3.630892811089697*^9}, {3.630892861766956*^9, 
   3.6308928788544455`*^9}, {3.6308929165165205`*^9, 
   3.6308929447675834`*^9}, {3.6308929867870665`*^9, 3.630893022494521*^9}, {
   3.63089305658646*^9, 3.630893131329438*^9}, {3.6308931613440742`*^9, 
   3.6308931687664456`*^9}, {3.630893199477302*^9, 3.6308932463393326`*^9}, {
   3.6308932771422153`*^9, 3.630893280202198*^9}, {3.6308933189616365`*^9, 
   3.6308933736511745`*^9}, {3.630893905075663*^9, 3.6308939320403137`*^9}, {
   3.6308939681498938`*^9, 3.6308939685560255`*^9}, {3.6308940345211897`*^9, 
   3.630894036027672*^9}, 3.6308940692493305`*^9, {3.6308942556551332`*^9, 
   3.630894422272586*^9}, {3.630894482871027*^9, 3.6308944865992203`*^9}, {
   3.630894623804239*^9, 3.630894628466733*^9}, {3.630894691063816*^9, 
   3.6308947540830345`*^9}, {3.6308948369286103`*^9, 3.630894837642841*^9}, {
   3.63089489417898*^9, 3.6308949699152822`*^9}, {3.630928169805049*^9, 
   3.63092823727069*^9}, {3.6309283023405643`*^9, 3.6309284279428587`*^9}, {
   3.6309285696373196`*^9, 3.6309286700485296`*^9}, {3.630928733728958*^9, 
   3.630928764354785*^9}, {3.6309287997021246`*^9, 3.6309288037624264`*^9}, {
   3.6309288366379766`*^9, 3.6309288780302525`*^9}, {3.6309289402031984`*^9, 
   3.6309290082780385`*^9}, {3.6309291416508336`*^9, 
   3.6309291433183618`*^9}, {3.6309292642851706`*^9, 3.630929282507016*^9}, {
   3.630929320293139*^9, 3.6309293425712805`*^9}, {3.6309297351282253`*^9, 
   3.630929744057088*^9}, {3.6309297808798985`*^9, 3.630929807192338*^9}, {
   3.6309298505352497`*^9, 3.6309298578455915`*^9}, {3.6309299066192427`*^9, 
   3.630930036738982*^9}, {3.6309300901971307`*^9, 3.6309300920127153`*^9}, {
   3.630930133812129*^9, 3.6309301343662996`*^9}, {3.630930171132101*^9, 
   3.630930203405449*^9}, {3.6309302593664055`*^9, 3.630930290236307*^9}, {
   3.6309303305892506`*^9, 3.6309303389669385`*^9}, {3.6309308056996737`*^9, 
   3.6309309415792646`*^9}, {3.6309311035702343`*^9, 3.630931207716648*^9}, {
   3.6309315030613956`*^9, 3.63093163035423*^9}, {3.6309316857630067`*^9, 
   3.630931749304391*^9}, {3.6309324664494605`*^9, 3.6309324908502893`*^9}, {
   3.6309326148640747`*^9, 3.6309326243181095`*^9}, {3.6309326629985156`*^9, 
   3.630932672979724*^9}, {3.630932712507399*^9, 3.630932723067787*^9}, {
   3.6309327781224546`*^9, 3.6309328201629343`*^9}, {3.6309328550721426`*^9, 
   3.630932855688332*^9}, {3.630932929298949*^9, 3.630932929913145*^9}, {
   3.630932992904354*^9, 3.6309330003997574`*^9}, {3.630952581147826*^9, 
   3.630952602368641*^9}, {3.630952643404804*^9, 3.6309526718479233`*^9}, {
   3.630952718942033*^9, 3.6309527193471637`*^9}, {3.6309527818172092`*^9, 
   3.63095279062803*^9}, {3.6309529065642242`*^9, 3.630952950863435*^9}, {
   3.6309529905301685`*^9, 3.63095301116278*^9}, {3.630953111104843*^9, 
   3.630953167321878*^9}, {3.6309531982278023`*^9, 3.6309532349105625`*^9}, {
   3.630953267674074*^9, 3.630953305216117*^9}, {3.6310390021671915`*^9, 
   3.6310390026353436`*^9}, {3.6310390810194893`*^9, 
   3.6310391162497935`*^9}, {3.631039195788307*^9, 3.631039270525284*^9}, {
   3.63103937871099*^9, 3.63103940127923*^9}, {3.631039439007343*^9, 
   3.6310395287051086`*^9}, {3.631039698013427*^9, 3.631039699938044*^9}, {
   3.633112350531375*^9, 3.633112352988183*^9}, {3.633112416766552*^9, 
   3.6331124305329523`*^9}, {3.6331124773039074`*^9, 3.6331125215570564`*^9}, 
   3.6331125593991585`*^9, {3.6331125948604918`*^9, 3.633112604909706*^9}, {
   3.6331127453225985`*^9, 3.6331127548536453`*^9}, {3.633702659242892*^9, 
   3.63370278623559*^9}, {3.633704546641481*^9, 3.6337046277874813`*^9}, {
   3.6368082246055307`*^9, 3.636808264867806*^9}, 3.636808308928903*^9, {
   3.636808342250457*^9, 3.636808433029853*^9}, {3.636808513755789*^9, 
   3.636808513931335*^9}, 3.636808759816764*^9, {3.636808893470779*^9, 
   3.636808894305192*^9}, {3.637096495914446*^9, 3.6370965932946453`*^9}, 
   3.6370966755732965`*^9, {3.6370968798468504`*^9, 3.637096897019065*^9}, {
   3.637096969362993*^9, 3.6370970155028963`*^9}, {3.637097045828509*^9, 
   3.6370972006917257`*^9}, {3.6370972503043737`*^9, 3.63709728781742*^9}, {
   3.6394900675200863`*^9, 3.6394900906393533`*^9}, {3.6394901275530043`*^9, 
   3.639490129316012*^9}, {3.6417512333094454`*^9, 3.641751261357871*^9}, {
   3.6417513609887514`*^9, 3.641751372573366*^9}, {3.6417514581836042`*^9, 
   3.6417514960547953`*^9}, {3.6417516403635063`*^9, 3.641751700638608*^9}, {
   3.6417518413159466`*^9, 3.6417518893434324`*^9}, {3.6417519411002197`*^9, 
   3.6417519688935623`*^9}, {3.641751999783484*^9, 3.64175201277693*^9}, {
   3.641752042937551*^9, 3.641752045161683*^9}, {3.6417520779838314`*^9, 
   3.641752078311828*^9}, {3.641752163808426*^9, 3.6417521795169706`*^9}, {
   3.641752256778965*^9, 3.6417522584589825`*^9}, {3.6417522885869613`*^9, 
   3.6417523411857576`*^9}, {3.641752382053465*^9, 3.6417524320253797`*^9}, {
   3.641752507267215*^9, 3.6417525435711136`*^9}, {3.641752673158041*^9, 
   3.641752720785864*^9}, {3.6417527587833223`*^9, 3.641752813561917*^9}, {
   3.6417529486035843`*^9, 3.641753006333331*^9}, {3.6417530392701073`*^9, 
   3.6417530398438473`*^9}, {3.641753131896164*^9, 3.641753206877336*^9}, {
   3.6417532705407686`*^9, 3.641753296927815*^9}, {3.6417533316614757`*^9, 
   3.6417533357323127`*^9}, {3.641753430321364*^9, 3.6417534306807613`*^9}, {
   3.641753502696101*^9, 3.641753546085312*^9}, {3.641753670910466*^9, 
   3.6417537030449705`*^9}, {3.6417537549275956`*^9, 
   3.6417537671956816`*^9}, {3.642259907220854*^9, 3.642259908252427*^9}, {
   3.642265267288335*^9, 3.642265286103499*^9}, {3.6422653340432377`*^9, 
   3.6422653834364433`*^9}, {3.6422655129763107`*^9, 3.642265520829796*^9}, 
   3.642265722553137*^9, {3.642268520999597*^9, 3.642268576302953*^9}, {
   3.642268673361335*^9, 3.642268762013919*^9}, {3.642268835273892*^9, 
   3.642268928659134*^9}},
 CellID->70707974,ExpressionUUID->"6a311ee2-9158-4474-aca6-a78b7b3e0777"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ball$$ = {{
      GrayLevel[1], 
      EdgeForm[{
        GrayLevel[0], 
        Thickness[Large]}], 
      Disk[{0, 0}, 3]}, {
      GrayLevel[0], 
      Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
        1.05, -0.7}, {-0.25, -1}}]}, {
      GrayLevel[0], 
      Thickness[Large], 
      Line[{{-1.1, 0}, {-2.3, 0}}]}, {
      GrayLevel[0], 
      Thickness[Large], 
      Line[{{-0.25, 1}, {-0.75, 2}}]}, {
      GrayLevel[0], 
      Thickness[Large], 
      Line[{{1, 0.75}, {1.5, 1.5}}]}, {
      GrayLevel[0], 
      Thickness[Large], 
      Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
      GrayLevel[0], 
      Thickness[Large], 
      Line[{{-0.25, -1}, {-0.5, -2}}]}, {
      GrayLevel[0], 
      Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
      GrayLevel[0], 
      Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
      GrayLevel[0], 
      Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
      GrayLevel[0], 
      Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
      GrayLevel[0], 
      Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}, $CellContext`t$$ = \
-3, $CellContext`vInitial$$ = 10, $CellContext`\[CapitalTheta]Final$$ = 
    30, $CellContext`\[CapitalTheta]Initial$$ = 35, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold["initial speed (m/s)"], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`vInitial$$], 10, ""}, 10, 5, 1}, {
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {
      Hold["incident angle (\[Degree])"], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[CapitalTheta]Initial$$], 35, ""}, 35, 30, 1}, {
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {
      Hold["rebound angle (\[Degree])"], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[CapitalTheta]Final$$], 30, ""}, 30, 25, 1}, {
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[$CellContext`t$$], -3, 3}, {
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ball$$], {{
         GrayLevel[1], 
         EdgeForm[{
           GrayLevel[0], 
           Thickness[Large]}], 
         Disk[{0, 0}, 3]}, {
         GrayLevel[0], 
         Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
           1.05, -0.7}, {-0.25, -1}}]}, {
         GrayLevel[0], 
         Thickness[Large], 
         Line[{{-1.1, 0}, {-2.3, 0}}]}, {
         GrayLevel[0], 
         Thickness[Large], 
         Line[{{-0.25, 1}, {-0.75, 2}}]}, {
         GrayLevel[0], 
         Thickness[Large], 
         Line[{{1, 0.75}, {1.5, 1.5}}]}, {
         GrayLevel[0], 
         Thickness[Large], 
         Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
         GrayLevel[0], 
         Thickness[Large], 
         Line[{{-0.25, -1}, {-0.5, -2}}]}, {
         GrayLevel[0], 
         Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
         GrayLevel[0], 
         Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
         GrayLevel[0], 
         Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
         GrayLevel[0], 
         Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
         GrayLevel[0], 
         Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}, ""}, {{{
          GrayLevel[1], 
          EdgeForm[{
            GrayLevel[0], 
            Thickness[Large]}], 
          Disk[{0, 0}, 3]}, {
          GrayLevel[0], 
          
          Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
            1.05, -0.7}, {-0.25, -1}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{-1.1, 0}, {-2.3, 0}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{-0.25, 1}, {-0.75, 2}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{1, 0.75}, {1.5, 1.5}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{-0.25, -1}, {-0.5, -2}}]}, {
          GrayLevel[0], 
          Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
          GrayLevel[0], 
          Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
          GrayLevel[0], 
          Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
          GrayLevel[0], 
          Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
          GrayLevel[0], 
          Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}} -> Graphics[{{{
            GrayLevel[1], 
            EdgeForm[{
              GrayLevel[0], 
              Thickness[Large]}], 
            Disk[{0, 0}, 3]}, {
            GrayLevel[0], 
            
            Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
              1.05, -0.7}, {-0.25, -1}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{-1.1, 0}, {-2.3, 0}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{-0.25, 1}, {-0.75, 2}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{1, 0.75}, {1.5, 1.5}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{-0.25, -1}, {-0.5, -2}}]}, {
            GrayLevel[0], 
            Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
            GrayLevel[0], 
            Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
            GrayLevel[0], 
            Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
            GrayLevel[0], 
            Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
            GrayLevel[0], 
            Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}}, ImageSize -> 
         30], {{
          RGBColor[1, 0.5, 0], 
          EdgeForm[{
            GrayLevel[0], 
            Thickness[0.02]}], 
          Disk[{0, 0}, 3]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{0, 3}, {-0.3, 0}, {0, -3}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-3, 0}, {0, -0.3}, {3, 0}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-2, 2.2}, {-0.1, 0}, {-2, -2.2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{2, 2.2}, {0.1, 0}, {2, -2.2}}]}} -> Graphics[{{{
            RGBColor[1, 0.5, 0], 
            EdgeForm[{
              GrayLevel[0], 
              Thickness[0.02]}], 
            Disk[{0, 0}, 3]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{0, 3}, {-0.3, 0}, {0, -3}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-3, 0}, {0, -0.3}, {3, 0}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-2, 2.2}, {-0.1, 0}, {-2, -2.2}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{2, 2.2}, {0.1, 0}, {2, -2.2}}]}}}, ImageSize -> 
         30], {{
          GrayLevel[1], 
          EdgeForm[{
            Thickness[0.007], 
            GrayLevel[0]}], 
          Disk[{0, 0}, 3.05]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{0, 3}, {1.6, 2.2}, {2, 0.75}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.8, 2.9}, {0.8, 2.2}, {1, 1}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{1, 1}, {1.5, 0.5}, {2.8, 0.8}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{1, 1}, {-0.5, 0}, {-0.4, -2.2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.4, -2.2}, {-0.2, -2.8}, {0.6, -2.9}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.4, -2.2}, {-0.5, -2.8}, {-1.5, -2.6}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{0.1, 0}, {1.5, -1.2}, {2.8, -0.75}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.3, -1.2}, {1.2, -2.5}, {2.2, -2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-2.2, -2}, {-2.5, 1}, {-0.35, 2.6}}]}} -> 
       Graphics[{{{
            GrayLevel[1], 
            EdgeForm[{
              Thickness[0.007], 
              GrayLevel[0]}], 
            Disk[{0, 0}, 3.05]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{0, 3}, {1.6, 2.2}, {2, 0.75}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-0.8, 2.9}, {0.8, 2.2}, {1, 1}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{1, 1}, {1.5, 0.5}, {2.8, 0.8}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{1, 1}, {-0.5, 0}, {-0.4, -2.2}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-0.4, -2.2}, {-0.2, -2.8}, {0.6, -2.9}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-0.4, -2.2}, {-0.5, -2.8}, {-1.5, -2.6}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{0.1, 0}, {1.5, -1.2}, {2.8, -0.75}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-0.3, -1.2}, {1.2, -2.5}, {2.2, -2}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
            GrayLevel[0], 
            Thickness[0.003], 
            BezierCurve[{{-2.2, -2}, {-2.5, 1}, {-0.35, 2.6}}]}}}, ImageSize -> 
         30]}}, {
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[""], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Button[
       "reset controls", {$CellContext`vInitial$$ = 
         10, $CellContext`\[CapitalTheta]Initial$$ = 
         35, $CellContext`\[CapitalTheta]Final$$ = 
         30, $CellContext`t$$ = -3, $CellContext`ball$$ = \
$CellContext`soccerball}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {451., {207., 212.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`vInitial$567760$$ = 
    0, $CellContext`\[CapitalTheta]Initial$567761$$ = 
    0, $CellContext`\[CapitalTheta]Final$567762$$ = 
    0, $CellContext`t$567763$$ = 0, $CellContext`ball$567764$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ball$$ = {{
           GrayLevel[1], 
           EdgeForm[{
             GrayLevel[0], 
             Thickness[Large]}], 
           Disk[{0, 0}, 3]}, {
           GrayLevel[0], 
           
           Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
             1.05, -0.7}, {-0.25, -1}}]}, {
           GrayLevel[0], 
           Thickness[Large], 
           Line[{{-1.1, 0}, {-2.3, 0}}]}, {
           GrayLevel[0], 
           Thickness[Large], 
           Line[{{-0.25, 1}, {-0.75, 2}}]}, {
           GrayLevel[0], 
           Thickness[Large], 
           Line[{{1, 0.75}, {1.5, 1.5}}]}, {
           GrayLevel[0], 
           Thickness[Large], 
           Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
           GrayLevel[0], 
           Thickness[Large], 
           Line[{{-0.25, -1}, {-0.5, -2}}]}, {
           GrayLevel[0], 
           Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
           GrayLevel[0], 
           Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
           GrayLevel[0], 
           Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
           GrayLevel[0], 
           Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
           GrayLevel[0], 
           
           Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}, \
$CellContext`t$$ = -3, $CellContext`vInitial$$ = 
        10, $CellContext`\[CapitalTheta]Final$$ = 
        30, $CellContext`\[CapitalTheta]Initial$$ = 35}, 
      "ControllerVariables" :> {
        Hold[$CellContext`vInitial$$, $CellContext`vInitial$567760$$, 0], 
        Hold[$CellContext`\[CapitalTheta]Initial$$, $CellContext`\
\[CapitalTheta]Initial$567761$$, 0], 
        Hold[$CellContext`\[CapitalTheta]Final$$, \
$CellContext`\[CapitalTheta]Final$567762$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$567763$$, 0], 
        Hold[$CellContext`ball$$, $CellContext`ball$567764$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`f$, $CellContext`m$, $CellContext`background$, \
$CellContext`time$, $CellContext`vInitialY$, $CellContext`vInitialX$, \
$CellContext`vFinalY$, $CellContext`vFinalX$, $CellContext`fGravity$, \
$CellContext`fX$, $CellContext`fY$, $CellContext`fNormal$, \
$CellContext`fFriction$, $CellContext`fNet$, \
$CellContext`\[CapitalTheta]Net$, $CellContext`forcediagram$}, \
($CellContext`f$[
            Pattern[$CellContext`x$, 
             Blank[]]] := 
          Piecewise[{{(-$CellContext`x$) (($CellContext`vInitial$$ 
                Sin[$CellContext`\[CapitalTheta]Initial$$ 
                  Degree])/($CellContext`vInitial$$ 
               Cos[$CellContext`\[CapitalTheta]Initial$$ 
                 Degree])), $CellContext`x$ < 0}, {
             0.8 ($CellContext`x$ (($CellContext`vFinal 
                 Sin[$CellContext`\[CapitalTheta]Final$$ 
                   Degree])/($CellContext`vFinal 
                Cos[$CellContext`\[CapitalTheta]Final$$ 
                  Degree]))), $CellContext`x$ > 0}}]; Null); $CellContext`m$ = 
         Switch[$CellContext`ball$$, $CellContext`basketball, 
           0.6, $CellContext`soccerball, 0.45, $CellContext`volleyball, 
           0.3, $CellContext`baseball, 0.145, $CellContext`ball$$, 
           0]; $CellContext`background$ = 
         Switch[$CellContext`ball$$, $CellContext`basketball, \
$CellContext`bballhoop, $CellContext`soccerball, $CellContext`field, \
$CellContext`volleyball, $CellContext`vballnet, $CellContext`ball$$, {}]; \
$CellContext`time$ = 
         0.25; $CellContext`vInitialY$ = -
          N[$CellContext`vInitial$$ 
            Sin[$CellContext`\[CapitalTheta]Initial$$ 
              Degree]]; $CellContext`vInitialX$ = 
         N[$CellContext`vInitial$$ 
           Cos[$CellContext`\[CapitalTheta]Initial$$ 
             Degree]]; $CellContext`vFinalY$ = 
         N[$CellContext`vFinal 
           Sin[$CellContext`\[CapitalTheta]Final$$ 
             Degree]]; $CellContext`vFinalX$ = 
         N[$CellContext`vFinal 
           Cos[$CellContext`\[CapitalTheta]Final$$ 
             Degree]]; $CellContext`fGravity$ = $CellContext`m$ 
          10; $CellContext`fX$ = ($CellContext`m$ $CellContext`vFinalX$ - \
$CellContext`m$ $CellContext`vInitialX$)/$CellContext`time$; $CellContext`fY$ = \
($CellContext`m$ $CellContext`vFinalY$ - $CellContext`m$ \
$CellContext`vInitialY$)/$CellContext`time$; $CellContext`fNormal$ = \
$CellContext`fY$ + $CellContext`fGravity$; $CellContext`fFriction$ = \
-$CellContext`fX$; $CellContext`fNet$ = 
         Sqrt[$CellContext`fX$^2 + $CellContext`fY$^2]; $CellContext`\
\[CapitalTheta]Net$ = (180/Pi) 
          ArcSin[$CellContext`fY$/$CellContext`fNet$]; $CellContext`vFinal = 
         0.8 $CellContext`vInitial$$; $CellContext`forcediagram$ = {{Red, 
            Thickness[0.005], Dashed, Arrowheads -> {0.03}, 
            
            Arrow[{{0, 
              0}, {(-0.4) $CellContext`fFriction$, 
               0.4 ($CellContext`fNormal$ - $CellContext`fGravity$)}}]}, {Red, 
            Text[
             Style["\!\(\*SubscriptBox[\(F\), \(Net\)]\) =", 15], {-3.5, 
             1.75}]}, {Red, 
            Text[
             Style[
              Row[{$CellContext`fNet$, " N"}], 12], {-1.75, 1.75}]}, {Red, 
            Text[
             Style[
             "\!\(\*SubscriptBox[\(\[Theta]\), \(Net\)]\) =", 15], {-3.5, 
              1}]}, {Red, 
            Text[
             Style[
              Row[{$CellContext`\[CapitalTheta]Net$, "\[Degree]"}], 
              12], {-1.75, 1}]}, {Black, 
            Thickness[0.003], 
            Line[{{2.5, 0}, {-5, 0}}]}, {Black, 
            Thickness[0.008], Arrowheads -> {0.03}, 
            Arrow[{{0, 0}, {(-0.4) $CellContext`fFriction$, 0}}]}, {Black, 
            Thickness[0.008], Arrowheads -> {0.03}, 
            Arrow[{{0, 0}, {0, 0.4 $CellContext`fNormal$}}]}, {Black, 
            Thickness[0.008], Arrowheads -> {0.03}, 
            Arrow[{{0, 0}, {0, (-0.4) $CellContext`fGravity$}}]}, {Black, 
            Text[
             Style[
             "\!\(\*SubscriptBox[\(F\), \(Friction\)]\) =", 
              14], {-2.5, -0.5}]}, {Black, 
            Text[
             Style[$CellContext`fFriction$, 13], {-2.5, -1.1}]}, {Black, 
            Text[
             Style["\!\(\*SubscriptBox[\(F\), \(Normal\)]\) = ", 14], {
             1.25, 2}]}, {Black, 
            Text[
             Style[$CellContext`fNormal$, 13], {1.25, 1.4}]}, {Black, 
            Text[
             Style["\!\(\*SubscriptBox[\(F\), \(Gravity\)]\) = ", 14], {
             1.25, -1}]}, {Black, 
            Text[
             Style[$CellContext`fGravity$, 13], {1.25, -1.6}]}}; Show[
          Plot[
           $CellContext`f$[$CellContext`x], {$CellContext`x, -3, 3}, 
           PlotStyle -> {{Black, Thick}}], 
          Graphics[{
            Scale[{
              Translate[{$CellContext`background$}, {-1.75, -11.5}]}, 1], {
            Transparent, 
             EdgeForm[Black], 
             Rectangle[{-5, -1}, {5, 3.25}]}, {Black, 
             Text[
              
              Row[{$CellContext`\[CapitalTheta]Initial$$, 
                "\[Degree]"}], {-1.25, 0.25}]}, {Black, 
             Text[
              Row[{$CellContext`\[CapitalTheta]Final$$, "\[Degree]"}], {1.25, 
              0.25}]}, {Black, 
             Text[
             "\!\(\*SubscriptBox[\(V\), SubscriptBox[\(x\), \(0\)]]\) =", \
{-2, -0.5}]}, {Black, 
             Text[$CellContext`vInitialX$, {-0.75, -0.5}]}, {Black, 
             Text["\!\(\*SubscriptBox[\(V\), \(x\)]\) =", {1, -0.5}]}, {Black, 
             Text[$CellContext`vFinalX$, {2.25, -0.5}]}, {Black, 
             Text[
             "\!\(\*SubscriptBox[\(V\), SubscriptBox[\(y\), \(0\)]]\) =", {-4,
                1.255}]}, {Black, 
             Text[$CellContext`vInitialY$, {-4, 0.75}]}, {Black, 
             Text["\!\(\*SubscriptBox[\(V\), \(y\)]\) =", {4, 1.255}]}, {
            Black, 
             Text[$CellContext`vFinalY$, {4, 0.75}]}, {Black, 
             Text[
              Style["\!\(\*SubscriptBox[\(V\), \(0\)]\) =", 10], {-1.5, 
              1.75}]}, {Black, 
             Text[
              Style[
               Row[{$CellContext`vInitial$$, " m/s"}], 10], {-0.5, 1.75}]}, {
            Black, 
             Text[
              Style[
               Row[{
                 Style["V", Italic], " ="}], 10], {1.25, 1.75}]}, {Black, 
             Text[
              Style[
               Row[{$CellContext`vFinal, " m/s"}], 10], {2.1, 1.75}]}, {Black, 
             Text[
              Style[
              "\!\(\*SubscriptBox[\(F\), \(x\)]\) = ", 13], {-4, -2.5}]}, {
            Black, 
             Text[
              Style[$CellContext`fX$, 13], {-2.5, -2.5}]}, {Black, 
             Text[
              Style[
              "\!\(\*SubscriptBox[\(F\), \(y\)]\) = ", 13], {-4, -3.25}]}, {
            Black, 
             Text[
              Style[$CellContext`fY$, 13], {-2.5, -3.25}]}, {Black, 
             Text[
              Style["Net force on ball =", 15], {-2.75, -9.75}]}, {Red, 
             Text[
              Style[
               Row[{$CellContext`fNet$, " N"}], 15], {0.25, -9.75}]}, {
            Black, 
             Dashing[Tiny], Arrowheads -> {0.02}, 
             Arrow[{{
               1.2 (3 (-Cos[$CellContext`\[CapitalTheta]Initial$$ Degree])), 
                1.2 (3 Sin[$CellContext`\[CapitalTheta]Initial$$ Degree])}, {
               1.2 (3 (-Cos[$CellContext`\[CapitalTheta]Initial$$ Degree])), 
                0}}], 
             
             Arrow[{{1.2 (
                 3 (-Cos[$CellContext`\[CapitalTheta]Initial$$ Degree])), 
                0}, {-0.2, 0}}], 
             
             Arrow[{{0, 0}, {
               1.15 (3 Cos[$CellContext`\[CapitalTheta]Final$$ Degree]), 0}}], 
             
             Arrow[{{1.15 (3 Cos[$CellContext`\[CapitalTheta]Final$$ Degree]),
                 0}, {1.15 (3 
                 Cos[$CellContext`\[CapitalTheta]Final$$ Degree]), 
                0.8 (1.15 (3 
                  Sin[$CellContext`\[CapitalTheta]Final$$ Degree]))}}]}, 
            Translate[$CellContext`forcediagram$, {7, -8}], 
            Translate[
             Scale[$CellContext`ball$$, 1/7, {0, 0}], {$CellContext`t$$, 
              $CellContext`f$[$CellContext`t$$]}]}], Axes -> False, 
          PlotRange -> {{-5, 9}, {-9.75, 3.25}}, ImageSize -> 1.1 410, 
          AspectRatio -> Automatic]], 
      "Specifications" :> {
       "initial speed (m/s)", {{$CellContext`vInitial$$, 10, ""}, 10, 5, 1, 
         Appearance -> "Labeled", ImageSize -> Tiny}, "", 
        "incident angle (\[Degree])", {{$CellContext`\[CapitalTheta]Initial$$,
           35, ""}, 35, 30, 1, Appearance -> "Labeled", ImageSize -> Tiny}, 
        "", "rebound angle (\[Degree])", \
{{$CellContext`\[CapitalTheta]Final$$, 30, ""}, 30, 25, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, 
        "", {$CellContext`t$$, -3, 3, ControlType -> Trigger, ImageSize -> 
         50}, "", "", {{$CellContext`ball$$, {{
            GrayLevel[1], 
            EdgeForm[{
              GrayLevel[0], 
              Thickness[Large]}], 
            Disk[{0, 0}, 3]}, {
            GrayLevel[0], 
            
            Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
              1.05, -0.7}, {-0.25, -1}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{-1.1, 0}, {-2.3, 0}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{-0.25, 1}, {-0.75, 2}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{1, 0.75}, {1.5, 1.5}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
            GrayLevel[0], 
            Thickness[Large], 
            Line[{{-0.25, -1}, {-0.5, -2}}]}, {
            GrayLevel[0], 
            Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
            GrayLevel[0], 
            Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
            GrayLevel[0], 
            Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
            GrayLevel[0], 
            Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
            GrayLevel[0], 
            Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}, ""}, {{{
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[0], 
               Thickness[Large]}], 
             Disk[{0, 0}, 3]}, {
             GrayLevel[0], 
             
             Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
               1.05, -0.7}, {-0.25, -1}}]}, {
             GrayLevel[0], 
             Thickness[Large], 
             Line[{{-1.1, 0}, {-2.3, 0}}]}, {
             GrayLevel[0], 
             Thickness[Large], 
             Line[{{-0.25, 1}, {-0.75, 2}}]}, {
             GrayLevel[0], 
             Thickness[Large], 
             Line[{{1, 0.75}, {1.5, 1.5}}]}, {
             GrayLevel[0], 
             Thickness[Large], 
             Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
             GrayLevel[0], 
             Thickness[Large], 
             Line[{{-0.25, -1}, {-0.5, -2}}]}, {
             GrayLevel[0], 
             Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
             GrayLevel[0], 
             Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
             GrayLevel[0], 
             Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
             GrayLevel[0], 
             Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
             GrayLevel[0], 
             Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}} -> Graphics[{{{
               GrayLevel[1], 
               EdgeForm[{
                 GrayLevel[0], 
                 Thickness[Large]}], 
               Disk[{0, 0}, 3]}, {
               GrayLevel[0], 
               
               Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
                 1.05, -0.7}, {-0.25, -1}}]}, {
               GrayLevel[0], 
               Thickness[Large], 
               Line[{{-1.1, 0}, {-2.3, 0}}]}, {
               GrayLevel[0], 
               Thickness[Large], 
               Line[{{-0.25, 1}, {-0.75, 2}}]}, {
               GrayLevel[0], 
               Thickness[Large], 
               Line[{{1, 0.75}, {1.5, 1.5}}]}, {
               GrayLevel[0], 
               Thickness[Large], 
               Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
               GrayLevel[0], 
               Thickness[Large], 
               Line[{{-0.25, -1}, {-0.5, -2}}]}, {
               GrayLevel[0], 
               Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
               GrayLevel[0], 
               Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
               GrayLevel[0], 
               Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
               GrayLevel[0], 
               Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
               GrayLevel[0], 
               Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}}, ImageSize -> 
            30], {{
             RGBColor[1, 0.5, 0], 
             EdgeForm[{
               GrayLevel[0], 
               Thickness[0.02]}], 
             Disk[{0, 0}, 3]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{0, 3}, {-0.3, 0}, {0, -3}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-3, 0}, {0, -0.3}, {3, 0}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-2, 2.2}, {-0.1, 0}, {-2, -2.2}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{2, 2.2}, {0.1, 0}, {2, -2.2}}]}} -> Graphics[{{{
               RGBColor[1, 0.5, 0], 
               EdgeForm[{
                 GrayLevel[0], 
                 Thickness[0.02]}], 
               Disk[{0, 0}, 3]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{0, 3}, {-0.3, 0}, {0, -3}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-3, 0}, {0, -0.3}, {3, 0}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-2, 2.2}, {-0.1, 0}, {-2, -2.2}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{2, 2.2}, {0.1, 0}, {2, -2.2}}]}}}, ImageSize -> 
            30], {{
             GrayLevel[1], 
             EdgeForm[{
               Thickness[0.007], 
               GrayLevel[0]}], 
             Disk[{0, 0}, 3.05]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{0, 3}, {1.6, 2.2}, {2, 0.75}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-0.8, 2.9}, {0.8, 2.2}, {1, 1}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{1, 1}, {1.5, 0.5}, {2.8, 0.8}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{1, 1}, {-0.5, 0}, {-0.4, -2.2}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-0.4, -2.2}, {-0.2, -2.8}, {0.6, -2.9}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-0.4, -2.2}, {-0.5, -2.8}, {-1.5, -2.6}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{0.1, 0}, {1.5, -1.2}, {2.8, -0.75}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-0.3, -1.2}, {1.2, -2.5}, {2.2, -2}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
             GrayLevel[0], 
             Thickness[0.003], 
             BezierCurve[{{-2.2, -2}, {-2.5, 1}, {-0.35, 2.6}}]}} -> 
          Graphics[{{{
               GrayLevel[1], 
               EdgeForm[{
                 Thickness[0.007], 
                 GrayLevel[0]}], 
               Disk[{0, 0}, 3.05]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{0, 3}, {1.6, 2.2}, {2, 0.75}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-0.8, 2.9}, {0.8, 2.2}, {1, 1}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{1, 1}, {1.5, 0.5}, {2.8, 0.8}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{1, 1}, {-0.5, 0}, {-0.4, -2.2}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-0.4, -2.2}, {-0.2, -2.8}, {0.6, -2.9}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-0.4, -2.2}, {-0.5, -2.8}, {-1.5, -2.6}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{0.1, 0}, {1.5, -1.2}, {2.8, -0.75}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-0.3, -1.2}, {1.2, -2.5}, {2.2, -2}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
               GrayLevel[0], 
               Thickness[0.003], 
               BezierCurve[{{-2.2, -2}, {-2.5, 1}, {-0.35, 2.6}}]}}}, 
            ImageSize -> 30]}, ControlType -> RadioButtonBar, Appearance -> 
         "Vertical"}, "", "", 
        Button[
        "reset controls", {$CellContext`vInitial$$ = 
          10, $CellContext`\[CapitalTheta]Initial$$ = 
          35, $CellContext`\[CapitalTheta]Final$$ = 
          30, $CellContext`t$$ = -3, $CellContext`ball$$ = \
$CellContext`soccerball}]}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`vInitial$$, $CellContext`\
\[CapitalTheta]Initial$$, $CellContext`\[CapitalTheta]Final$$, \
$CellContext`t$$, $CellContext`ball$$}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{
      622.5593359375, {234.40445861816409`, 240.13639221191409`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`m = 0.45, $CellContext`background = 
       Translate[
         Scale[{{{
             RGBColor[0., 0.5, 0.], 
             Rectangle[{-23, 16}, {23, -16}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{-19.5, -12.5}, {19.5, -12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{-19.5, 12.5}, {19.5, 12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{-19.5, 12.5}, {-19.5, -12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{0, 12.5}, {0, -12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{19.5, 12.5}, {19.5, -12.5}}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{19.5, 3}, {21.5, -3}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{-19.5, 3}, {-21.5, -3}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{-19.5, 5}, {-17.5, -5}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{19.5, 5}, {17.5, -5}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{-19.5, 8}, {-11.5, -8}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{19.5, 8}, {11.5, -8}]}, {
             GrayLevel[1], 
             PointSize[Large], 
             Point[{{-14.5, 0}, {14.5, 0}, {0, 0}}]}, {
             GrayLevel[1], 
             Circle[{0, 0}, 4], 
             Circle[{-11.5, 0}, 2, {(-Pi)/2, Pi/2}]}, {
             GrayLevel[1], 
             Circle[{0, 0}, 4], 
             Circle[{11.5, 0}, 2, {Pi/2, (3 Pi)/2}]}}}, 1/8], {0, 
         5}], $CellContext`time = 
       0.25, $CellContext`vInitialY = -5.7357643635104605`, \
$CellContext`vInitialX = 8.191520442889917, $CellContext`vFinalY = 
       3.5, $CellContext`vFinalX = 6.06217782649107, $CellContext`fGravity = 
       4.5, $CellContext`fX = -3.8328167095179246`, $CellContext`fY = 
       16.624375854318828`, $CellContext`fNormal = 
       21.124375854318828`, $CellContext`fFriction = 
       3.8328167095179246`, $CellContext`fNet = 
       17.060491097105576`, $CellContext`\[CapitalTheta]Net = 
       77.01709088186432, $CellContext`forcediagram = {{
          RGBColor[1, 0, 0], 
          Thickness[0.005], 
          Dashing[{Small, Small}], Arrowheads -> {0.03}, 
          Arrow[{{0, 0}, {-1.53312668380717, 6.649750341727532}}]}, {
          RGBColor[1, 0, 0], 
          Text[
           Style["\!\(\*SubscriptBox[\(F\), \(Net\)]\) =", Bold, 15], {-3.5, 
           1.75}]}, {
          RGBColor[1, 0, 0], 
          Text[
           Style["17.0605" "N", 12], {-1.75, 1.75}]}, {
          RGBColor[1, 0, 0], 
          Text[
           Style[
           "\!\(\*SubscriptBox[\(\[CapitalTheta]\), \(Net\)]\) =", Bold, 
            15], {-3.5, 1}]}, {
          RGBColor[1, 0, 0], 
          Text[
           Style["77.0171" "\[Degree]", 12], {-1.75, 1}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          Line[{{2.5, 0}, {-5, 0}}]}, {
          GrayLevel[0], 
          Thickness[0.008], Arrowheads -> {0.03}, 
          Arrow[{{0, 0}, {-1.53312668380717, 0}}]}, {
          GrayLevel[0], 
          Thickness[0.008], Arrowheads -> {0.03}, 
          Arrow[{{0, 0}, {0, 8.449750341727531}}]}, {
          GrayLevel[0], 
          Thickness[0.008], Arrowheads -> {0.03}, 
          Arrow[{{0, 0}, {0, -1.8}}]}, {
          GrayLevel[0], 
          Text[
           Style[
           "\!\(\*SubscriptBox[\(F\), \(Friction\)]\) =", Bold, 
            14], {-2.5, -0.5}]}, {
          GrayLevel[0], 
          Text[
           Style["3.83282", 13], {-2.5, -1.1}]}, {
          GrayLevel[0], 
          Text[
           Style["\!\(\*SubscriptBox[\(F\), \(Normal\)]\) =", Bold, 14], {
           1.25, 2}]}, {
          GrayLevel[0], 
          Text[
           Style["21.1244", 13], {1.25, 1.4}]}, {
          GrayLevel[0], 
          Text[
           Style["\!\(\*SubscriptBox[\(F\), \(Gravity\)]\) =", Bold, 14], {
           1.25, -1}]}, {
          GrayLevel[0], 
          Text[
           Style["4.5", 13], {1.25, -1.6}]}}, $CellContext`vFinal = 
       7.2, $CellContext`basketball = {{
          RGBColor[1, 0.5, 0], 
          EdgeForm[{
            GrayLevel[0], 
            Thickness[0.02]}], 
          Disk[{0, 0}, 3]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{0, 3}, {-0.3, 0}, {0, -3}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-3, 0}, {0, -0.3}, {3, 0}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-2, 2.2}, {-0.1, 0}, {-2, -2.2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          
          BezierCurve[{{2, 2.2}, {0.1, 0}, {
            2, -2.2}}]}}, $CellContext`soccerball = {{
          GrayLevel[1], 
          EdgeForm[{
            GrayLevel[0], 
            Thickness[Large]}], 
          Disk[{0, 0}, 3]}, {
          GrayLevel[0], 
          
          Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
            1.05, -0.7}, {-0.25, -1}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{-1.1, 0}, {-2.3, 0}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{-0.25, 1}, {-0.75, 2}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{1, 0.75}, {1.5, 1.5}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
          GrayLevel[0], 
          Thickness[Large], 
          Line[{{-0.25, -1}, {-0.5, -2}}]}, {
          GrayLevel[0], 
          Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
          GrayLevel[0], 
          Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
          GrayLevel[0], 
          Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
          GrayLevel[0], 
          Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
          GrayLevel[0], 
          
          Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}, \
$CellContext`volleyball = {{
          GrayLevel[1], 
          EdgeForm[{
            Thickness[0.007], 
            GrayLevel[0]}], 
          Disk[{0, 0}, 3.05]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{0, 3}, {1.6, 2.2}, {2, 0.75}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.8, 2.9}, {0.8, 2.2}, {1, 1}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{1, 1}, {1.5, 0.5}, {2.8, 0.8}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{1, 1}, {-0.5, 0}, {-0.4, -2.2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.4, -2.2}, {-0.2, -2.8}, {0.6, -2.9}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.4, -2.2}, {-0.5, -2.8}, {-1.5, -2.6}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{0.1, 0}, {1.5, -1.2}, {2.8, -0.75}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-0.3, -1.2}, {1.2, -2.5}, {2.2, -2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
          GrayLevel[0], 
          Thickness[0.003], 
          
          BezierCurve[{{-2.2, -2}, {-2.5, 1}, {-0.35, 
            2.6}}]}}, $CellContext`baseball = {{
          GrayLevel[1], 
          EdgeForm[{
            Thickness[0.003], 
            GrayLevel[0]}], 
          Thickness[0.03], 
          Disk[{0, 0}, 3]}, {
          RGBColor[1, 0, 0], 
          Thickness[0.005], 
          BezierCurve[{{2, 1.8}, {0.5, 0}, {2, -1.8}}]}, {
          RGBColor[1, 0, 0], 
          Thickness[0.005], 
          
          BezierCurve[{{-2, 1.8}, {-0.5, 
             0}, {-2, -1.8}}]}}, $CellContext`bballhoop = Translate[
         Scale[{{{
             GrayLevel[1], 
             EdgeForm[
              Thickness[0.01]], 
             Rectangle[{-5, 0}, {3, 5}]}, {
             GrayLevel[1], 
             EdgeForm[
              Thickness[0.005]], 
             Rectangle[{-4.5, 0.5}, {2.5, 4.5}]}, {
             GrayLevel[1], 
             EdgeForm[{
               Thickness[0.02], 
               RGBColor[1, 0, 0]}], 
             Rectangle[{-2.5, 0.75}, {0.5, 3}]}, 
            Scale[
             Translate[{
               RGBColor[0.85, 0.85, 0.85], 
               
               Polygon[{{0.675, 2}, {0.375, 1.3}, {-0.375, 
                 1.3}, {-0.675, 2}, {0, 1.9}}]}, {-1, -1.9}], {2.2, 3}], 
            Scale[
             Translate[{
               GrayLevel[0], 
               Thickness[0.007], 
               Circle[{0, 2}, {0.675, 0.1}, {Pi, 2 Pi}]}, {-1, -1.35}], {2.2, 
             2.25}], 
            Scale[
             Translate[{
               GrayLevel[0], 
               Thickness[0.007], 
               Circle[{0, 2}, {0.675, 0.1}, {0, Pi}]}, {-1, -1.2}], {
             2.2, 3}]}}, {0.5, 0.5}], {1, 3}], $CellContext`field = 
       Translate[
         Scale[{{{
             RGBColor[0., 0.5, 0.], 
             Rectangle[{-23, 16}, {23, -16}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{-19.5, -12.5}, {19.5, -12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{-19.5, 12.5}, {19.5, 12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{-19.5, 12.5}, {-19.5, -12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{0, 12.5}, {0, -12.5}}]}, {
             GrayLevel[1], 
             Thickness[Large], 
             Line[{{19.5, 12.5}, {19.5, -12.5}}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{19.5, 3}, {21.5, -3}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{-19.5, 3}, {-21.5, -3}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{-19.5, 5}, {-17.5, -5}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{19.5, 5}, {17.5, -5}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{-19.5, 8}, {-11.5, -8}]}, {
             Opacity[0], 
             GrayLevel[1], 
             EdgeForm[{
               GrayLevel[1], 
               Thickness[Large]}], 
             Rectangle[{19.5, 8}, {11.5, -8}]}, {
             GrayLevel[1], 
             PointSize[Large], 
             Point[{{-14.5, 0}, {14.5, 0}, {0, 0}}]}, {
             GrayLevel[1], 
             Circle[{0, 0}, 4], 
             Circle[{-11.5, 0}, 2, {(-Pi)/2, Pi/2}]}, {
             GrayLevel[1], 
             Circle[{0, 0}, 4], 
             Circle[{11.5, 0}, 2, {Pi/2, (3 Pi)/2}]}}}, 1/8], {0, 
         5}], $CellContext`vballnet = Translate[
         Scale[{{{
             RGBColor[0.9, 0.9, 0.9], 
             EdgeForm[
              GrayLevel[0]], 
             Rectangle[{-4.8, 4.85}, {4.8, 4.5}]}, {
             RGBColor[0.9, 0.9, 0.9], 
             EdgeForm[
              GrayLevel[0]], 
             Rectangle[{-4.8, 2.75}, {4.8, 2.45}]}, {
             GrayLevel[0], 
             
             Line[{{{-4.7, 3.}, {4.7, 3.}}, {{-4.7, 3.3}, {4.7, 3.3}}, {{-4.7,
               3.6}, {4.7, 3.6}}, {{-4.7, 3.9}, {4.7, 3.9}}, {{-4.7, 4.2}, {
              4.7, 4.2}}, {{-4.7, 4.5}, {4.7, 4.5}}}]}, {
             GrayLevel[0], 
             Line[CompressedData["
1:eJxd0EEKglAUheGnoaCQmK2gHQQ2zzW0hKBo1naqUTupaWCj9hA0tlkO6t08
B9658Lj8fOJDZ+v9ajNyzk1/Jx7OvfVTXZ1N1aC3NunQpXhJPx39jOno0DPx
TDwRT8Qj8Yi+qP18LnB06J14R9/ZftLR8LPdd6Oj4XN732MJR8MP9vyLjobb
72zfdHTovXhP/++4gaNDT8VT2bl4Ll6IF3T73HpCR8O/U2rQMg==
              "]]}, {
             RGBColor[0.25, 0.25, 0.25], 
             Rectangle[{-5, 0}, {-4.7, 5}]}, {
             RGBColor[0.25, 0.25, 0.25], 
             Rectangle[{5, 0}, {4.7, 5}]}}}, 0.6060606060606061], {0.25, 
         2.8}], Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellID->750784482,ExpressionUUID->"1c0bc82a-6540-4936-8fe4-39bf60a40b22"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8c865601-288e-4b8d-8843-38454d313322"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"274b43e9-0131-47b0-a901-7de16ca997e9"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Xd8FFXf//9NgNBrMIBKQkfahSgKUkRQqUrxokoggKBeoKAEUQRp0lFE
pSgioAIXVQFFBL0B0R9FboSLGpKQUJIA4QZSrgCh+f389jyYx7gtu8ns7C68
nn/wmDlz5syZ3c3OvplyKg8Y9sLLwRaLJbqQ/PNC/7dbDh/ef9Q/S8lMt6HR
/3pl6KCB7YaOGPTKoOGNB+STwovyT0J+i+X/n/7LTnZ2dmZm5v8BAAAAAGAo
CZsSOe1zqE0mvWyVnp7+XwAAAAAADCVhU6VOZ/k0KytLlmZkZGRZXQUAAAAA
wFAqb0rwlPgpEw5jqQTYK1eu+LqnAAAAAIC7mQRPiZ824VRdxEssBQAAAACY
Qwun2mW9ly5dUhfx+rprAAAAAIB7hbqsVwKpxNJr166pU6i+7hQAAAAA4N6i
biyVWCoRNT09net4AQAAAAAmkygqgVRi6f/93//997//9XV3AAAAAAD3Igmk
aqhTkikAAAAAwCdIpgAAAAAA3yKZAgAAAAB8i2QKAAAAAPAtkikAAAAAwLdI
pgAAAAAA3yKZAgAAAAB8i2QKAAAAAPAtkikAAAAAwLdIpgAAAAAAjyRY/WG1
5e9UoargfoMkUwAAAACAR0imAAAAAABfOWL1g3tUZXeaJZkCAAAAANxEMgUA
AAAA+Iq6QNc+fqb9nX0Fd67sJZkCAAAAAHJEMgUAAAAA+JZ6tFEukqla0XXj
JFMAAAAAQI5IpgAAAAAA31KDwjhMo86oympF142TTAEAAAAAOSKZAgAAAAB8
i2QKAAAAAPAtkikAAAAAwLdIpgAAAAAA3+LZvAAAAAAA3yKZAgAAAAB8K8Eq
F8lUrei6cZIpAAAAACBHJFMAAAAAgD84YmUfPx1Sld1plmQKAAAAAHATyRQA
AAAA4A/UBbrq0UZb/k4VunMFrx7JFAAAAADgEZIpAAAAAOAuQzIFAAAAAPgW
yRQAAAAA4FskUwAAAACAb5FMAQAAAAC+RTIF3Pf/AQAAAPBcjr+0SaaA+3z9
Bw0AAAAEpBx/aZNMAfepP6u/AAAAALjnf//3f0mmgLFIpgAAAIBHSKaA4Uim
AAAAgEdIpoDhSKYAAACAR0imgOFIpgAAAIBHvJFMFy5c2KdPn+TkZHd+w586
dSoyMvLrr782qsGVK1cOHz7czco+d/HiRentV199lWPNc+fOTZkyJY+bu3Ll
SosWLdauXeuizqZNmzZv3pzHDd3jSKYAAACAR7yRTKtUqWKxWJYvX+7Ob/gv
v/xSKteuXVvb0JYtW/78889cNzhw4ECpfOjQIXcq+5wEc+lt9+7dXVc7ePBg
RETEhAkT8ri5bdu2yeaOHz/uok5MTEzZsmWnTZuWx23dy0imAAAAgEe8kUw3
btw4bty4ixcvuvMbPjU19b333tNO0p0+fVqiU5s2bXLd4N2XTOUlqlmzprwm
V65cyePm3nzzzQYNGuRYbe3atUFBQStXrszj5u5ZJFMAAADAI/52n6nDZOqR
uyyZShrt2LFjxYoVDbk+uWrVqmPHjnWn5vDhw4sVK7Z///68b/QeRDIFAAAA
POKNZBodHV2rVi2VpCQhyvTkyZOnTZtWr169ggUL1qlTZ8mSJVrl2NhYqaDi
0oQJE6pVqyZJrUiRIlLYo0cP+waV1atXN23atGTJkvfdd98zzzyzbds2bVGO
yXThwoVPPPGEbELi3j//+c/4+HhVrnX1yy+/lIlChQo1b9581qxZNqtLh4cN
GyYVSpcu3aVLF+mJTYXFixc/99xzxYsXr1+/vvTcJlHu3bs3KiqqfPnyZcuW
7dWr1549e1wn03Xr1kmFGTNm6Atfe+016cDOnTufffbZokWLVq5cecGCBZmZ
maNHjw4PD5ddkxdn69atNk3t27dPmpJ/Xb8OyqVLl4KDg1u3bu2sY3CBZAoA
AAB4xBvJVBKlJKCTJ0/K9B9//CHTkn0k6LVq1ap69eoWqy1btqjKkgdlVuKk
TH/++eft2rWT2bCwMAl9b7/9tn2DYtGiRTJbokSJNm3aPPLIIzItjUvEU0td
J9NPPvlE9UeqtWzZMigoqFy5cpLCtK6qe1pr16799NNPS7Myrb/jMjU1VRZJ
Yd26daVC4cKFJb6tX79eqyC7IEsllkrf1M5KvM3IyFBLZRfuv/9+KZRFEvok
FVaqVMl1MpVFUmHjxo36wo4dO0rhgw8+KGG/bdu2ISEhMisNSodlu40bN1av
z5kzZ/RrSfyvWrVqjq+Dplq1avny5Tt16pSzvsEZkikAAADgEXOSacGCBbVT
eJKPpKRPnz5qVp9Mrzq5mtcmmfbr169hw4baU5JmzJghS8eMGaNmXSdTWVHS
lhbZJk2a1KBBAxWTVVfF1KlT1dKYmJhSpUpJ9jx69Kgq6d+/v1QYN26cmt23
b5+E0JIlS2ZmZqr6BQoUkMCYmJioKkRFRekb7Natm8xGR0erWQl9FSpUcJ1M
77vvPv2+KyqZRkZGqtlly5bJrKTLn3/+WZW8+OKLUmLzDN6HH354+PDhOb4O
mk6dOkkj0rizvsEZkikAAADgEXOSaatWrbSlBw8eVGcS1WwukqmN+Ph4Wdq1
a1c16zqZPvbYY7L0m2++sX+akOpqzZo19YWTJ0+WQm1Ul6pVq0qW1FcYMmSI
VNi7d+9V63W8Mj137lxtaUpKipRIxFOz4eHhkjT1r+EXX3zhIpmmp6fL0tDQ
UJtylUy108RpaWnqNK5WQfXkww8/1EokNUvJ9u3bc3wdNO+++67UmTlzprMK
cIZkCgAAAHjEnGQ6ePBgfYWQkJDGjRur6dwl02XLlr388svNmjWrU6dOkSJF
ZOkLL7ygFrlOppLFgoKCpEL58uUlD0o7kv7UItXVnj176utv3LhRO8t5/vx5
dVL1YR1VIgFTKgwdOtRhBUmjV++k1Keeekrfvrz+LpLpiRMnZOkTTzxhU66S
qfRHK7FpefXq1VLywQcfaCUSMGWXtRzq4nXQLFmyRCqMGjXKYd/gAskUAAAA
8Ig5yfT111/XVyhYsGBekqm6RDZ//vxNmjTp2rWrZFL3k+lV6zOIpD8PPfSQ
SpGSbdVFraqr0ri+8s8//6wl64SEBLVKNx3Jnm3btt2wYYNUGDBggCytV6+e
vkLVqlX79eunrW6za4cPH3aRTFNTU2Vpw4YNbcpzkUybN2+uvciuXweNOp/7
/vvvO3sl4QzJFAAAAPBIwCVTVSEiIkLLZQcOHPAomWr+85//tGrVynLnybeq
q4899pi+jnpS0GeffaZmy5UrV716dWcNfvrpp/pLf+2VLVs2PDxcX7JixQrX
95mGhIRUqVLFptDTZCqRMzg4+Pvvv3e4CZvXQaNu4NX2He4jmQIAAAAe8bdk
qi55tcli9g1qt6kKadzNZHrhwoWePXu++eabWVlZqkRdsKqenqQ9AWnNmjVq
qUS/qlWrSsnu3btViXp08PLly7U2p0+fLjlRPY5JXkmVbbWH3MbHx3fu3Pnd
d99Vs88884xU+Pzzz9VsWlqautzXRTKtUaNG8eLFbe4G9TSZyhZLliypPSLY
9eugGTFihBRu2rTJWd/gDMkUAAAA8Ii/JVNRpkwZKWnfvv28efPsG5SMVq5c
OZXmJk2aJFFRWnP/nKkaUaVt27Yff/zx+PHjZVvBwcFqiE/V1RIlShQtWrR3
794S3GrWrCkl/fv311Y/ePCgrCJblGQ3YcIE6aTFOsSMejavePXVV9WVsSNH
joyOjg4LC9OfRd27d2+RIkVCQkKk85L76tWrJ4HRdTIdNmyY/mFHiqfJVPpp
c/+si9dB06RJE3k1tDwL95FMAQAAAI94I5n26tVLUo8aB1M94Wfo0KH6CoUK
FdKe6nPkyBGpMGjQIG3p8uXL1Vgq2oW1+gavWiOkdndklSpV1q5da9E9m1ea
kllp1mHfJN526tRJDQAaFBQkoVIbaUUl0yFDhrzxxhsFChSQ6bJly0ostXk0
0LZt21q2bKmGOpU0161bN22MGJGVlSVZsnLlyqp74eHhixYt0q/+3XffNWzY
UD19qH79+ps2bbLYPXZJT52HnTx5sr6wc+fOUpiamqqVWP7+AOQ1a9ZIyaxZ
s65az5BKlNaf53X9OigSe/Ply2dz1y3cRDIFAAAAPOKNZGqIy5cv2z8tVi8p
KSkhISF3jctexMTEXLx4UV+oP70rmz569KiLEVXS0tKkBRfnEyWu2jxQSC8l
JUUL2jmSpBwREaFdIeypZcuWSTKV985+kcPXQRk3blyFChWSk5Nzt9F7HMkU
AAAA8IjfJlPzObzw2B9ICm7UqFGuO9azZ8/27dt7tMrevXtLly7NHaa5RjIF
AAAAPEIy1fhtMr1qDaeRkZGvvfaapytmZGSUKFFCe+aSO7Zv316vXr1du3Z5
ui1oSKYAAACAR0immvT09P3797t/ka35tmzZ4ukq8n5J0nR4va4z8iK4uA4Z
7iCZAgAAAB4hmQKGI5kCAAAAHiGZAoYjmQIAAAAeIZkChiOZAgAAAB4hmQKG
I5kCAAAAHiGZAoYjmQIAAAAeIZkChiOZAgAAAB4hmQKGI5kCAAAAHiGZAoYj
mQIAAAAeIZkChiOZAgAAAB7xn2R65Y6srKz/WmXoqBJZpFXzUjeAvCOZAgAA
AB7xk2Sqz6Tp6ekXL15MTU09d+5cipVMyKwUyiJ9PvVGT4C8I5kCAAAAHvGH
ZKrF0oyMDImfkkPPnz8v25LCm1YyIbNSKIukglQjnMKfkUwBAAAAj/g8mWqx
ND09XZ0nTUtLc9ZbWaTOn0plwum94PLly7///vvmzZtPnz7t6754gGQKAAAA
eMQfkqk6W6piqUy77rBUUOFUO3NqbH9gvq+//rpkyZIWi2Xnzp368nXr1oWF
hVms8uXLFx0d7aseeopkCgAAAHjEt8lUnfTMzMyUlt2JpYoKp7KKrMhpU/P9
4J6NVq6bSk1NjYyMtNzx+++/a4sSExPLlClTqFChqKioMWPGVKxYUSosWbLE
yztnDJIpAAAA4BGfJ1N1HW9ycrKLi3jtSWVZRbum18AuIUcGJtOaNWtK3uzS
pUu3bt1skmnHjh2lZM6cOWo2Pj6+cOHCpUuXPnXqlBf3zSAkUwAAAMAjPk+m
mZmZFy5cSElJ8bTnsoqsqE6bGtgl5Mg+hKbfYb/IdVNhYWHz58+XiUGDBumT
qXzM8ufPX61aNf3nbcSIEVJn+fLlXtszw5BMAQAAAI/4MJlmZWWdPXs2Pj7+
wIEDSUlJnvb8zJkz+/fvj42Njbc6gTxLuOPkyZPnzp1zFvkNTKayUTVhk0wP
Hz4ss71799ZX/vbbb6Vw/Pjxef7oeR3JFAAAAPCID5OpiqXHjx+XPly+fNnT
nssqe/fujYmJiYuLI5kaIuHvzp8/7/CN0wfPH61ynUw1Nsn0u+++k9lRo0bp
68jnRAojIyPz8qkzB8kUAAAA8IgPk2liYqKESomWe/bsuX79uqc9l1V27959
7NgxddrU16nubmCTTE+ePOnwjTMhmc6dO1dmZ82apa9z6tQpKWzZsmVePnXm
IJkCAAAAHvGHZCoBM3fJdNeuXSRTA3mUTNNzkpdkumHDBpl9++239XX++OMP
Kezbt28ePnQmIZkCAAAAHvHt1bzaOdPcXc3LOVNjeXQ1r1eTqbytMturVy99
ndWrV0vh+++/n5dPnTlIpgAAAIBHfPsEpJSUFAmn+/btS0xM9LTnsop0nvtM
DeTRE5C8mkzlsxESEhIREZGRkaHVef3116XOypUr8/jBMwHJFAAAAPCIz0eN
kQhz9uzZ3CVTWVFWZ9QYkxn4bF6NTTIVXbt2lZKPP/5YzcbGxhYsWLBs2bLJ
ycnG75LRSKYAAACAR3yeTDMzM6XZ+Pj48+fPu99tqSyryIqMZ2o+c5Lp6dOn
Q0NDCxUq1K9fv9GjR1esWFEqLFu2zDv7ZDCSKQAAAOARnyfTrKystLS05OTk
uLi4jIwMd/os1aSyrCIryuokU5N5I5m+8sorEjx37typL1y/fn1YWJjFKl++
fNHR0V7YG68gmQIAAAAe8W0yvao7bZqQkBAbGyvpxnWHpYJUk8qcMPUVbyRT
Zy5durRjx44tW7acOnXKkM6bg2QKAAAAeMQfkqm0KaEmNTU1Li7u6NGjycnJ
znori6SCVJPKsoqsSDI1n338dMHXnfUNkikAAADgEZ8n06u6cHrhwoWEhIRD
hw4dOXLk5MmTly5dyraSCZmVQlkkFaQasdSHSKY5IpkCAAAAHvGHZHpVF05l
E2ooGcmh+/bt22MlEzIrhbJIKhBL4edIpgAAAIBH/CSZXr0TTjMzM9PS0mRD
58+flxyaZCUTMiuFskgqEEvh50imAAAAgEf8J5kqWVlZKp9mZGSk6cisyqRS
wasdAPKOZAoAAAB4xN+SqUZFVA2BFAGEZAoAAAB4xG+TKRC4SKYAAACAR0im
gOFIpgAAAIBHSKaA4UimAAAAgEdIpoDhSKYAAACAR0imgOFIpgAAAIBHSKaA
4UimAAAAgEdIpoDhSKYAAACAR0imgOFIpgAAAIBHSKaA4UimAAAAgEdIpoDh
SKYAAACAR0imgOFIpgAAAIBHSKaA4UimAAAAgEdIpoDhSKYAAACAR0imgOH8
KplaAABArvj6GA7cW0imgOFIpgAA3AV8fQwH7i0kU8BwfphMfd0LAAACCUdP
wHwkU8BwJFMAAAIaR0/AfCRTwHAkUwAAAhpHT8B8JFPAcCRTAAACGkdPwHwk
U8BwJFMAAAIaR0/AfCRTwHAkUwAAAhpHT8B8JFPAcCRTAAACGkdPwHwkU8Bw
JFMAAAIaR0/AfCRTwHAkUwAAAhpHT8B8JFPAcCRTAAACGkdPwHwkU8BwJFMA
AAIaR0/AfCRTwHAkUwAAAhpHT8B8JFPAcCRTAAACGkdPwHwkU8BwJFMAAAIa
R0/AfCRTwHAkUwAAAhpHT8B8JFPAcCRTAAACGkdPwHzeSKYLFy7s06dPcnKy
Eb/xc25t1apVw4cPT0pKMmRz/mDlypWyR4a8gOfOnZsyZYpMHDhwoE2bNuXL
l3/00UflFZOSTZs2bd68Oe+bgD2SKQAAAY2jJ2A+byTTKlWqyN/y8uXLjfiN
n3NrgwYNkgoHDx40ZHPiyJEjW7ZskZ01qkFPDRw4UPbo0KFDeWxHXpOIiIgJ
EyZIyC1XrlxkZKTs19ixY4sUKSKxNCYmpmzZstOmTTOkz9AjmQIAENA4egLm
80Yy3bhx47hx4y5evGjEb/ycWzM8mb788svS4G+//WZUg54yJJmmpqbWrFmz
TZs2V65cWbhwoQR8mdDa7969u0ysXbs2KCho5cqVBnQaOiRTAAACGkdPwHx3
wX2mJFN7EkI7duxYsWJFdUnwrFmzWrVqpS2dOHFi27Zt1fTw4cOLFSu2f//+
PPYZeiRTAAACGkdPwHzeSKbR0dG1atVSmUjilUxPnjx52rRp9erVK1iwYJ06
dZYsWWKzyqJFi55//vlSpUqFh4e/8MIL+lCmb+2qNXNNnz69adOmhQoVUk3Z
J9PY2Nhhw4bJWqVLl+7Spcvq1au1Ra77c+7cOVlasmRJaVB6ItNbt251uI/S
pvRBat53333PPPPMtm3btEWvvfaarCgvbIcOHaQDYWFh3bt3P3nypH713bt3
9+nTp0KFCmXKlOnZs+eBAwdkFdlTtdQ+mbrYI4fWrVsnLcyYMUPN7tmzJ1++
fD/99JNMx8TEVK1aVV4BtejSpUvBwcGtW7d23SA8QjIFACCgcfQEzOeNZNqj
Rw/5W1ZZ7I8//pDpihUrSpBs1apV9erV1V/6li1btPpz586VEgmJTz/9dM2a
NWVaIqp0zL41MW7cOJktXLjws88++9BDD8l0RESEPpmmpqbWrl1bSurWrSsN
Sk1JXuvXr1dLXfdHdlByn2rwySeflGnJdPY7KDlaKpQoUaJNmzaPPPKITEtr
Ws2OHTuqTVSpUkUSn+yXak1bXbKh5FkplP5LC8WKFatcubLMqitsr9olU9d7
5JA0JfU3btyolUicl3AqcTsoKOj555/PyMjQFlWrVk0WnTp1Kof3FW4jmQIA
ENA4egLmMyeZSjrTTj6OHTtWSvr06aNmjx49KrGodOnSktdUyccffywVIiMj
7Vvbv3+/BKvQ0NC4uDi1VAVVfTLt37+/zEq5mt23b1/x4sVLliyZmZnpTn+u
unE1b79+/Ro2bPjnn3+q2RkzZkj9MWPGqFmVTCX9ZWVlyezZs2elw1Jy/Phx
VaF9+/YyO378eDWbnJzsOpm63iOHVPK1OVGbkJDwww8/2F+426lTJ6m8bNky
Z63BUyRTAAACGkdPwHzmJFP9TY4SIaWkefPmavbLL7+U2ZkzZ2oVrly5smLF
ig0bNti3tmDBApn+8MMP9ZUrVaqkT6ZVq1atUKGCvj9DhgyRCnv37nWnP1c9
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
8vtcevLdd9+p2Y0bN8psyZIltVO6Ko498cQTw4cPr127tsXRfaka/eXQ9v78
889c9NBhMm3btq0UfvPNN/rCpUuXSuEzzzxj34hKphLDly9fnpmZuXr1avVJ
kDgzefLks2fP/uc//1FPUZZF2lpdu3aVVdRTleRfqVywYMGdO3dKaLp06VL/
/v0t1v+LyMVO+aHRo0fL7shOaSXbt2+XEvnQJicnO1xF/i7mzZvn7D8i3Mzs
O3bsCA8Plw2VL19eAqP6+Mnb5Ga3VTK1WC9KP3HiRGJiYrt27VRJ48aNN2/e
LL923nzzTZmtU6eOWuXw4cMyO2LECDWrbiWOjIyU91T2aNeuXerv9LfffnOz
D/BzHD0B85FMAcORTO8OEydOtIlIlStXtsmPernbSseOHSUT2TQlm9bXOX78
uM1pO1GrVq19+/YZsaO5oR4xNHbs2L+sV6uqoKqdGN26daskOAlf6gSWhOgG
DRpIQHN2D6D8vcx07sKFC7noocNk2rx5c4vdiDYqVjdp0sS+EZVM9Zm6Xr16
UtKvXz+tZNCgQVIyY8YMNXvz5s1SpUo1a9ZMzcbExFis5/K0JzbLkXT8+PHL
li3LxU75oTVr1sgO1q9fX81KRnv88celZMyYMc5WkZfI+f9DWOQvwp3tSnis
Vq2afsVHHnnE/ZuFVTItVKiQdkZ+7dq1qh2tEUnWFmvEVrMffvihzP7yyy9q
Vg0y9c4772htrlixYvbs2V690RVm4ugJmI9kChiOZHrXmDNnjv6yXov15sp2
7drpb0TNSzJdsmSJui9SI5vTzpbq3bhxQ2Kg/spDi/XiwylTpvjk1raPPvpI
CxGLFi2S6YoVK169MzDo4MGDLbozqmLBggVSMnr0aNN66DCZPvvss1K4fv16
faH0UwpbtGhh34hKpvpBUdV1vHPnztVK5H2Rkvfff1/Nyt++flaowU0kBHXo
0EHeXGMfteRz6mFE8lG8du2azMprZbEOB5yRkeFsFUmvH3zwgbP/iFi3bl2O
G5X0p64nl09UUlKSpP733nsvKCioePHibt7ZqpJprVq1tJK4uDgpue+++7QS
+cuyWM+Pq1n58EhKVbspFi9erP4Mq1evPmzYMEnKJt9SDW/j6AmYj2QKGI5k
ejdZu3atfQ6tW7euJBTtmbqevsjyi3fVqlX169e3aVY2JJtzseKuXbuqVq1q
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
kun58+e1EplWf+AP66iSL7744uqdZNqyZUt9O3/88YcURkZGXrWecJTpp556
Sl9BjT7WoUMHNetmMk1JSdEqTJw4UUp++OGHq3dS3i+//KJvoXPnzq6T6bJl
y15++eVmzZrVqVNHnZt44YUX3NlcXFycOrOsby0mJsZZMs3xNbShBg2X18RZ
z+0tWbJEVhk1apT7q8AhkimUS5cuVa9evVGjRr7thr+NKQMA/o+jJ2A+c5Kp
ipCim44Eq7Zt227YsOHqnWRqE9MkD6pVZDoxMVGmtQfJKhL6pFB72KybyVTf
MTVCuoqKAwYMkOnffvtN30KPHj1cJNOoqChZmj9//iZNmnTt2lUyqX0ydbY5
eTGDgoLkJ6u+QXkvnCXTHF9DG6mpqVK5YcOGDnvukCRcWUU66f4qcIhkCj/k
V2PKAICf4+gJmM+cZCrKlStXvXp1Z6toT0DSF6pLWydOnKhmK1SoYFPh559/
lgrak2ybNWtm+fttlT179nQ/mc6ePVum1fOaNHXr1nWWTE+fPm2xPiJJa/DA
gQPuJ1NRq1atQoUKxcTEaBXeeustZ8n0ak6voT3J6VWqVHG/vrpP9rPPPnN/
FThEMoV/8p8xZQDAz3H0BMxnWjJt166dFC5fvlwrmT59utRUjw/SnoA0f/58
tTQ9PV097fb7779XJR06dNAnx6ysrJYtW+rbVA8Ikp9YajY5OblMmTLuJ9Pt
27fLdM2aNWU31dKlS5eqXjlMpupi4+bNm2sl6hSt+8lUXdxbp06dNWvW7N69
e+zYsWpzzpKp69fQXo0aNYoXL64fWMe1ESNGWHRPlEKukUzhz7777ruyZcva
5FOfjCkDAH6LoydgPtOSqYQ7yYkFCxbs2bPnhAkT1GNpa9eurX82b8mSJUNC
Qrp16/bWW2/Vr1/fYn2wrRasJKCFhoaqCm+//fbjjz8uFZ577jmtS5JJLdYx
XyIjI0ePHh0eHi6V3U+monfv3jKrRhTt1auXNKXGpnGYTKVj5cqVU0Fy0qRJ
EhvVuDDuJ9Ord87qKkFBQSNHjnSRTF2/hvaGDRum3/0cNWnSpESJEvpxZJA7
JFP4ubNnzzKmDAC4wNETMJ83kql6alBqaqpN+bZt21q2bFmoUCFZGhwcLAEz
MTFRLTp16pQUShicOHGi5EGZLlWqVI8ePWwa2bFjR6tWrVQF+REVFRV16dIl
fYVRo0apLKlOAbzyyisW3aNr7TsmidKiG/Hz8uXLffv2VWO7SKp95513Bg0a
JNOHDx92uKd//PGHGvZUVKlSZe3atRbds3lz3Jwijc+ePXvmzJnyXqjHIsmO
q0Vq60eOHHHnNbSn7lqdPHmyswp6kqDz5csnL6k7leEayXTNmjXR0dFbtmxx
uDQ9PX3EiBFSISUlxeSOQc/hmDJDhw69ypgyAO55JFPAfN5Ipq6lpaXFxMS4
ODGXmZkpFVxsSH7WxsfHO1t65coVWf3ChQu57mFWVpa0IFtxs35SUlJCQkIu
NvTNN99IVtWGTxXjx4+36G6tdSbH11DzxhtvRERE2OR3h8aNG1ehQoXk5OQc
ayJHJNPJkyfLRl988UWHS0eNGiVLH3300du3b5vcMZP5fDzTHMk3ScOGDW1O
njKmDOCfDh8+/PLLL8vPJJ9sXX51REdHv/XWW86+ulevXi0VlixZYnLHvIRk
CpjP/GQKjXrmUq1atT766KNly5YNHDiwePHi+fPnlzfFqE1Ihm3UqNHrr7/u
utrevXtLly7NHaZGIZnKZ0k2+tBDD9kvSkpKUpc9bN261eRemc8fxjPN0Y0b
N8aMGWMzpkxISMi0adMYUwbwE7/++muHDh2CgoLkz3PWrFk+6cPNmzfVt3ds
bKz9Uvm6K1GihCzdsGGD+X3zBpIpYD6SqQ+lp6dHR0cHBwdrvwbDwsI2b95s
7FYknEZGRr722mvOKmzfvr1evXq7du0ydrv3MpKpGoBYPtvyjWGzSD0btn37
9iZ3ySf8ZDxTd8gntkqVKjYnT5s3b37y5Elfdw24d926devbb79t3Lix/g+z
YsWK169f90l/5NtMOrBixQr7RUOHDpVFTz75pPm98hKSKWA+kqnPyW/4bdu2
yaHn6NGj7j9H11Nbtmxxtmj//v1nzpzx0nbvTSRTUaFCBdmuzetw+PDhfFYy
YX6X4FpmZqYa1lmPMWUAn7h27dqCBQtq1KhhcWTVqlU+6dWrr74qWx85cqRN
eXx8fIECBSzWhy76pGPeQDIFzEcyBQxHMhXq0a+ffvqpvvC5556Twpdeesn8
/sBNDseU6datG2PKAOa4fPny1KlTy5cv7zCTNm7cWP5IfXWT/ueffy59ePbZ
Z23Ke/ToYbE+v9EnvfISkilgPpIpYDiSqRg9erRst3///lqJGjK4SJEiycnJ
xm5LfqTNmzdvrhObNm0ydnN3vbNnz6rRk/Xuv/9+Zw9bBmCIpKSk6Ojo4sWL
2wfSoKCgsLCwJk2a+LaHaiT30NBQm0LpXkhIiD8/7S0XSKaA+UimgOFIpn9Z
B46R7davX1/NSnhUYxCPGTPG8G3dvHnT4ckFpWPHjoZv8V4god5+TJlhw4Zd
ZUwZwGhHjhzp16+fuiDWhhRGRUXt37+/mJWv7jBV5M8/f/780qtTp05phU89
9ZSUyJdDLhrcu3evs/9UFL69VINkCpiPZAoYjmQqEhIS1G+qa9euyezKlSst
1md8ZWRkGL4tib0ffPDBTCfWrVtn+BbvEc7GlJEfyb7uGnCX2LFjx3PPPace
umujePHi0dHRZ86ckWrbtm1ThTLh2w7XrVtXuvHdd9+p2Y0bN8psyZIl5Sdi
LlobM2aMi/9X9O3wVSRTwHwkU8BwJNO/rGmxVKlS6qfF9evXq1atKtNz587V
Kqxevfrxxx/XX2p769atLl26PPHEE5cuXTK/w97g/+OZ5kjeu9GjRzOmDGAs
+YaUcGfz0F1N+fLlp0yZcvnyZa3+O++8oxbJhA+7Lfr27SvdGDt27F/WL20V
VOULIXetybHS2X8qigsXLhjad8+QTAHzkUwBw5FMFXWJ1+LFi9VDM2rUqHHj
xg1t6Q8//CCFEydO1Eq++eYbS26fj5Senp7mxJUrVwzYmVwJiPFM3eFwTJkn
n3ySMWUAT127dm3hwoU1a9Z0mEnle3LBggXqUhO9Bg0aqAoy4ZNuaz766CPL
nbskFi1aZLGOYnNVd5F/69atX3jhBf0q33///eOPP/7BBx+Y3de8IZkC5iOZ
AoYjmSpvvvmmbPqNN94IDw+XibVr1+qXnjhxQgr79OmjZrOzsytVqmTzfKSb
N2+6c2LO9X2mnTp1Mna/3BdA45nmKCMjw+GYMl9//bWvuwYEhrS0tGnTpqkR
tezJF4V8STr8xjt//rx2ua9MyKz5ndeoZ9lFRETIl7b8K9M2A0s1bNgwJCRE
vpbV7I0bNySGS0l8fLx9a9KIs/9UFL56BLFCMgXMRzIFDEcyVSSzaD+67B8p
KT/AChcu3LhxYzU7e/Zsi+75SLt37+7fv3+ZMmUk+7Rt2zYuLs7FhqSpBg0a
POyEBGRv7N296dtvv2VMGcBTSUlJI0aMkG8z+0AqSbNDhw6//vqri9XV9SQa
mTWt5/YkMKqY/OGHH8q/8h1rk6b79Okj5dpdDOqaGWfPR3rvvfdc/L+ib29p
J5kC5iOZAoYjmSqHDx/WfmDs3LnTvoL8pFGjD6Snp0ve0Z6PdPLkyZIlSxYt
WvTVV1+VHzn58+cvV65cQkKC2TsARxyOKfPAAw8wpgxg7+jRo/379w8JCbGP
XQUKFOjbt++hQ4dybCQyMlK/osya0HMX9Nf22//hT506Vcp/+uknmc7Kyrr/
/vtLlSrl7PlI8+fPd/afiuL48eNe3xnnSKaA+fwnmV65Q77H/muVoaNKZJFW
zUvdAPKOZKrcvHmzcOHCsnWbe440L774oixNS0tTj2ecN2+eKm/RooXMbt++
Xc3++9//tuiu+4U/mDt3rnpz9ad+GFMG0Pz+++8dO3Z0+NDdYsWKDR8+XD10
N0e3b98OCwvTry6zvr3MtWvXrqonrVu3tl+6bt06WfTpp5/K9JQpU2R6+vTp
pvfRACRTwHx+kkz1mTQ9Pf3ixYupqannzp1LsZIJmZVCWaTPp97oCZB3JFM3
vf/+++q/1osWLVqzZk31fCT5Y7dYrxDTqt26devBBx/Mly+f/VNB4EMxMTGP
PvqozU/uOnXqMKYM7mWSGSWaNWnSxD6QinLlyk2ePFn/0N0c7du3z74dKfTe
LuRIdkH6EBwcfODAAfulsbGxFusTBuRHY8mSJcPDw68G5n9Y+fPRE7hb+UMy
1WJpRkaGxE/JoefPn5dtSeFNK5mQWSmURVJBqhFO4c9Ipm5as2aNxXohqPyr
jTq6detWme3bt6++Zps2baTwyJEjvugmnHI2psz06dMZUwb3muzs7C+//PKh
hx5ymEmrV6/++eef5+K/19RpRxtS6I1dMIT8bCtYsGDnzp2HDx9u8fVdsXnh
z0dP4G7l82SqxdL09HR1njQtLc1Zb2WROn8qlQmnd5PMzMz9+/cnJyc7q3D5
8uXff/998+bNp0+fNrNjuUMyddPRo0dV95o3b64Vfvfdd1IiP2n0NXv16iWF
u3btMr2PeXIXjGfqDsaUwT1OfpNMnz79/vvvd5hJH3/88TVr1uT6/2rU3Q02
pNDQPTBY3bp1Q0NDJZ8+8sgjvr3wOC/8+egJ3K38IZmqs6Uqlsq06w5LBRVO
tTOnxvYHJktKSmrfvn2hQoXUISA8PHzZsmU2ddatW6fdZZMvX77o6GifdNV9
JFM3Xb9+PTg4WLq3Z88erXDVqlVSMnr0aH3NgQMHSqHrx1f6obtmPNMcyRdy
//79bX48M6YM7nrJyckjR450+NBdIUc37X753MnMzCxQoIB9y1Ioi4zaC8N1
795d9fN//ud/fN2X3PPnoydwt/JtMlUnPeXbVVp2J5YqKpzKKrIip03N94N7
Nlq5bury5cuVKlWyWMfsnjZt2vDhw9XxfcWKFVqdxMTEMmXKSHSNiooaM2ZM
xYoVpcKSJUu8vJd5QjJ104YNG6Rv8htGXyi/ZCzWe5T0hd26dbP4+taqXLib
xjN1h8MxZeT9ldfB110DDHbs2LEBAwY4e+hunz59Dh48mPetrF+/3mHmFbIo
7+17iRoLRoK5rzuSJ/589ATuVj5Ppuo63uTkZBcX8dqTyrKKdk2vgV1CjgxM
pl999ZV87Y8YMUIr2bx5s5R06dJFK5HQKiVz5sxRs/Hx8YULFy5duvSpU6e8
sXeGIJnmKCMj4/jx42FhYUWKFElMTNQvkt970uGoqCh94TPPPCOFDBzj/86e
Pdu2bVubn9APPPDAzz//7OuuAcaQr/dOnTo5e+juG2+8cfr0aaO2NXjwYGl2
3LhxWolMq23JIqO2Yqxbt2499thjwcHB7gyI48/88+gJ3N18nkwzMzMvXLiQ
kpLiac9lFVlRnTY1sEvIkX0ITb/DfpHrptavXz969GgJJlrJmTNn5EDQrFkz
NSuft/z581erVk3/wZMkK3WWL1/ujb0zBMnUNXk3tR9yc+bMsVkqHyT5SVOn
Th2t5MaNG2XLli1RokTg3q90r5G31X5MGfnFfjUwH9EJ/GV96K4cs5o2berw
DGZYWNikSZMMvzwgPj7e2SI/fLKQOlK/9dZb8oL861//8nV38soPj57AXc+H
yTQrK+vs2bPyrXvgwIGkpCRPey4RZv/+/bGxsfFWJ5BnCXecPHny3LlzziK/
gcnUngRV9f/Davbw4cMy27t3b32db7/9VgrHjx+fi0+dOUimrmVmZnbo0KFL
ly6rV692WEGdKN+9e7eaXbt2rcXuab3wc8eOHXM4pozDYSYAf5adnb1o0aJa
tWo5zKTVqlX77LPPrvK/Ln/9FR0drV6TqlWryk8CX3cnr/zw6Anc9XyYTFUs
PX78uPTBo7G9FFll7969MTExcXFxJFNDJPzd+fPnHb5x+uD5o1Uek2laWtqI
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
YF+Ulkw5LKJyEEjBhthhMmXfBqdNmzadZ8uWLXorx8XFzdDx5ptvUgtubm53
796lOp999hk9rV69+vr16y9cuDB79myV5v6Zt27dEthpQECAVhdTp05lW2P8
+PGszqxZs+jpq6++umvXrjNnzgwZMoSelipVir5QWXd7gSk5OTmUMrRuWYM5
ZUAv4zfdpb/ra9euyT1Gu0N/p9wvfJFMAUAgxSZTANtlb8mUchx14eHhYXEL
ycnJ7Oq7ffv2qTWXdNasWZOebtu2javTpUsXKlmzZo3Fna5du5ZWadOmDbsu
NDExkYIwfXHlf1hvv/021dmwYYPF7wVE9Ndff+nOKePl5YU5ZYC5ePFi//79
9d50t0yZMlOmTMH/ZZLLihUruM8CyRQABEIyBRCdvSXT/fv3UxcfffSRxS2w
SUPGjBnDntI2XLdu3fjx4/m3KFm4cCE7Q2pZp7du3SpVqpSLiws7J0vWr19P
LUycOFGr2okTJ6Kjoy1+LyAuzCkDugoKCo4ePdqpUyfdQKrS3HPss88+o28s
cg9TZDY0nyl9t3R2dn799df79OmDZApmeaAh9yhANkimAKKzt2Tq5+dHXcyY
MWPp0qX9+/cfOXLkli1bhN+v5vDhw+zLpJFvklFRUXXr1qVqQUFBFnSal5fX
tm1bqk/fV7lCyqRUQgk3MTHxwIEDy5Yto69Pxe/bbPHw66+/Yk4ZUGsu8/7h
hx+aNm2qN5PWr1+f/h0orjfdtZX5TNPT0xs2bFiiRIlLly59/PHHSKZglu0a
co8CZINkCiA6e0umffv21f2K2Lhx44cPHwpZnb7DqHiX6Wqhb6HvvPMOu1pv
8uTJubm5FnS6Z88eepWiDX06XGHv3r2pkL7HVqxYkWuhWrVqJ06cMH8b6If5
TEWkd06ZWrVq4bY2diItLW3dunUsnelq1arVjz/+WLxvumsr85my/+nn5+dH
j5FMwVyDNeQeBcgGyRRAdPaWTGvXrq3S3Dp137599+/f/+WXX1iJl5dXQUGB
8XXPnDmj0tx319B89/wb8K5atSonJ8eCTjt37kwvzZ07l1/I3f21bt26W7du
DQgIYBcHli9fnkKQpRvjJZjPVFyYU8Y+PX36dOHChfz/g8TXvXv3P/74Q+4x
wnNHjhyhD+Wtt95i/xcRyRTMVU1D7lGAbJBMAURXnJJpcHDwKQPCwsJYnaCg
oG3btvGj5Y0bN0qUKEH9hoSEGG9/2LBhVG306NGGKkRERERFRa1bt45dzevt
7W1up3fv3qXw4ujoqHUvlDfeeIMqu7u7c1fw5ufns/vtaGVYi2E+U2swNKdM
aGio3EMDkdEf7/jx40uVKqUbSJ2cnCj1mPwXBqQUFxdH/6KWKVPm9u3brATJ
FMzCTSrHfcEAe4NkCiC6YpNM8/Ly9J6kYPr06WNk3TZt2lCdgIAAI3UouLHv
nPQPkcnBUBRVaeYbpX+FzOp03rx5VPjBBx9oVe7WrRuV06u6lXv27GlyPCAj
Q3PKrFmzBnPKFA+XLl3y9vY2dNPdyZMn46a7CkQfGX1A/fv3P/E/7EIU+mul
xzb3q3AkU+lt3LiRbXZ6IPdYQB5IpgCiKzbJtKCg4JNPPhljADdzaFpamu7l
ryz37dixw0j71ALV0T2lSOEiKipK63+ZUmH16tVV/7sJksBOaa1q1apR4bFj
x7Qqjxw5ksqXLl3KL2T5t127dkaGDQrx119/sTPpfJhTxtbR3yD/Gn6+KlWq
+Pn5PXv2TO4xgn4eHh5G/memiD/hlwaSqfS4O0jQA7nHAvJAMgUQXbFJpkKE
hIRQ+87Ozvw7RmZnZ7M8eP78eSPrDh8+nOqsXLlSqzw0NJTKK1asyN3viNDj
ChUqsBOswjt98OCBSvM7Vt1TaatWrVLpnEvdvHkzFc6cOVPwBgA5paamsv/D
wFe+fPndu3fLPTQwD/2BBwQEeHp66g019erVo7/N9PR0uYcJxixbtmzKy157
7TX6+Hr06EGP79y5I/cAzYNkKjE6TLOjPKEHuADGPiGZAojOrpJpXl4euzPJ
5MmTucL58+dTSaNGjbhoSWHz3LlzsbGx/HVbt25N1Q4fPqzVZkFBgbu7O720
evVqrnDRokUqzc9CqU2Bnar/NyUNdaQ7cvoHzc3NzcHB4bfffuNK2G2U9u/f
b+HmADnonVNm8ODBNnf1oH1KS0tbv369oZvutmzZstjfdFcgG5rPlKP3d6Z6
DwcKhGQqscuXL/P/9ump3CMCGSCZAojOrpIp2blzJ+uladOmc+fOZTfCLV26
NH86DxZCN2zYwJVQ/HR1daVCvb8X27t3L2uzRYsWFDm7dOmi0tyF9ejRo8I7
Jf/973+pfOTIkXpH/sUXX6g0v1319vaeM2cO+25MicbkLYVBaQzNKfPnn3/K
PTQwKC4ubvHixYZuututWzebu/7TqmxlPlM+vclU93CgTEimEmMXMnHoqdwj
AhkgmQKIzt6SKQkMDHzllVdYX5Qfmzdvfu3aNX6FN998k17atGkTVxIdHU0l
bm5uhmIgfZmpWbMmd5Bq3Ljx6dOnzeqUjB07ll6lfGpo5JRwq1atyhqpXLny
mDFjsrOzzX7/BmA+UynRjkQ7mO6cMjNnzsScMkpz7969CRMmGLrp7qBBg65e
vSr3GBXHVuYz5RsyZAh9pnv37uUX6h4OlAnJVGI9evTg/1NAT+UeEcgAyRRA
dHaYTNWaXBAZGUn/pKSkpIjY5qNHj2hjxsfHW7XTiIiIsLAw0X/VgvlMpRce
Ht6yZUutsIM5ZZTj8uXLAwYM0HvT3dKlS/v4+Dx8+FDuMQIUQjKVUnZ2dpky
Zfj/INBTEf9HMdgKJFMA0dlnMgVdmM9UFjk5OfPnz9fKPi4uLmvWrMF12jI6
duwYu+peV+XKlX19fXHTXVAUHD2ldObMGd1/GahQ7nGB1JBMAUSHZAogu7Nn
z+rOKUPJyLZ+plcM5Obm7tq1q1mzZnozKX1GmzZtwk13QYFw9JSSn5+f7r8P
VCj3uEBqSKYAokMyBVCClJQU3TllKlSogDllpEFfGDZs2MDud62rRYsW9EHw
76QNoCg4ekqpffv2uv9KUKHc4wKpIZkCiA7JFEA5fvnll0qVKml94Rk8eLBt
3UnGtsTHxy9evFh3szNdu3b9/fff5R4jgAk4ekqGwoWzs7PuvxVUSC/JPTqQ
FJIpgOiQTAEUJSYmRuuujyrMKWMd9+/fnzhxotYdkhknJ6ePPvqIvnXIPUZb
ZYvzmdo0HD0lc/z4cb3/F4vQS3KPDiSFZAogOiRTAKVhc8poTVOCOWVEdOXK
FQqeFD91v1tSUJ00aRKmTyoiW5zP1Kbh6CmZOXPmGEqm9JLcowNJIZkCiA7J
FBjMZ6o0N2/e1J1TxtPTE3PKFMXx48e7dOmi91tlpUqVlixZYmjWJzCLLc5n
atNw9JRM69atDSVTeknu0YGkkEwBRIdkCgzmM1UgQ3PK+Pv7Y04Zs+Tm5u7e
vbt58+Z6v0/WqVNn48aN+I0Y2C4cPaWRmJiod4Jjhl6iCnKPEaSDZAogOiRT
YDCfqWJhTpmioG8ClDope+r9JklZddeuXbjpLtg6HD2lsX//fkOxlKEKco8R
pINkCiA6JFMA5UtJSRkxYoTWV6AKFSrs2bNH7qEpV3x8vK+vr6Gb7nbp0gW3
K4FiA0dPaUyePNl4MqUKco8RpINkCiA6JFMAW6F3TpmPP/4Yv+bT8uDBg0mT
Jum96a6jo+PAgQOvXLki9xgBxISjpzQaN25sPJlSBbnHCNJBMgUQHZIpgA3R
O6fMq6++eurUKbmHpghXr14dNGiQ3pvulipVasKECffv35d7jADiw9FTArGx
scZjKUPV5B4pSATJFEB0SKYAtqWgoGDjxo26c8rMmjXLnueU+f3337t27ar3
i2KlSpUWL14cFxcn9xjtCOYzlRiOnhLYvXu3kGRK1eQeKUgEyRRAdEimALbI
0Jwyf//9t9xDk1Rubu6ePXtatGih9yti7dq1N2zYgJvuSg/zmUoMR08JfPLJ
J7SRO3XqtGzZMjcdlStXZp8CVZN7pCARJFMA0SGZAoP5TPVKTEzcunXr1KlT
V6xYcebMGd2buF64cGG3jpMnT3Krz5s37z//+c+CBQuSk5PFHVt2djY1rjun
zNq1a+1hTpn09PTNmzfr3rWYadasWWBgoO7nZfIDzcnJCQgImDVr1qJFi44e
PUr/SGqtbr0PtDjBfKYSw9FTAqNHjw4ODlZrfvKv+2/Oq6++Sq9Sbq1Xr57c
IwWJIJkCiA7JFBjMZ6qLvmZo3XGoZ8+eWifgvLy8dL+itG/fXq05ndeiRYvK
lSsPGzaM/tu6dWtrzE5y9uxZ3SlRunTpUoxPV9G+6ufnx52h0EKfyLFjx/Su
aPIDpX8SKdJqfZRcApXmAwWwAI6eUjKUTOUeF0gNyRRAdEimwGA+Uy0JCQmU
02mH9Pb2Pnny5O7du1lmGTp0KL9ahQoVqHDatGnTebZs2UIvnT9/nl66evUq
PQ4JCaHHFy9etMZQU1JShg8frvU1qVjOKfPw4UMfHx9DN90dMGDA5cuXDa0r
5AOdN28eS6P02Z05c+bNN9+kpx9++CF7VbIPFMBcOHpKCckUGCRTANEhmQLo
tX37dtoba9WqlZOTw0rOnj1LJeXLl+fOlD169IhKPDw89LZw6tQpejUyMpIe
03/pMbVgvQHv3bu3GM8pQ0lw8ODBhm66O378+Hv37hlvweQHGhYWRu1T7KWk
zyokJye7ublR5qUPWi35BwogHI6eUkIyBQbJFEB0SKYAep07d27evHk//vgj
V5KVleWgkZiYyEr2799Pe+xHH32ktwU6BlEOatas2dq1a+m/9L0lPT3dqmOO
iYnp3r277vclm55T5o8//ujWrZvu90BSsWLFRYsWCbzprskPdM2aNSzL89ca
NmwYFa5YsUItxwcKIBCOnlJCMgXGrGS6H6xMgtAEEkAyBRCioKDgiy++oP2z
TZs2XKGfnx+VzJgxY+nSpf379x85cuSWLVv4U7fcvHmzV69eFGfov+Hh4dKM
c8OGDcVgTpm8vDxKkbr3H+a+BK5bt64ok5LofqBDhgyhp+vXr+dX27RpEz+u
Sv+BAgiBo6eUkEyBQTJVFAlCE0gAydSevfbaa5StdMuDg4PHjh0r+XAUKj4+
ftiwYe7u7irNtaBXrlzhXurbt6/u95PGjRs/fPhQxgGrNQFKdyKVZs2a2cSc
Muymu/Xq1dObST09PQMCAopy6yFDH2jPnj2pJDAwkF95165dVNitW7civSX7
g/lMJYajp5SQTIExK5k+VgB+jit+fUkQmkACSKb2zMfHhzuqsojKTgISeknu
0SnF6dOnua3UsmXLGzducC/Vrl2bCps2bbpv37779+/T1xVW4uXlJfu8LbY4
pwwdu5cuXcruU6SrU6dOQUFBRe/F0AfaoUMHKjl06BC/8tGjR6mwXbt2Re/X
rmA+U4nh6CklJFNgzEqm0QrAT4vFry8JQhNIAMnUntGXcL0RQPf7uT1LT0+P
jIwMDg4eOnQobZkSJUqEhISwlygobdu2LSEhgatMMYcqUDWujrzOnDmjd06Z
x48fyz20lzx69Gjy5MllypTR3RUpXHt7e1+6dEmsvgx9oOwnugcPHuRX3q/5
KTGFYrF6txOYz1RiOHpKCckUGLOSaYwC8NNi8etLgtAEEkAytWdpaWnOzs66
R1gqxGV4erVp04a2z+LFi03WCQgIkGxUxhmaU4Z/LyAZXbt27eOPPzZ0091P
P/307t271uud/4GOHDmSHn///ff8Ct999x0V9unTx3pjACg6HD2lhGQKDJKp
ovqSIDSBBJBM7ZyXl5fuEZYK5R6X/Cibh4aGJicn8wu3bdum4t0zh+o8efJE
a0V2I9kdO3ZINFBh9M4pM2TIEBnPap08eVL3TsJccF64cOHTp09F7M7kB7pg
wQJ6vGrVKn6FlStXUuHEiRNFHAmA6HD0lBKSKTBmJdMnCsBPi8WvLwlCE0gA
ydTOsS/eWqhQ7nHJr1+/frQp/P39+YX0lAo/+OADtWaGTZXm/DL/x3TZ2dnV
qlWj8vPnz0s9YlOio6P1zikTHBws5TDy8vJ++umnVq1a6c2ktWrVWrt2rTVO
2Zv8QAMDA+lxhw4d+BXeffddKty5c6fo4wEQEY6eUkIyBcasZBqrAPy0WPz6
kiA0gQSQTO0ci1daFPIbSXlt2bKFfdmgAworefz4MUudGzduVGsSVsWKFenp
5MmTubXmz59PJY0aNSrKzWOtx9CcMrNnz5ZgTpmMjIytW7fWr19fbyZt2rTp
Dz/8kJOTY6XeTX6gtAXoKW2NM2fOsAqU2ekpheWUlBQrjQpAFDh6SgnJFBiz
kulTBeCnxeLXlwShCSSAZGrnKKqw6TM49FSx926VEuUUdl7Pzc1txIgRU6dO
ZTm0Xbt2XOrcuXMnl6rmzp3buXNnely6dOmTJ0/KO3jjwsLC9M4pw7/tsLjo
oPzZZ58Zuulux44djxw5Yu29TsgHunr1aiopU6bMeA36KOnp4cOHrTowgKLD
0VNKSKbAmJVM4xSAnxaLX18ShCaQAJIpDBs2jH94padyj0gpnj59OnToUAcH
B7ZlnJ2dp0+frnWhaWBg4CuvvMIqUM3mzZtfu3ZNrgELl52dTVFagjllIiIi
KAMauuluv379Ll68KGJ3xgn5QP39/V1dXVkFGvby5cslG15xgvlMJYajp5SQ
TIFBMlVUXxKEJpAAkimwn9dx6KncI1IW+nZ95cqVsLAwQxeaUpSLjIykI5TN
XfNp1Tllrl+/PmTIEDaHjhaKwOPGjbtz507Re7GAyQ80Pz//1q1boaGh6enp
Eo+t2MB8phLD0VNKSKbAIJkqqi8JQhNIAMkU6I+aO4tED+ip3CMC6SQnJ2ud
NCcVK1Ysypwyf/7553vvvaf7zU2luenuggULYmNjRXwLoECYz1RiOHpKCckU
GLOSabwC8NNi8etLgtAEEkAyBcLdKJUeyD0WkMHPP//MfnTJN3ToUK05VozL
y8ujdlq3bq03k9aqVcvf3z81NdV67wLAbuHoKSUkU2DMSqbPFICfFm2rL4qf
JvuSIDSBBJBMQf2/mRwJPZB7LCCP6OhoNhMrX+3atYXMKZORkbFt2zYPDw+9
mbRJkyY7d+603k13AQBHTykhmQJjVjJVAn5atKG+pkyZcu/ePZN9SRCaQAJI
pkBOnz7NNj49kHssUFSBgYE+Pj6HDh0y9/4zBQUF69ev15pTxtHRcfbs2dnZ
2XpXSUhI+Pzzz6tWrao3k3bo0OHw4cO41bOt8/DwsGyPAsng6CklJFNgin0y
9fb2fu+99x49emSkpOh9GW+TYin9fSGZ2g8kUyA5OTluGjixVTywPyVnZ2cv
L6+VK1eGhIQIj4dhYWHNmzfX+tKlO6cMu+kudxtbrTDbr1+/CxcuWOGdgQy4
T9ayPQokgKOnlJBMgRE9mb7++utz586lNgXWN5e5ybRChQpaqVC3pOh9GWmT
xVIkU7uCZApMHw25RwHi8PPz0/rW5O7uPmzYsMDAQCF3uDI0p8y6desoj4SG
hg4dOtTQTXfHjh17+/ZtCd4jSEZ3dzJ3jwJrw9FTSkimwJiVTBME4Hanhg0b
sogqZC3h+GlRSH2WGe/fv2+kpOh9GWqTi6Ume0QyLU6QTIHZqiH3KEA0ul+c
GAcHh1atWi1YsOD06dPGT5FThdq1a2utXqlSJb3Nli9ffv78+bjpbnFlaHcy
tEdhPlOJ4egpJSRTYMxKpokC6O5XFFHnzZt3/vx5IaubxE+LQuqzzPjgwQMj
JUXvS2+bU6dOpcISJUo4OTmZ7BHJtDhBMgXm/v37N2/epC+T27dv13qJ9hOU
21y5kSjBcXNz69Onz9atW+nTV+ujd04ZLTVr1lyzZs3evXupUzp2aLVw5MgR
lBeDciG7E3+PqlGjhgrzmUoIR08pIZkCI0Ey5YgSUW0lmXKxdNeuXUJ6RDIt
TpBMgfPs2TPa/lWqVEF5MSgXmCN69+69ZcsWQ8mU0TunDGncuPH333/PTpN9
+OGHVEKHBq11UV48ys3doyZPnoz5TKXEtr/co7AXSKbASJlMOUWJqDaRTPmx
VGCPSKbFCZIpcOgfT/oHYeHChSgvBuWGDmoODg4tW7acP39+cHCw8BteRUdH
e3p6co3Q40OHDvHvgfPtt99Sp6GhoVororx4lBv5mmTZHgXiwtFTSkimwJiV
TJMFEJJM+RGV/uG9ePGikJYZfloUUp+lwkePHhkpKXpf/DanTZvGYunu3buF
94hkWpwgmQIUP0W8A5Je+fn51IiTk9O2bdvEHS0oHO6ApHw4ekoJyRQYeZOp
BRFV4clUN5YK7BHJtDhBMgUoftifkrOzc6dOnVasWHH16lVR5vjIyMh49uxZ
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
6LGhVXr06PHrr78WFBSw81NaybRDhw5UuG/fPn4htU+FnTt3Zk937NgxZcoU
ll90k2l2drazs7Orqys1Mm7cuD59+sybN+/y5cvG38iHH35I7SxfvtzcLSCL
YnApOGVS9r9l6LM7cOAApb+ff/7Z+P+TEbJv6NL6ZC3YY21r37BnOHpKCckU
GCRTANEhmYIs2Gkjik5qTdpih3XaIbkKY8aMadOmzdWrV9nTe/fuvfPOO+++
+65ybhZ69uzZ2rVr08irV69eq1Ytds53z549QtbVm0zZLXG0TlrRu6bCli1b
6jaim0yvXbum+33JycnJSLI4duwY1SlRosSNGzeEjFx2mWJfCm6Ni72N6927
N412y5Yt7JQlU61atRMnThhaxdx9Q63vkzV3j7W5fcOe4egpJSRTYJBMAUSH
ZAqyYLeQrVOnTnZ2NjuVo3Vj0p07d1LhRx99pNaEkRYtWrAv8xb0RV0kG2b8
hkVG/P7776+99hr/m0mrVq0M3cFGi95kGhAQQIWurq4XL15kJWfOnHFwcKDC
119/XbcR3WTKMj6tsnDhwpCQkOvXr3/66aes5NSpU7otXLp0yc3NTTfyKJy4
l4Jb42Jv42g/YY3XrVuXwi997p06dWJvwdD/eDF339D7yZq1x9rovmG3cPSU
EpIpMEimAKJDMgVZUCRk36vXrl1L/6XgqXVJYW5ubv369Z2cnCIjI1m8GjNm
jFYjeqdT0bVkyRIj0ePatWsWjP/OnTvszN2iRYuio6MfP35MvdA7Klu2rJCJ
Y/QmU8rI7du3V2nOUnXs2LFDhw709tlEIZQgdBvRTaYRERGBgYFBQUH8aoMH
D1b97/Q0H1Vj0WPAgAHcfXVsgriXglvpYm8j3njjDRqwu7s7F6XpXdSrV0+l
785OjFn7ht5P1qw91nb3DbuFo6eUkEyBQTIFEB2SKciFgid3TNd7HeM333zD
Qiv99+23387KymLl9IAiQ9u2bR0dHelLvslI8uWXX7YwzMitdI1YvXq1blie
MmWKwHNMepMpocPW+PHjWSig4Dly5MiDBw+qDPyWUO8dkHRRyqBqtLX5hTt2
7GA5ZfTo0TYXPWz9UvBu3brRmOfNm8cvpKcqzYwthtYSuG8Y+mSF77E2vW/Y
LRw9pYRkCgySKYDokExBLmy2RNKjRw+9FXJyctjP4mrUqBETE8OVT58+XaWZ
lnHmzJmNGzc2cqbJeigOUL/0/YRfeOrUKSp86623TK5uKJky+fn5UVFR7DJj
itVUkyKJbjXdZJqXl/f06VM69vGrnTt3jqrRluRKKNmxE9Y2OhuIuJeCW+li
byPYzD5aG5/9D4R27doZX9f4vmHkkxW4x9r6vmG3cPSUEpIpMEimAKJDMgW5
LF++XKWZYPH69et6K0RGRlatWpXqjB07liuk79L0zblr167s6t+MjIyWLVs6
OTlZdurTYuyepevWreMX/vbbb1TYoUMHk6vrTaZ//PHHsGHDvvnmG34hu4ZT
7/ykusm0T58+VDJhwgR+tQ0bNvDj/6pVq+ips7NzQECAyXEqkyiXgnOscbG3
cewj+OCDD/iFbJeYOXOm3lWE7BvGP1khe2wx2DfsFo6eUkIyBQbJFEB0SKag
TGlpac2aNaP9oZQGd8500qRJKt7db8j27dtVml/PSTk8f39/leYONlFRUayE
jjitW7emwsWLF7OS0NDQc+fOxcbG6q6uN5myO/lQ3uROeu7evZtKaDtwVzLz
6SZTyh1si3HTYlI0c3d3p8Jdu3bR0+vXr1Neo1inNf+IzbH4UnBd1rjY2zj6
fuLm5kafAgVDroRdHsDt2ElJSbTzcHPjmtw3TH6yJvfYYrNv2CccPaWEZAoM
kimA6JBMQYHy8/PZzBqUQ1namjJlCnupY8eO9PThw4dc5QsXLlDJwIEDpRxh
dnY2C87Vq1cfN27c3Llz2R1sPDw8KFOzOuxr/4YNG3RX15tMKWJ4enqy+DBt
2rQPP/yQkkLp0qVv3rypdwy6yTQ9Pb1JkyZUWKZMmaFDh9JGY/OS9OzZk13/
yX7hqNLMYqll1KhRom0d67P4UnCF+OKLL2hsLi4u3t7ec+bMoe+09HTw4MHc
xcOHDx+mkgoVKrCnJvcNk5+syT222Owb9glHTykhmQKDZAogOiRTUKBZs2ap
NBcZUr5ITU2leMWdNm3evDm9RIVc5Tt37lDJe++9J/Eg6SgzevRoCghsv3V0
dKRkwT9D+uabb1L5pk2bdNfdunUrvTR9+nStckrcXbt25b7qUHY4cOCAoQGw
S52Tk5P5hdHR0YMGDWIXu5Jy5cpR8MnLy2Ovli1bVvcLFdO/f3/Lt4XkLLsU
XFF27tzJRqjSnAwdM2YM/17TR44cofJKlSpxJcb3DSGfrPE9ttjsG/YJR08p
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
Vaq0atWqY8eO7dq1q0OHDqywadOmmUbPnCYnJ9etW5dV7t279549e4KCgnx9
fV1dXVlhYGAgq7l3796mBnChsk2bNqxyWlra66+/zgoHDx586NChgwcP9u3b
l5W0a9eOP4YdO3awcicnp5kzZ1LNr776ipsqa+vWrVxNLy8vvQNo2LAh913i
6NGjYm9jAACwmhs31EuXFs4Xc/as+vFjdUGB9ENAMgUGyRRAdHaeTA8fPsyO
KZRx5B6L1eXl5ZUtW5bebIUKFR7TAf1/CgoKBg0axLbDd999Z6SF1atXs2qz
Z8/ml1+7ds3FxUXIoTkiIoJCMdWsXLnyo0ePWCEXNqdMmcKvTCmVlT948ICV
JCUl0YoqzSnakydPcjUpMlPkZG/t2bNnxsdAn7X9fOgAACAuJFNgkEwBRGfn
yXTJkiXsmPLjjz/KPRaru3z5Mnuzy5Yt03qJAiN7yfh1y++//z7VcXNzy8jI
0Hpp1KhRrIX4+HhDq+fk5Lz11ltUx8HB4Y8//uDKe/Xqxc6BUvDk1z99+rTW
mdDjx4+zkokTJ2o1zr1EOdfIW9i/fz+r5uXlRVHdSE0AAABdSKbAIJkCiM7O
k2nPnj3ZMeX+/ftyj8Xqjh49SsGwZs2av//+u9ZLtCew7fDhhx8aacHb27tR
o0Zdu3bVfWn+/PmshdDQUEOrr1mzhtUZO3Ysv/zGjRs7d+7csGGDVv1jx46x
+l9++SUrWbduHSvhnzBlsrKy2HXCQ4cONTSA1NTUGjVqUJ1SpUrdu3fPyDsF
AADQC8kUGCRTiyUmJl66dCkgIGDlypWLFi2aqkEP6CkV0ktUQe4xgjzsPJmy
S0MrVaok90BkRkGPHVv9/Pwsa6F9+/a0esmSJQ3dTTcmJoZdS1y1atWEhAST
Debm5rJzqSQyMpIVchfi3r17V3eV0qVL00stW7Y01Ca3uu5ZYwAAACGQTIFB
MjVLenr6sWPHZs2c2cqzkYODg3MJxzdqlOn1RqmPmpUc2kz1SSsHetCzUSkq
pJeoAlWjyrQKrSj32EE69pxMHzx4wA4oPXr0kHsscsrPz2/Tpg3bFCdOnLCg
haNHj7LVte5WxPfJJ5+wOl9//bWRpjIyMs6fP+/r69usWTNWf9CgQdyrmzZt
YoX8i4GZpKQk9lK9evX0tvzw4cMSJUpQhbp16xqKzwAAAMYhmQKDZCrQ7du3
58yeVbNa5fJlnAd6On/1ger2ZFWer0q99PnycNqLx7TQS1SBqg3wdKZVaEVa
nRqR+32AFOw5mf7000/sgOLs7FzfMItvzBsSElJegICAAHHfl7mmTJnCtsN/
/vMfC1a/c+cOm5/FycnpwoULeuskJyezE5qVKlXKNHr73++//55/rP/4448L
eLde5M7tent7a63IXSpcoUIFvS0vXLiQVVi9erWZbxEAAOA5JFNgkExNCgsL
Gz704xJOju81dPl5gCpr8UsJlFvuTtFfTgutQivS6tQINUUNyv2ewLrsOZnO
mjVL9+CiKzY21rL2KdIKad/4OURr8/Pz4wJdTEyMuatHRETUqVOHtTBnzhxD
1bZu3crqaN3UV9fSpUtZyOW2T//+/dPT09mrGRkZ9erVY+VLlizJzc1l5QcO
HHBzc2Plrq6uus1STe4XpnR0MPdtAgCAQuXnS9whkikwSKZGJCYmzp45o6Sz
k3dT5+sTDAZPtoT7mKhACzVCTVGD1Cx+hVqM2XMy5ebxnDx58gwDFi1aZHH7
FGk/E+D69euWtU9p64EAXKzTkpeXN3HiRLYFKNb99ddf5g7g6tWr1atXZy14
e3tzOVFXixYtVJqpXrj5XwxJTk5OSUnJyso6ffq0p6cna5x/QS935TCpWbNm
z549WTUHBwf2O9ZXXnlFt1mKrmyVUaNGmfs2AQBAQWJj1dOmqfv0UXt6qt3c
1Pv2Sdw/kikwSKaGnDx5sk7Nap6vuJz/xHTkpCVskqBqtFCD1Cw1Tl3I/S7B
Kuw2mVIuc3V1paNJrVq15B6LhYpyTpb+eezduzerULFixXPnzpnbe1BQEHea
csiQIUZi6ZUrV1g1c68WTkxMpJjJUif/lkd79uypUKEC/z06OTkFBAR06dKF
Hr/xxhu6TVHXrCYNxqwxAACAsjx5olapXixr10rcP5IpMEimeq1YsaKks9Pn
nVW5SwSFTap2S8A5U359apy6oI7kfq8gPrtNpn///Tc7mvTv31/usVjI4mT6
9OnTN998k71ap06d8PBwc7umNrkLbufNm8f/KaiuTz/9lNWkMGtuR59//jlb
d+/evfzy6OjoL7/8cty4cWPGjNm1axe74rp+/fpUs2PHjlqNREVFsQll2rRp
Y+4AAABAWeiIU6rUi2Q6ebLE/SOZAoNkqiUtLe3jjwZUK18yeKQZSTNzkeqe
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
Xy/eYUq/QpW0XFhYyC23adNm+fLldXV1XL5t2zbxTakyDyzKyMgQNfb999+3
XTR37lwu3717t2QrJA3SL8MrrriCyocPH04+y4UwUwAAAN4AZgoYmKkEo9H4
xGMTenZud/A5FYJZ94kh8U3VWkpdUEfUHR7GG2S0WDMdN24c/zVRdTtkgKLQ
TEknudrzzz+vsOXq6uqwsLAFCxbs379fskj82z1q1CiH60ZFRfXq1YvrjB8/
nrxYXHT69Gl+nvDkyZPtt0Jipo8//rjB8sjftLQ0sRBmCgAALYvSUvq7Qn97
BMs9Hd4DZgoYmKk9dFg4a9asdm0vmDFS6VtjGqebL8pV7qTULDVOXVBHem8u
0J4Wa6b0R8RgufrU5VtR3ObUqVO7XeHJ1cLKUWimDz74IFfj5yZ5Tt++fam1
yy67zH4R+Sy/BZV48sknbbWUpmVoaCiVDxgwoKqqyn4rbM101apVDs99w0wB
AKCl0NAgdOsmGAzWaP7KbM2BmQIGZuqMffv29evTc+Dl7Y++pEg2YxWbKTVI
zfa/ohd1ofdWAq/QMs00Pz+f/5SMGDHCZWVyqFtvvXXt2rW2hR9++CEV7tmz
R2ZFfZ+AZIsSM83KymrdujXVoe3Sqt+7776b+zUajbblixYtEl9O+sEHHzQ2
NtouFd+m2rZt22tsEG9oJdWlH2l4BcsjiLnwmubwKVfqhX/cuXOnVhsFAADA
7+jfv8lMx43zalcwU8DATGUoKSmZ+u477dpeMP6Gtqdfd+GbSq7mpUaoKWqQ
mi0tLdV7+4C3aJlm+ssvv/Cfknfffddl5YMHDxqaX1YaHR1NEnfttdfanumz
J7DMdPbs2Vxn5cqVylvOy8vbu3fvunXr6LeE/dIhQ4ZQg5dccolt4YwZM7gj
0sYffvjBfq0tW7a4HDdWUao8cOBAJZUl/7EAAAAgqBg5sslMb7rJq13BTAED
M3XJ2bNnn3nqiTYXtL7vz+1/nGB+mq5D65R5AhKtQivS6tQINUUN6r1NwLu0
TDP95JNP+E+JzMN5RIqKiqjmPffcI5bce++9VLJ9+3b5FcnaElxhe2uk91Bi
pmPHjuU6ubm5ylueM2cOr7Vs2TLJovLy8g4dOhian4T96quvuH7Hjh137drl
sM24uLipjpgwYQKvO2bMGPpx7ty5VHn+/PkOK19++eUGy4ts+Mfo6GjlGwUA
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
KQAAAACCh02bmpnp8ePaNg8zBYz/mGlGRsbJkydZS+vr6xstKNkErkmrsJxS
I9SUy+52795N7umszXwLMp3m5uaS2MqoK6WUlpZGKmpbQumlpqZSv/RvXl4e
dcHqSp8zMzOTk5NpEQssZUifKUkvjTbwKjBTAAAAAAQP//d/zcx0/Xptm4eZ
AsZ/zPTYsWM5OTlVVVUKz5baIp45pdWpEWrKZXcrV6509tIWIj4+XuZCX+or
LCxM5lpfyoe80tkbS2l1yrO0tJSfM0z/8lOeKCtb1a2srKQkvTTawKvATAEA
AAAQPJSUNDPTWbO0bR5mChg/MdPCwsKTJ0+Si9XW1pISqtJShlahFWl1aoSa
ogZluiMnXeT8ZUwkienp6TJ9nT179rjzyxgok5iYGIePPFILJUmpemPAgVeB
mQIAAAAgqBgzRnjhBeE//xHWrBGSk7VtG2YKGD8x06SkpLS0NL6OV+0JU0Z8
IBI1Qk1RgzLdZWdnb9iwwVlTmZmZMs81otV37tx5zvlLTrOysuQfnaQcSpJS
9caAA68CMwUAAAAAUAjMFDB+YqbR0dGFhYU1NTXunTBl+LQpNUJNUYMy3Z09
e9bZ44/4QlyZG0hPnTpFjTtbSkOUmprq9iZIoCQpVW8MOPAqMFMAAAAAAIXA
TAHjJ2YaFRVVUVHB7y310EypEWqKGpTpjuzyt99+c9iI0Wh0dn+oYDlhun37
9traWodLSYrJaikB9/K3h5KkVL0x4MCrwEwBAAAAABQCMwWMn5gppcHPPtLE
TKkpalCmu4iICGfikJeXR5vprIvo6GiZN8Wkpqa6fL2pKihJStUbAw68CswU
AAAAAEAhMFPA+ImZnjx5kt9hqomZUlPUoEx3R48epQ132EhKSgqt7nBRfX39
9u3bSXsdLiUn5efxyr8FVRWUJKXqjQEHXgVmCgAAAACgEJgpYPzETKOjo41G
o1ZmSk3J32fq7JwptRAbG+ssAZLWyMhIZ70nJiaS0hYUFPDDl9zbBAk4Zxqg
wEwBAAAAABQCMwWMn5hpfHx8SUmJ26+MYcQXx1BT1KBMd87uMyW1TE1Nddb+
vn37CgsLHS4qKysT706tqKhISEiQuSRYObjPNECBmQIAAAAAKARmChg/MdP0
9PScnJyamhrP3xpDjVBTGRkZMt05ezZvaWkpreuwfXLP3bt3O+udfNZoNIo/
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
nhKSryHMFACgIzBTwASZmebn5/NkfvTRR219SjTT+Pj4Ll262E9+KpSk+vXX
X4sttG7dWqzZsWNHciXbmgrbvOKKK+zrXHPNNS436tVXX7Vf0WARwFOnTtnW
fOmllxzW7NevX25urm3N1157jcq7des2YcIE+/pXXXVVTU2NkrS5na5du44e
Pdo2MbGjM2fOdO7c2WFW//3vf21TcmimyveCz4CZan7sCjMN0ICZGgJ5Ski+
hjBTAICOwEwBE6xmSlx00UUffvjh9u3bjxw5QuWC5YxqSEiIwXImcfr06ceO
HTt+/Pinn37apk0bKrzyyivFs5CUP5/+o8IDBw7U1dVlZmYuWLCA5WjEiBFi
j8rbzMrKSk5OHjZsGJWT7iVbyM7Olt+iGTNm8ObceOONCxcuJAvetGnT008/
zYXXX3+9WPOTTz7hwptvvnnJkiUJCQk7dux4+eWXuXDQoEEVFRViZTZK5vHH
H9+zZw9l8uuvv4aGhnLh3LlzlaRt2w4Ny/fff3/UAi+lQevTpw//bnn//fdp
JGNiYkg2r776al5lxYoVYkr2Zqp8L/gSmKnmx64w0wANmKkhkKeE5GsIMwUA
6AjMFDDBaqYXX3zx4cOHJUsnT57MS1euXGlbvnjxYi6fNm0al/z8889c8uOP
P9rW/Oabb0aOHDlq1CjRnpS3yai6zzQvL48bufzyywsKCmwXPffcc7yIlM22
Zv/+/Wk32dacNGkSL5o9e7ZYKBrlY4891tDQIJanp6e3a9eOyh966CElaYvt
jB8/3v4eVfFs77x582zLk5KS+ERqx44dxd7tzVT5XvAlMFPNj11hpgEaMFND
IE8JydcQZgoA0BGYKWCC1UwfeeQR+6U333wzLRo9erT9optuuokWjRkzhn/c
vn07t/PRRx/J96i8TUaVmYpqRh8ki8rKyqZPn07aGx4eTj/+8ssvXHP37t2S
mrW1tSS2tGjixIlioWiUJ06ckNQfMWIElV977bVK0hbbOX36tH3+gwcPpkXD
hg2zX7RgwQJeUXxckr2ZKt8LvgRmqvmxK8w0QANmagjkKSH5GsJMAQA6AjMF
TLCaqeQknWARNF5EuvSrHXzRac+ePblySUkJnzokhg8f/t1339GG2D8VVlWb
jCoz/fjjj7l9yke+Jikq1yRjtV/64IMPGizXxIolbJS0jbQJkspPPvkkLaLk
laTN7XTq1Ml+cGpqatq2bUtL3377bfuUIiMjOeH//e9/XGJvpgr3go+BmWp+
7AozDdCAmRoCeUpIvoYwUwCAjsBMAROsZkoWI1kUFRVlP+ft4TtSiR07dojP
g2XIMd95552YmBi32xRUmun9999vsJNEh4wZM8ZguejX4dIPPviAMxENl43y
sssus6/8wgsv2Hcqb6YO24mIiOBOFy9ebL+0qqqKn9b71ltvcYnDJyAp2Qs+
Bmaq47GrXx3M656M7gEzNfjZlHD7myXATAEA2pKbK2zZIsybJ7zxhvDAA4LR
KF/dG2ZaUFDwP2WIj/0EutNyzPT48ePiVL/FDoPlibL0wdYi6fOcOXMGDx5s
+1RY+pqsWbPG7TZVmelDDz1ElXv16uWyJpupM4fV10yXLFliv5RmCJvplClT
uMTZW2Nc7gUfAzPV8djVr478dU9G94CZGvxsSrj9zRJgpgAAbfnf/wSDoSnO
nJGv7g0zpeNP+zYd9qLLc0uAQ1qOmVJK/Lzcjz/+WG2z5eXlP/30E9uZwfL6
En7KkBttqjLTTz/9lHu0fcGoQ8QH8zq8mpcN1/5qXq+aqfzVvDTxOGGZq3kl
ONsLPgZmquOxq18d+euejO4BMzX42ZRw+5slwEwBANoSHt7MTO2elyLBG2bq
7K2LEgYOHOhJL0BbvG2m8fHxvtwcGTMlBg0aRIvuu+8+t9sXTz5u3brVvTZZ
rPr166ek8s6dO7m7zZs3SxZVVVV988038+fPj46OFmyelaTqCUhqzdQ+bZl2
hPPPgHL7CUjOsN8LvoSmNMxUr2NXvzry1z0Z3QNmavCzKeH2N0uAmQIAtCU7
u5mZzp8vX90bZspHocS3334b7hzxQBT4A14105KSEr8y05deeomXSt7wUl9f
/7e//e3aa68VH7E7derUW2655a677srLy7OtuXz5cm5h//79attk+LJbQtKy
QwoLC/mS1549e+bm5touEl9UunfvXsF8OX8u/9i/f3/J45Jk3hqj3EydpS1v
puL/Vn3xxRe25QrfGqN8L/gSmtL0RYCZanjsKv8EJC/l4Hnmuieje8BMDX42
JVQlI/kawkwBAFpCR3ft2jWZ6fmHijhDczMVL2ukA+ny8nK32wE+xttmmpiY
6MvNkTfTjIyM3r1701Kaqx9//PGhQ4eoZNeuXX/96195LfHdo6SZXDJ06NB9
+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
7bP/Uo/Ur+7b7mH41ZRQlYwn31kvNQscQ0ewBoPSCN4HjTrgt9+EJ54QFi9u
VmgyCevXC2vWyEVysuvGU1KElSuFKVOEl18W5swREhK06cJhziI1NcKqVcL7
7wvPPSfMn0/H6IKCU37CzJnC5MnC228Lzl5hv3u3ucJbbwm1ta5b0xZSpy++
EN58UyDdu+46wfnFkxqa6b/+9S9endpUUp/NtEuXLqdOnWrbti19tn0ikMRM
v//+e67T2gJ9uOiii8T6mzdvppLQ0FBxEzZt2kTeRx9Ie3lFpmPHjitWrKBO
bbeXnJrbiYiI6NatmzgI/IHcmcq5ghIzxbN5ZaiqquLLeouLi7Ozs+lQPzo6
+vjx40eOHAkPDz948OABC/st7APAh/Cs4xlIU5EmJE1Lmpw0RWmi0nSlScsX
8bq8vRRm6h4wU31j+sHprIp1prpntjyjfEW332dKvVBfgkWEqXfdR8CT8Ksp
oSoZT76zXmoWOObbb5vEs317F0E+1UJISxO6dTOPyVNPNSsvK3Pt72Sa8nz9
tdC2bbNV2rQRpk/3tAtnOTPHjwshIdJ27rlHMBpdZNu/v7Uy6adDPv7YWkH2
Ua5eYceOZptz4ICzihqa6T333MOrr1+/Xkl90Uzp8/Tp0+lz586d6fCPl9qa
aWRkJNklZTV79mxWm5kzZ5Kftm/fns+cspkaLKdrly1b9vbbb9fU1LCZEiNH
jjxz5szp06f/+te/csmwYcN++eUXSuCxxx6jHylz7vTBBx+kH8ePH0/N1tbW
0mHqkCFDqOSZZ57hCkrMlJrtooxvvvnGjXH2Er4x03Pn7zmtqKgoKyujQ/2C
goKcnBzS+XQLaWlpqedJAcCHiBOPJiHPRpqWNDlpitJEpelKk1bJvaUwU7eB
meoYS6KWsJZmlWcpPFUqhttmarCcPKUeBYucUg66j4Pb4VdTQlUynnxnvdQs
cMyzz1qP6q+9Vu9U/IaCAmHgQOuwSCyvosK1Nn73nVzjZKBc7aKLSEuEp58W
LrzQWrJmjftdyOQsmO+NFHr1si7t3VuYMEHo2tX64y23CPX1cgmLZtqqlWP1
09FM4+KaDcuyZc4qamWm9Dela9euvLrC2zBtzbSuro6v6b3//vt5qa2Zvvrq
q/T5pZdesl2dbFEsZDO9+OKL6QBSrMBmSoWkUVyyYsUKKmnTpk0u7XcLpKtU
ctVVVwmWdxSSmd544422b7FZvnw5VRg1ahT/iPtMPTdTsR3CaDTS0X55eTkd
9pec53cAdEWcijQtaXLSFKWJyjNW7TyHmaoCZqpXbI3fyttyKOOQG6t7YqYc
1C+vTpnoPhruhV9NCVXJePKd9VKzwDHXXWc9qj9/uqSl87//CZde2iQ79pZX
ViaUlEhj9Wpr/dtuk7uoldbt1MlcrVs34fxZM+HUKfM5UyocNMjNLlzm/P77
1kUffGC9gremRhg/3loYHi43IKKZUlx5pYNzrDqaaXV1MzOlTJyglZkmJyfz
ut1oDyrD1kwF8962XtPLb5yxNdPrrruOPoc33x379++nwqFDhwrnzfQvf/mL
bQU204EDB4ol1AWVhISEiCWFhYVU0qdPH9sVTSZTYmLi9u3bZ8+efdddd1GF
22hqWYCZamWmDJ8BB8DPUX75roSWbKZqj58FmKlOsSRqiWD57+Ufz/7oXgue
mykF9c4nbQP0zKlfTQlVyUi+hi6fgOTGbwOgARUV5hNhfFTvT1fc6cO5c8L9
90vPTjq8MlZCVpZVDHv1EmzOQzngv/+1nnzcsaNZ+WOPWcudXVvrrAuFObNd
duxodl4ROpDg+v/6l1zOtmZKMWmStIKOZkqI54Jld5ZWZrp161ZeVzzp6RKJ
mRKffkq/zgyXXHJJVlaWrZny2ViJDyYlJVFhjx49hPNm+uijj9pWYDO1fVnq
mTNnqGTIkCFiSUlJicHGTHNycp599tkLL7xQMiAwU5E/NDVTAIIbmKmqQ2KY
qe9DvLfUbS01aGSmBoucCgF7z6lfTQlVyUi+hjBTP+XAgaaj+mPH9M5GbwoL
rUNBDrhtm/WuzKefdr0imQKv+OOPLmoOGGCuZi81v/9ufggS/Xv+Bc1Ku1CY
865dwuefCzYP3jGTk2Nd96OP5HJmMx082KrGpM/79zerQGLL7dhqr88gmRLn
8O23O6ul7ftMVWFvpnV1dX/5y1+o8L777hs7dqzhvJleddVVBrt3pEZERBjO
nwBlM/1//+//2VZgMx0/frxYQi0YnJspHUZef/319GPPnj2feeaZr7/+mg4p
w8LCDDBTG2CmACgHZqrqkBhm6uMYuXIka6l7F/GKoZWZGs5f1ktZBdzTev1q
SqhKRvI1hJn6KWQrfEjftq357FsLp7hY6NzZ7Fl8v55CM9292zqGSk6i8S2l
c+cKDQ3C6dPm89TTpgk//ST8/rvcWjJduJezYH5PQNMtxocPy9VkMx0zRli7
1lq/X79m53b1NdMnn2wy0169nNXyKzMVLDd+2j5Kl830/vvvp89Lliyxrblg
wQIqvOuuuwSNzJQvD+7Ro8fvNrPum2++ocJbb72Vf4SZwkwBUA7MVNUhMczU
l9FpVid+QUxmeaaHTWlophT8QCTKLbDec+pXU0JVMpKvIczUTxHvNBw8WO9U
/IO6uqbPV16p6Grem26ynkm0ee+kY0gEeLSXLhWGDm12iWy3bmY/da8LtTmT
BJG6XnaZtevHHnPx7hjRTIlHHrGu9dprTRX0NVOxdx6i6mqHtfzNTIl///vf
YiZspt9//z197t+/f0FBgbjuFVdcQYXz588XNDLT9evXGywnTGvP362cmZnZ
t29fg+XVM1wCM4WZAqAcmKmqQ2KYqS8jIsf8NrQ6U53aJ/Hah7ZmSvnwq2Qo
Q91HSXn41ZRQlYzkawgz9VP69rUe0rdpY5YOmRDfaaIXlZXCiBHmSzeVxJdf
atCjEsuLjLQO4AMPuG4wOrqZjbZtK9xwQ7PbJPfs8bQLJTn37NnUI6mKwrfG
sJmSMfGLaSj27rVW0NdMw8OFGTPMj4ei4yLnN/n6oZnW19ffdNNNnAmbqclk
Gjx4MP3Yq1evv//972+//XaPHj3ox4kTJ5os/3ugiZmSh/IdprfddtvMmTNf
eeUV6o7fnUq6yvVhpjBTAJQDM1V1SAwz9VmM2zCu0YKq95Y6C23N1GB5zymn
R3nqPlYKw6+mhKpkJF9DmKk/QpZhK0ry0fyhKzqQn68i2xdf1KBHJZb36qvW
HiVPNHKIeFEuxbBhQkaGtfybb6zPobrqKgfP9VXVhcucGxuF4cPNVwWTFHOz
f/qTOTEZbM2UWLfOumLfvub/LhD0NlNl+KGZChaFbNeuneG8mQrm/4CpfPXV
V9u3b88Z9u3bl/y0/vxrfbZt22awM9OdO3dS4eOPPy6WxMbGGs4/zpeRPAFp
y5YtZKPcBTnpqFGj4uLiQkJC6MeICPN/L4eGhtLnDHGKBhEwUwA0B2aq6pA4
QM20uKo4Mjdy5amVz299vsecHrrn5jJafdqq/Jz5wYyn8k9p0qDmZkpBuVFr
lCdlq/uIyQftdNr1yr8mPghVmUgyh5n6I9u3q3C9zz4z34hKlkRx/ihayqRJ
5qWnT6tLo6TExfs0GVUe3fyNkG7i0vL++MP6Chiq2dDgusHwcGt6l1winH/R
pBVSaV508qRHXSi8Apmh/chvq+naVe6xuhIzFWwex0S7W4CZag+pKNllWlqa
97qoq6tLSkqKioqqqqryXi9+CMwUAM2Bmao6JA5QM7WlvqH+l4RfRiwfoXuG
MjErfBalamoweX4dL4c3zJRyowypQcpW9xFzFrSjaXfTTlf1NfFBqMpEkjnM
1B+ZNs0qFB06mJ+2Kh+FheYTZFz/4ouF5GQHDbZrZ166bZuKHJYtM18dumuX
osoxMWbtVRJFRSpycIZLy1u61Dogc+YoapBEw9kJ6L17rYvWrPGoC1VmSkyd
am1/61andezN1Paa3j17YKYggICZAqA5MFNVh8QBaqY95vS4beltU8KmbE/c
zjdIEjsSd1w5/0rd83QYf9T+IXj2mhhJeMNMDedfIkPZ6j5i9hEyP4R2MW8y
7XTa9X47P1VVFmCm/on4HswRIxTVF82UYvhwB6fw3DBTfhFJWJiKVXyGS8vj
95VceKGLJ+uK1NZar9p95BHpIrJpHtgffvCoC2c5nzsnxMc7aGTXLmu/X33l
tE17MxXMj9Fpuhh4yhSYKQgUYKYAaA7MVNUhcYCaqW1599ndpx+cXnbO/Eff
WGt8YvMTuqcqiQ/3fihYTph2ntVZqza9ZKaUIZ82pZx1HzfboN1KO5cSox1N
u5t2uiFA5qfLygLM1D8RT3u9956i+rZmSmH/lKEWZaZGo0Be41AzZeDnHV1z
jbR861YHV/O60YXDnHNzrUY8daq0vnjTKJmmMxyaKTFunPQiapgp8HtgpgBo
DsxU1SFxEJgpR485PTbEWG/vmnZgmu7Z2kZupfmeqbCkMA3b9JKZUlCe1Cbl
rPu4iUE7lLeUdrHtbcUBND9lKgswUz8kNbVJKJzdNypBYqYXXSR9iYlDM01O
Fr77zvySkTffNF+bWlhoLc/MFBYtsjY1ZYr5c2mpiwToD194uKLIylI4DHLI
m+mBA9bkp01T0eYHH1jX2rKlWfmoUebCjh2bvcDFjS4c5tzYaDXiPn2Eioqm
8oYG6zlZiqQkp206M1Pald27w0xBYAEzBUBzYKaqDomDxkw5Ju2YxKf8/EdO
Q+aH8DNvQ78L1bBZ75kp5ckJU+a6j57hvJbSbqWdK1kUcPPTYWUBZuqHkI2K
QqHwQSuimS5ebL6+lD7cfnuza3rtzfTrr601xbjsMvOTl4hffpGecTt7Vq53
f3s27xdfWPvauNFxBXLMoUPNL4p9+eWmQrK5iy+23qtLK1ZXm0+Mvv66tann
mz/0zGUXynN+911rU3fdZX4SL+WWl9d00vPhh+XadGamQvNZ5D9mSiZuB8wU
MDBTADQHZqrqkDjIzJRi/I/jWU795LLe9THmy8CK/ijStlnvmSkFZUvNUua6
j96Tm58ULFpKu9V+aSDOT/vKAszUD3nvPatNdO+udBXRTI8cEWbPtn6eN6+p
gsRMxStU77xTWLXK7LODBpl/bN/efMaWLOaHH6yaNnmy8P33Ls6Z+puZiq4X
F+e4Ql2dtYLNyzvM0FbzE3ENllea8vW6PEo1Neq6UJ4ztUyObHu+W/zcr5+L
B0bJmCkxYYL+ZpqQYD7t/uCDwvXXm2fU//2ffRWYKWBgpgBoDsxU1SFx8Jmp
wXLmVLDcc+oPD0Qq/MN8ed73Ed9r26xXzXRh5EJqljLXd+hC5ofwvaX2Z0s5
AnR+Guy+hjBTv2PECKtNPPCA0lVszdRkMr+R02B5OA95AWNrpvX1QkiI+UcS
IvEcVnW1MGCAufCxx6wlyu8zNRrN6nH//YpC8hwh9/jzn825vfCC46WvvGJe
Spvs7JU3VM4Gav+AqcOHzQ7F935S9OwpPPusg/e2uOxCVc60+957z+zCokhS
yyR0/E5SGXiXObvXVbymt3Vr1015iePHm/2/xKZN9lVgpoCBmQKgOTBTVYfE
QWmmFHzP6Y7EHfrm3H5G+0bLYeegHwZp27JXzZSyFczXfDVS/jqO3s6knYLl
3lJnFQJ3fkq+hjBT/4K8skMH62G88nsYbc2UiI+3Xql7223Wa3ptzTQpyVp5
+fJmjUyfbnUxxp+fgORtSEV/+004c8anndbUmHvcudN8Hla58Po5ZMe2Zuro
DTswU8DATAHQHJipqkNib5tpq3+3Grdh3Loz6+KK4wqMBfQvfaYSKvfqkX+P
OT34ab36vuf0lV9eoRxq6ms0bJOHlNoUR2Nz7Gb3hlQmuH3KX6+hox0nWJ7E
a/vII0l4Pj8N2k1RVclIvoYwU/8iJqbpMH7HDqVrScyUmDvXWkIfhOZmSu7D
i9q3F7p0aQrxnB2fX2vJZgo0RPyfFopJk+yXw0wBAzMFQHNgpqoOib1qpn2/
6nsw/WBpdal9UDkt9d6RP8X0g9Op5i8Jv7iRuVax8az50RwuvcONIW1obHqy
Cumbe0MqE5QztUz56zV0tOMoAdqJMnU8nJ8GTaeoqmQkX0OYqX+xfXvTYbz4
sFyX2Jup+HDXCy80n0K1NdPly62VSRkcBj92CWYKNCE0tGlK33ef/XKYKWBg
pgBoDsxU1SGx98yUjuqTfk9yeMzPQUu9d+RvsLzntM5UV99QL3PSzdsRXRBN
2W6N36pJa7ZDam+mbgypTFDO1DLlr8u40S6jHUe7j99b6iw8mZ8GraeoqmQk
X0OYaTBgb6aC5eEzfE3v0KHmOw1FM92/31pZ/rlGMFOgCWPHNpnpgAH2y2Gm
gIGZAqA5MFNVh8ReMtNW/27l7FSU5LSU8msm3Uhme6L5/QvPb31eVfIaBt8N
qskrbCRD6tBM1Q6pTPC7Wih/XcaNdhn1TrtPvprb89N+PD2foqqSkXwNYabB
gEMzJebNa3aXH5tpdrb1x6VLpZWvuUa45x7h3Dnzj2ym/B4ZANzmrbeaZmD7
9vYvjvGxmYaHh48fPz40NPSiiy7q3bv3yJEjZ86ceY7nfHOMRuP06dPvuOMO
qkaVBw4c+Pjjj0dERCjvKz09/cUXX7z22msvvPBC6vHVV1/du3evw5pu9xUf
H9+nT58ePXpsV/BVff3116km9aJ8E3wJzBQAzYGZqjok9pKZjtswzuUxPwfV
VNimG8lMCZtClVeeWqkqeQ2j1lRLCTyw+gHPm5IMqTMzVTWkMkE5U8u19bW6
jBvtMuqddp98Nbfnp/14ej5FVSUj+RrCTIMBZ2ba0GB+sanETIl77zX/2L27
cOyYteToUesVv++9Zy3p3dv846xZDt9BCYBSvvqqaQZeeKFQUCBZ7kszfeGF
F+z7IkJCQmJiYmxrnjhxomfPnvY1W7du/Z74HZHlwIEDJKT2qy+V/I+QB33V
1dUNHjyYK2/YsEE+n82bN3NNMmUl+fsemCkAmgMzVXVI7CUzXXdmncLDfqqp
sE03krlt6W1UOTI3UlXyGga/WVWTB/NKhlTGTJUPqUzw43kpf13GjXYZ9U67
T76a2/PTfjw9n6KqkpF8DWGmwYAzMyUSE5tekSmaaUKC0LGjuYSO/4cOFehI
lSuEhAhVVdY6Q4ZYC9u0EQ4d8t22gCCDJtuqVeaZmZvr8H85fGamX3/9NTd+
6aWXfv7557t27VqzZs2IESO48IYbbjh3/sxpeXl5//79uXzs2LHr1q0LCwub
Nm1ahw4duHD16tXyfeXk5HTu3Nlw3i63bdv22Wefde3alVf/6aefxJqe9PXh
hx+KIyZvprm5ud26deOaMFMAWg4wU1WHxF4y07jiOIWH/VRTYZtuJNNjTg+q
XFxVrCp5DYNfGdNzTk/Pm5IMqYyZKh9SmaCcBcuLY3QZN9pl1LvLG4Tdnp/2
4+n5FFWVjORrCDMNBmTMlPjiC+vS3bubCtPTzWdO6fhfPJ91553C6dNNFX77
zXxBL2lpq1bCwoVe3wTQUvGNmZpMpk6dOlHLXbp0yc7OFsvpD83jjz/OnS5b
towLZ8+ezSVTp061beTUqVPt27en8j/96U/y3b3zzjvcwooVK8TCM2fOUO9U
ePvtt4uFbvd16NAh0l5xxGTMlLbx3nvvFWvCTAFoOcBMVR0Se8lMC4wFCg/7
qabCNt1Ipt2MdlS51qTPJamG82badkZbz5uSDKmMmSofUpmgnAX9zJSvgqbd
J1/N7flpP56eT1FVyUi+hjDTFk1NjdlGIyKE4mIHS00mIT9fxSOCAVCPb8w0
IiKCW/7Pf/4jWZSRkcGL3njjDS4ZM2YM/dixY8fq6mpJ5eeff54rFxUVOeur
oaGBT5hefvnlDQ0NtosmT57Mq5N4etJXeXl5v379eKC4joyZzp8/nyq0atWK
a8JMAWg5wExVHRIH9zlTPzHT3vN6e96Uj8+ZUs5CUJspzpkCAADjGzPduXPn
Lbfc0qdPn19//VWyiA7euNNHHnmES8aPH0/6Nnr0aPt2xAtoo6OjnfUVExPD
dd5//33JIjpE5EWffPKJJ309/fTTVE7+u3r1aq7jzEwpGb7dlcb5rrvuMsBM
AWhJwExVHRIH932mul/Ni/tM3QsfXM2L+0wBAIDR/a0x+/bt406nT5/usvLw
4cOpZrt27Wpra53VWbFiBTe4ceNGyaL6+npeRELqdl/r16/nRtasWfPbb7/x
Z4dmWlNTc+ONN9LS0NBQ+gwzBaClATNVdUgc3M/m1f0JSLX1eDavO+GDJyDh
2bwAAMDoa6YNDQ233nord7pnzx75yjt37uSatjeK2jN37lyuduDAAfulfLvr
0KFD3esrKyuLb1adOHGiYL4d/Deu5tBM33vvPYPFbfniYZgpAC0NmKmqQ+Lg
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
EpSJ7qPhXvjVlFCVjCffWS81CxxDeiWeG332WenSzz+3LvrLX/RIzg/YsqVJ
2QYPFu6+u+maZ7J4kaws4dJLreW33SZMnmw+ySjesbtqlYteyAS5Jinwww8L
Tz8tXHihtWTNmqZqx49b9bB9e3P7EydaLZVM2bZacbHQvbt19T//2XwmlHYf
/zhwoHDunIp+GxuFzp3NohcRIZhMwnvvmRf94x8aDKyXKCtrZtkzZ3IxzBQw
MFMANKelmaknx88CzFTXWBK1hE9ZZpZnqn1arydmSn3xI4+o9wA9W8rhV1NC
VTKSr6HLJyC5kQPQhoULrcfwJFaVldKl+/dbl/bsqUdyfsDQodYR2LXLWpKR
IfTvbz23WF1tLXzxRWu1r75qWjcy0nzOlAq7dZO7UZdkqlMna7XsbGvhqVPm
9qlw0KCmmuTFfO7ywAFrSUyM0KuXufCaa5q6+OQTazIffGAtIal87DFr4dat
KvrNzDR/JmNlamoC4AR6ly5NZvrSS1wGMwUMzBQAzYGZqjp2hZnqG+I9p3Wm
OlXvOXXbTKkXfkFMgN5baht+NSVUJSP5GsJM/ZeBA63H8J9+6mDpr79al15x
hc8z8wPq661Xul5/fbNy8QLXY8esJVdeaf7x1lulLXz0kbVmSorTXv77X+t5
zx07mpWzS1K50Wj+MS3N2tSECc2qffmltZx2FkGVu3a1nrq1vd44NtZ6zfbU
qSr6JRWlEbj6auGPP8yLtm83L3r5Zafb4g/cdFOTmY4axWUwU8DATAHQHJip
qmNXmKnuMXLlSH6VDKniqfxTCk+eumGm1DK1zyJMPQbck3jtw6+mhKpkJF9D
mKmfcvJk042T4lkzW0Qz7dfP17n5Aw0N1mt0r7uuWfnf/24dlv/7P/OPVVXC
sGFC374OLnP97jtrzSNHnPbCV1Pff7+0/PffzQ8jon/5ZOjatdamfv65WbXc
XOsFxm+8Yf5x3TprtePHpQ3GxZmvOhav5lXY73PPmatddZX5VGm7dua+/PwI
hPIUzbR/fy6DmQIGZgqA5sBMVR27wkz9ITrN6hSRE8HOaGow/Xj2x86zOsuv
ospMqbWNZzdSy4LFf6mvwHpvqbPwqymhKhnJ1xBm6qd88IH1AP722x1XEK/1
HTzYt5n5DU89ZR2BLVusJWlp1pOSvXq5fpnOo49axb+83GkdvrVz7lyzCJ8+
bT4hO22a+XG4v//erNr771szyc+XtkBSTOUjR5o/f/aZ+fMll5iv4C0tNWvs
xx8LCxaYH1TrXr9Go/maWH4G1J/+JGzc6GKTdWfq1CYzJfe0nDiGmQIGZgqA
5sBMVR27wkz9J8ZtGFd+znp4RhYZlhQW+l2os8oKzZRaoHbYSQlqn3rRfUu1
Cr+aEqqSkXwNYaZ+ys03Ww/ghw83K4l9/O1v1goTJ+qcamWlMGKE+QpVJfHl
l5r1GxVl1jEehGuvNecgPsd4zhwX64p36Q4Z4rQOaSDXWbq06Z5Wjm7dzLvg
/7d3J3A21X3gx+9gjH3JTqUohUqRomSrRMpDlNLyiEilkpJKIaHkz4MknsqD
LDU9oiRbstS/wl+2spayje2xZ5oxzPl/7/xuv3vc9Zxxxt0+79fv5TVz7u+c
e+7MnZn7ce89R5M8VMtPnfLdiDrAUe3a7o979vS8S3TSJM87RvVo3944dMj2
9SrSdz7FGrX089Rq5JxVhzKFQpkCjqNMbT12pUyjaiQNTBq6fOifmX+qm5md
nX3gzwPjVo6r814dn5mhy1Tmj181XtbN/vs5C9mmbFm2H/Hb6OCIqruErZ3x
+TGkTKPR0aPeg8eGHYMGRXhv9+61uqsyunRx8qpnzw5wFWHPBfPzz56nVuWL
7P98pbZu3VmbTU52n/REHdRIjYULPTPvvdfzZKi/5s29r1xVz9KqJ2rVE7uy
QX1emEaNPM/zWr/emPPVV+79L1jQfVSoFi2MLVsMyhR/o0wBx1Gmth67UqbR
OV5a9NKe43uyTa+Fy8jKkH6ZtWlW/2/6t/qo1eGTh/VFjSc2liWyXC6VOTJT
XyRbkO3I1iJ+i/JiRNVdwtbO+PwYUqbRaNkyG603a5bRvbt7fPxx4K098YT7
0rVrbe+G/xk2A9q3z8be/n1EVgfoFzynpLgDsFUrb2++9prvKU01+TpUquRZ
UaaFMH++d7cbNHAf+FcZM8aTltWrG5mZ7iUPPOD+tGTJABtp3dp9UZUq7o9l
I66/X8g6bpxnwu+/u5+3Vcs//NDe9cackyfdb5rWp+XNQZlCoUwBx1Gmth67
UqbRPC4bfdmMDTP2/7k/O+zbtc4m82UtWbfaqGoRvxV5N6LqLmFrZ3y+X5Rp
NBo71hMmUjQzZgQY+jg/BQq4D7OjPi5SxNi2LcDW1Hk2Z8+2sQM7d7rPoel/
PNtgNmxwF5+VceCAjd0I4ccfPbf68suNTZs8C//3P3efquWjRgVYa8ECz9lY
ZDz1VJirWL7cM7NECfcX2Uyfieann9yfduvm+fr7a9TIfdGVV7o/Vs+fynj+
+bPmyHdNfY/ka27reuMCZQqFMgUcR5naeuxKmcbESBmU0u2Lbqk/p67bt+5/
J/+XmZVpbtXTZ07LElkul8ocmSnzI77P52FE1V3C1s74/BhSptFIh+dddwWe
8MYb3ufUjh/3PsUmHXT2E1JuuShTde4V62V6/j3zjOcm+xxZ9/Bho1w59/Jr
rvFd5cMPve/uDP1sqaLPBdOune9FixZ5Lpo61f3pgAGeTzMyfGfWquX9Sj7y
iGfaunW+026+2b38ssvsXW9coEyhUKaA4yhTW49dKdMYHbk+n2k8jai6S9ja
GZ8fQ8o0Gj38sCdAevYMPEGf6nTkyLPKVC3xEZdlKs0ue5gvX4CL1Ns5fZ7B
1PEocfr++5auIjPT8+rZtm19L1q71rO1995zfzphgufTHTt8Z5Yt692CPoOq
fpJXkwmyvEIFe9cbFyhTKJQp4DjK1NZjV8o0Rgdl6oqyu4StnfH5MaRMo5HK
LhnSMv5WrvS+XXHvXt8yLVxYHVjGK2CZbtvmPlDq44+74/eDD4z9+70XffON
cccd7lUuucTdXIsWhd9h+cO3fLmlsXNnLr4eATz0kKdM/c/5ot7aWbq0d8nr
r3tfH2vr8EHquEOXX+67fNass15VO29e4GDULzkeOtT9qT7Rz7RpvhusU8f7
al7r1xsXKFMolCngOMrU1mNXyjRGB2XqirK7hK2d8fkxpEyj0T33eALkuecC
XKrPF9Ohg/tTXab//rfnPJg33XTWa3r9y3T0aM9MPcqVM+bM8Vxat+5ZF6lr
CSEix+b9P//Hs0G5LWa//WYULepeLnGtfPut5ylIuY12DwOlD7KkT5mqqHeM
FivmPjOpOHXK/Y5gWdKw4VnnUe3Rw7O6OgLwwYOefbvxRuOvv7zT9AGvhg2z
d71xgTKFQpkCjqNM8+ixa2w98o/7QZm6ouwukeufLIMyjU5PP+0Jk1tu8b0o
NdX7qlT13Kgu0+++c6eN+ljCTfMpU/28W5MmxpQp7p5VT9ilpLizTnz6qXHf
fZ7nTMeNcx81KLSIlOnOne5j4aqnTd95x/32UiPnOcqaNT1XpI5UnJXlfeXz
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
V+rXr1+iRIkLL7zw/vvvHzt2bGZmZrCbIBOuvPLKlJSU6tWrd+rUSR4b+8x5
7LHHwu7D/PnzLX/Z4MvxMu3Vq5faSLly5e4K7p577nHwVkSVN99880YL5Gc2
0nt6FsoUcBxlCgCIe48++qh/TYhq1apt2LAh7OorVqyoUKGC/+r58uV7/vnn
9TSJyoDXYmZ+xebGjRvLly/vP6d58+bHjx/32YcXX3xRrs5/8tChQ83TypYt
G3YfRo8efW5fzoTmeJnefPPNYb9lokaNGg7eiqgS7MfTR0pKSqT39CyUKeA4
yhQAEN8kxNQj2wsuuOCtt96aN2/e1KlTb7nlFrXwqquu+ivkM6dHjx695JJL
1OS77757+vTpX331Vf/+/YsWLaoWfvTRR2pmamrqVUHoqLzhhhvU5BMnTkhr
qIX333//F1988fnnn//jH/9QS2666SbzPkycOFEtz58/f+/evWXm+PHjJavV
wnfffVfPbNq0acAduOKKK/Qj/Llz5zr9NU4gzpZpVlZWkSJF1EYqhNSjRw/z
imfOnFmwYEHfvn0ffPDBjh07Dho0aPbs2XKncuImhjJlypRhw4YdOHBALwn2
FL918tNU04J69eqd4xU5izIFHEeZAgDi2OnTp4sXLy4P+0uVKrVr1y69PDs7
Wx7PqyL48MMPQ2xBHoeraS+88IJ5+Zo1a1JSUqxUyR9//CFRLDPLlCnz+++/
q4U6Np9++mnzZKlUtfy3335TS44cOSIrunKeov3666/1TElmSU510w4ePBh6
H6Rn1Wblg9AzEZqzZbp27Vq1hQsvvND6WvLITf9viVn16tV//PHH3O2JRddf
f71c0bp169Sn8rNTqVKlPL3GqEWZAo6jTAEAcWzlypXqQfsbb7zhc5EEo7ro
ySefDLGFO++8U+YUK1YsPT3d56LOnTurLZifQvJx6tSp+vXry5ykpKRFixbp
5a1atVLPgUp4mucvXbrU55nQ+fPnqyVPPPGEz8b1RdK5IW7CrFmz1LSmTZtK
qoeYibCcLdP3339fbaFdu3YWV5FvenJysqwicfr222/Lp/JA7r333rvmmmtk
YYECBdasWZO7nbHi0UcfbdCgwfbt29WncgeWa8y7q4tmlCngOMoUABDH5s6d
K2FYpUqVBQsW+FwkfwRVFLRt2zbEFtq3b3/llVfeeuut/he99NJLagv6KSR/
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
     "], {{0, 502.5}, {623., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{623., 502.5},
   PlotRange->{{0, 623.}, {0, 502.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`vInitial = 
     10, $CellContext`\[CapitalTheta]Initial = 
     35, $CellContext`\[CapitalTheta]Final = 
     30, $CellContext`t = -3, $CellContext`ball = {{
        GrayLevel[1], 
        EdgeForm[{
          GrayLevel[0], 
          Thickness[Large]}], 
        Disk[{0, 0}, 3]}, {
        GrayLevel[0], 
        Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
          1.05, -0.7}, {-0.25, -1}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{-1.1, 0}, {-2.3, 0}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{-0.25, 1}, {-0.75, 2}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{1, 0.75}, {1.5, 1.5}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{-0.25, -1}, {-0.5, -2}}]}, {
        GrayLevel[0], 
        Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
        GrayLevel[0], 
        Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
        GrayLevel[0], 
        Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
        GrayLevel[0], 
        Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
        GrayLevel[0], 
        Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}}},
 CellID->724530839,ExpressionUUID->"4b84d064-1448-42c7-bcc4-db27907cdd7c"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Xd8FFX///0NCSH0HkAloSMiXwRRkKKiNEFBEGkGAoheXoCACagI0kGK
YgMLImABQUBB5ULidQGWW0p+FJGahISSBBK+6Vdogv4+956bucdt2U0ms7vh
9fyDx86ZM2fO7G525s3MnKk/cny/Z0tZLJboEPmn34iXOkdFjZj8RBWZeHJc
9D//Me6ZUY+Mm/jMP56JajcyUAoz5J/EIIvl/339l50rV67k5eX9LwAAAAAA
hpKwKZHTPofaZNIsq5ycnP8CAAAAAGAoCZsqdTrLp/n5+TI3Nzc33+oSAAAA
AACGUnlTgqfET3nhMJZKgL148aK3ewoAAAAAKMkkeEr8tAmn6iJeYikAAAAA
wBxaONUu683MzFQX8Xq7awAAAACAm4W6rFcCqcTSy5cvq1Oo3u4UAAAAAODm
om4slVgqETUnJ4freAEAAAAAJpMoKoFUYun//u///ve///V2dwAAAAAANyMJ
pOpRpyRTAAAAAIBXkEwBAAAAAN5FMgUAAAAAeBfJFAAAAADgXSRTAAAAAIB3
kUwBAAAAAN5FMgUAAAAAeBfJFAAAAADgXSRTAAAAAIB3kUwBAAAAAB5JtNpr
FfN3qlBVcL9BkikAAAAAwCMkUwAAAACAtxyx+s49qrI7zZJMAQAAAABuIpkC
AAAAALxFXaBrHz+z/86+gjtX9pJMAQAAAAAFIpkCAAAAALxLDW1UiGSqFnTd
OMkUAAAAAFAgkikAAAAAwLvUQ2EcplFnVGW1oOvGSaYAAAAAgAKRTAEAAAAA
3kUyBQAAAAB4F8kUAAAAAOBdJFMAAAAAgHcxNi8AAAAAwLtIpgAAAAAA70q0
KkQyVQu6bpxkCgAAAAAoEMkUAAAAAOALjljZx0+HVGV3miWZAgAAAADcRDIF
AAAAAPgCdYGuGtoo5u9UoTtX8OqRTAEAAAAAHiGZAgAAAABKGJIpAAAAAMC7
SKYAAAAAAO8imQIAAAAAvItkCgAAAADwLpIp4L7/BwAAAIDnCjzSJpkC7vP2
HzQAAADglwo80iaZAu5Tf1Z/AQAAAHDP//k//4dkChiLZAoAAAB4hGQKGI5k
CgAAAHiEZAoYjmQKAAAAeIRkChiOZAoAAAB4pDiS6fLly4cOHZqSkuLOMfzp
06cjIiI+/fRToxpct25dVFSUm5W9LiMjQ3r7ySefFFjz/Pnz8+bNK+LqLl68
+MADD2zcuNFFna1bt27btq2IK7rJkUwBAAAAjxRHMm3QoIHFYlmzZo07x/Af
f/yxVL7jjju0FcXExOzfv7/QDY4aNUoq//777+5U9joJ5tLbAQMGuK526NCh
8PDwmTNnFnF1O3bskNWdOHHCRZ3jx4/XqFFj/vz5RVzXzYxkCgAAAHikOJLp
li1bpk+fnpGR4c4xfHp6+quvvqqdpDtz5oxEp+7duxe6wZKXTOUtatq0qbwn
Fy9eLOLqXnjhhVatWhVYbePGjQEBAevWrSvi6m5aJFMAAADAI752n6nDZOqR
EpZMJY327t27bt26hlyf3LBhw2nTprlTMyoqqkKFCgcOHCj6Sm9CJFMAAADA
I8WRTKOjo5s1a6aSlCREeT137tz58+e3aNGiTJkyzZs3X7VqlVY5Li5OKqi4
NHPmzEaNGklSK1eunBQOHDjQvkFl/fr1HTp0qFy5cs2aNbt06bJjxw5tVoHJ
dPny5ffdd5+sQuLeE088kZCQoMq1rn788cfyIiQkpFOnTosXL7ZZXDo8fvx4
qVC1atW+fftKT2wqrFy58tFHH61YsWLLli2l5zaJMjY2NjIysnbt2jVq1Bg8
ePCePXtcJ9NNmzZJhYULF+oLx44dKx349ddfu3btWr58+fr16y9btiwvL2/K
lClhYWGyafLmbN++3aapffv2SVPyr+v3QcnMzCxVqlS3bt2cdQwukEwBAAAA
jxRHMpVEKQno1KlT8nrv3r3yWrKPBL2HHnqocePGFquYmBhVWfKgTEqclNcf
fvjhI488IpOhoaES+l566SX7BsWKFStkslKlSt27d2/durW8lsYl4qm5rpPp
O++8o/oj1Tp37hwQEFCrVi1JYVpX1T2td9xxx8MPPyzNymv9HZfp6ekySwrv
vPNOqVC2bFmJb5s3b9YqyCbIXIml0je1sRJvc3Nz1VzZhFtuuUUKZZaEPkmF
9erVc51MZZZU2LJli76wd+/eUnjbbbdJ2O/Ro0dwcLBMSoPSYVlvu3bt1Ptz
9uxZ/VIS/xs2bFjg+6Bp1KhRYGDg6dOnnfUNzpBMAQAAAI+Yk0zLlCmjncKT
fCQlQ4cOVZP6ZHrJydW8Nsl0+PDhbdq00UZJWrhwocydOnWqmnSdTGVBSVta
ZJszZ06rVq1UTFZdFa+99pqae/z48SpVqkj2PHr0qCoZMWKEVJg+fbqa3Ldv
n4TQypUr5+XlqfqlS5eWwJiUlKQqREZG6ht88sknZTI6OlpNSuirU6eO62Ra
s2ZN/bYrKplGRESoydWrV8ukpMsffvhBlQwZMkRKbMbgveuuu6Kiogp8HzR9
+vSRRqRxZ32DMyRTAAAAwCPmJNOHHnpIm3vo0CF1JlFNFiKZ2khISJC5/fv3
V5Ouk+k999wjcz/77DP70YRUV5s2baovnDt3rhRqT3Vp2LChZEl9hTFjxkiF
2NjYS9breOX10qVLtbmpqalSIhFPTYaFhUnS1L+HH330kYtkmpOTI3OrV69u
U66SqXaaODs7W53G1SqonrzxxhtaiaRmKdm5c2eB74PmlVdekTqLFi1yVgHO
kEwBAAAAj5iTTEePHq2vEBwc3K5dO/W6cMl09erVzz77bMeOHZs3b16uXDmZ
269fPzXLdTKVLBYQECAVateuLXlQ2pH0p2aprg4aNEhff8uWLdpZzrS0NHVS
9S4dVSIBUyqMGzfOYQVJo5dupNQHH3xQ3768/y6S6cmTJ2XufffdZ1Oukqn0
RyuxaXn9+vVS8vrrr2slEjBlk7Uc6uJ90KxatUoqTJ482WHf4ALJFAAAAPCI
Ocn0+eef11coU6ZMUZKpukQ2KCioffv2/fv3l0zqfjK9ZB2DSPpz++23qxQp
2VZd1Kq6Ko3rK//www9ask5MTFSLPKkj2bNHjx7ffPONVBg5cqTMbdGihb5C
w4YNhw8fri1us2mHDx92kUzT09Nlbps2bWzKC5FMO3XqpL3Jrt8HjTqfO3v2
bGfvJJwhmQIAAAAe8btkqiqEh4druezgwYMeJVPNb7/99tBDD1lujHyrunrP
Pffo66iRgj744AM1WatWrcaNGztr8N1339Vf+muvRo0aYWFh+pK1a9e6vs80
ODi4QYMGNoWeJlOJnKVKlfr2228drsLmfdCoG3i1bYf7SKYAAACAR3wtmapL
Xm2ymH2D2m2qQhp3M5leuHBh0KBBL7zwQn5+vipRF6yq0ZO0EZA2bNig5kr0
a9iwoZTs3r1blaihg9esWaO1uWDBAsmJajgmeSdVttUGuU1ISHj88cdfeeUV
NdmlSxep8OGHH6rJ7Oxsdbmvi2TapEmTihUr2twN6mkylTVWrlxZGyLY9fug
mThxohRu3brVWd/gDMkUAAAA8IivJVNRrVo1KenZs+d7771n36BktFq1aqk0
N2fOHImK0pr750zVE1V69Ojx9ttvz5gxQ9ZVqlQp9YhP1dVKlSqVL1/+qaee
kuDWtGlTKRkxYoS2+KFDh2QRWaMku5kzZ0onLdZHzKixecVzzz2nrox98cUX
o6OjQ0ND9WdRY2Njy5UrFxwcLJ2X3NeiRQsJjK6T6fjx4/WDHSmeJlPpp839
sy7eB0379u3l3dDyLNxHMgUAAAA8UhzJdPDgwZJ61HMw1Qg/48aN01cICQnR
RvU5cuSIVHjmmWe0uWvWrFHPUtEurNU3eMkaIbW7Ixs0aLBx40aLbmxeaUom
pVmHfZN426dPH/UA0ICAAAmV2pNWVDIdM2bMhAkTSpcuLa9r1KghsdRmaKAd
O3Z07txZPepU0tyTTz6pPSNG5OfnS5asX7++6l5YWNiKFSv0i3/99ddt2rRR
ow+1bNly69atFrthl/TUedi5c+fqCx9//HEpTE9P10osfx8AecOGDVKyePHi
S9YzpBKl9ed5Xb8PisTewMBAm7tu4SaSKQAAAOCR4kimhsjKyrIfLVYvOTk5
MTGxcI3LVhw/fjwjI0NfqD+9K6s+evSoiyeqZGdnSwsuzidKXLUZUEgvNTVV
C9oFkqQcHh6uXSHsqdWrV0sylc/OfpbD90GZPn16nTp1UlJSCrfSmxzJFAAA
APCIzyZT8zm88NgXSApu27ZtoTs2aNCgnj17erRIbGxs1apVucO00EimAAAA
gEdIphqfTaaXrOE0IiJi7Nixni6Ym5tbqVIlbcwld+zcubNFixa7du3ydF3Q
kEwBAAAAj5BMNTk5OQcOHHD/IlvzxcTEeLqIfF6SNB1er+uMvAkurkOGO0im
AAAAgEdIpoDhSKYAAACAR0imgOFIpgAAAIBHSKaA4UimAAAAgEdIpoDhSKYA
AACAR0imgOFIpgAAAIBHSKaA4UimAAAAgEdIpoDhSKYAAACAR0imgOFIpgAA
AIBHSKaA4UimAAAAgEdIpj7r4g35+fn/tcrVUSUyS6vm7f7i/0cyBQAAADxC
MvVN+kyak5OTkZGRnp5+/vz5VCt5IZNSKLP0+dTbvcb/h2QKAAAAeIRk6oO0
WJqbmyvxU3JoWlqavPlSeM1KXsikFMosqSDVCKc+hWQKAAAAeIRk6mu0WJqT
k6POk2ZnZzv7+GSWOn8qlf06nCYnJ//nP//5+eefs7KyvN0XA5BMAQAAAI+Q
TH2NdrZUxVJ57foTlAoqnGpnTr29BZ6RDo8ePTooKMhiFRgYOH78+Ly8PG/3
q0hIpgAAAIBHSKY+RZ30lFwmb7U7sVRR4VQWkQVNOG36nXu2WBXY2sKFCyWQ
3nbbbVFRUfK6WbNmMjlixIhi3YTiRjIFAAAAPEIy9SnadbwpKSkuLuK1J5Vl
Ee2a3mLtpIHJdO/evaVLlw4LC8vMzFQlWVlZjRo1CgoKiouLK9atKFYkUwAA
AMAjJFOfok6YXrhwITU11dOPUhaRBdVp02LtpH0IzbnBfpbrpqZMmWKxWNau
XasvTEtLO3nyZG5ubnFuRPEimQIAAAAe8WIylQB1/vz5U6dOJd5w8uaWYBUX
F3fgwIGzZ896+lHKIrKgLK7aKUQHtA9CPhT5aJwlXAOTaf/+/QMCAjIzM9et
WzdmzJiRI0d+8sknKSkpRn3HvIVkCgAAAHjEi8lUsk/i3xme9fyLxMn4+Pjj
x4/HxsZmZWV5+lHKIrKgLC6NFDGZKmlpaQ4/OH3w/JdVoZNpixYtwsLCJJ9a
dOrWrXvixAmjvmZeQTIFAAAAPOLFZKo/W0oyPWlNpnFxcceOHdu9e/fVq1c9
/ShlEVlQFlenTQvRAZuPQz4ghx+cgcm0fPnyEkUDAgIWLFhw5swZ6fzTTz8t
JY0bNzbqa+YVJFMAAADAIyRT36El0127dhUumcqCpiXTnIK4k0xvvfVWyaEv
v/yyVnLx4sUHHnhACg8ePGjUN818JFMAAADAI1zN6zv050wLdzWvsedMXV/N
a0gy7dSpk4TQTZs26Qtnz54the+//75R3zTzkUwBAAAAjzACku/Q7jOVDyUp
KcnTj1IWkQUNuc/UnRGQDEmmw4YNkxC6evVqfeHYsWPt46p/IZkCAAAAHuGp
MT5FwqBkunPnzhUumcqCsrgfPTVm+/btEkLvu+8+7Xmmkqxr164dGBiYnp5e
rFtRrEimAAAAgEdIpj5FPc9U3ueEhIS0tDT3P0epLIvIgv71PFPRt29fCaet
W7eeP3/+lClT6tatK5OTJk0q1k0obiRTAAAAwCMkU58ioTI/Pz87OzslJSU+
Pj43N9edD1GqSWVZRBaUxf0rmWZlZY0dOzYgIEA9MqZatWqvvvpqsfbfBCRT
AAAAwCMkU1+jnTZNTEyMi4uTuOf6E5QKUk0qm3PC9JLRyVRJT0/fvn27fBtN
6L8JSKYAAACAR0imvkaimbzJkvIkrMXHxx89ejQlJcXZxyezpIJUk8qyiCzo
lWTqQnF3xjeRTAEAAACPkEx9kBZOL1y4kJiY+Pvvvx85cuTUqVOZmZlXrOSF
TEqhzJIKUs20WHqJZOoGkikAAADgEZKpb9LCqbznqamp8fHxkkP37du3x0pe
yKQUyiypYGYshTtIpgAAAIBHSKY+S4XTvLy87OxseefT0tIkhyZbyQuZlEKZ
JRWIpb6GZAoAAAB4hGTq4/Lz81U+zc3NzdaRSZVJpYK3+whbJFMAAADAIyRT
f6EiqoZA6stIpgAAAIBHSKaA4UimAAAAgEdIpoDhSKYAAACAR0imgOFIpgAA
AIBHSKaA4UimAAAAgEdIpoDhSKYAAACAR0imgOFIpgAAAIBHSKaA4UimAAAA
gEdIpoDhSKYAAACAR0imgOFIpgAAAIBHSKaA4UimAAAAgEdIpoDhSKYAAACA
R0imgOFIpgAAAIBHSKaA4UimAAAAgEdIpoDhfCqZWgAAQKF4ex8O3FxIpoDh
SKYAAJQA3t6HAzcXkilgOB9Mpt7uBQAA/oS9J2A+kilgOJIpAAB+jb0nYD6S
KWA4kikAAH6NvSdgPpIpYDiSKQAAfo29J2A+kilgOJIpAAB+jb0nYD6SKWA4
kikAAH6NvSdgPpIpYDiSKQAAfo29J2A+kilgOJIpAAB+jb0nYD6SKWA4kikA
AH6NvSdgPpIpYDiSKQAAfo29J2A+kilgOJIpAAB+jb0nYD6SKWA4kikAAH6N
vSdgPpIpYDiSKQAAfo29J2A+kilgOJIpAAB+jb0nYD6SKWA4kikAAH6NvSdg
PpIpYDiSKQAAfo29J2C+4kimy5cvHzp0aEpKihHH+AW39uWXX0ZFRSUnJxuy
Ol+wbt062SJD3sDz58/PmzdPXhw8eLB79+61a9e+++675R2Tkq1bt27btq3o
q4A9kikAAH6NvSdgvuJIpg0aNJC/5TVr1hhxjF9wa88884xUOHTokCGrE0eO
HImJiZGNNapBT40aNUq26Pfffy9iO/KehIeHz5w5U0JurVq1IiIiZLumTZtW
rlw5iaXHjx+vUaPG/PnzDekz9EimAAD4NfaegPmKI5lu2bJl+vTpGRkZRhzj
F9ya4cn02WeflQZ//vlnoxr0lCHJND09vWnTpt27d7948eLy5csl4MsLrf0B
AwbIi40bNwYEBKxbt86ATkOHZAoAgF9j7wmYrwTcZ0oytSchtHfv3nXr1lWX
BC9evPihhx7S5s6aNatHjx7qdVRUVIUKFQ4cOFDEPkOPZAoAgF9j7wmYrziS
aXR0dLNmzVQmknglr+fOnTt//vwWLVqUKVOmefPmq1atsllkxYoVjz32WJUq
VcLCwvr166cPZfrWLlkz14IFCzp06BASEqKask+mcXFx48ePl6WqVq3at2/f
9evXa7Nc9+f8+fMyt3LlytKg9EReb9++3eE2SpvSB6lZs2bNLl267NixQ5s1
duxYWVDe2F69ekkHQkNDBwwYcOrUKf3iu3fvHjp0aJ06dapVqzZo0KCDBw/K
IrKlaq59MnWxRQ5t2rRJWli4cKGa3LNnT2Bg4Pfffy+vjx8/3rBhQ3kH1KzM
zMxSpUp169bNdYPwCMkUAAC/xt4TMF9xJNOBAwfK37LKYnv37pXXdevWlSD5
0EMPNW7cWP2lx8TEaPWXLl0qJRISH3744aZNm8priajSMfvWxPTp02WybNmy
Xbt2vf322+V1eHi4Ppmmp6ffcccdUnLnnXdKg1JTktfmzZvVXNf9kQ2U3Kca
vP/+++W1ZDr7DZQcLRUqVarUvXv31q1by2tpTavZu3dvtYoGDRpI4pPtUq1p
i0s2lDwrhdJ/aaFChQr169eXSXWF7SW7ZOp6ixySpqT+li1btBKJ8xJOJW4H
BAQ89thjubm52qxGjRrJrNOnTxfwucJtJFMAAPwae0/AfOYkU0ln2snHadOm
ScnQoUPV5NGjRyUWVa1aVfKaKnn77belQkREhH1rBw4ckGBVvXr1+Ph4NVcF
VX0yHTFihExKuZrct29fxYoVK1eunJeX505/LrlxNe/w4cPbtGmzf/9+Nblw
4UKpP3XqVDWpkqmkv/z8fJk8d+6cdFhKTpw4oSr07NlTJmfMmKEmU1JSXCdT
11vkkEq+NidqExMTv/vuO/sLd/v06SOVV69e7aw1eIpkCgCAX2PvCZjPnGSq
v8lRIqSUdOrUSU1+/PHHMrlo0SKtwsWLF9euXfvNN9/Yt7Zs2TJ5/cYbb+gr
16tXT59MGzZsWKdOHX1/xowZIxViY2Pd6c8lz+8zTUhIkPr9+/dXkyqZ6i8D
VmcwtUe0SFC97bbb9C3I9rpIpq63yF5OTo7MlbW42f9XXnnF5iNAEZFMAQDw
a+w9AfOZk0xHjx6trxAcHNyuXTv1WoWsf//73+605rDy448/riXTtLQ09Uty
l44q+eijj9zpzyX3kunq1aulWseOHZs3b16uXDmp369fPzVLJdPU1FSt8qxZ
s6Tku+++k9fx8fHy+pFHHtG3dvz4cWfJtMAtsnfy5EmZe99997nov96qVauk
/uTJk92sjwKRTAEA8GvsPQHzmZNMn3/+eX2FMmXKaElQjV/0448/utPayJEj
7TOjqqCSaWJiovoleVJHolyPHj3USdgC+3PJjWQaGRkpFYKCgtq3b9+/f3/J
pPbJVBKlVn/27NlaMpX3MCAgoG3btvoG5SNwlkwL3CJ76enpUr9NmzbO+m9D
Eq7Ul066WR8FIpkCAODX2HsC5vN6Mn3//felwnvvvaevcObMGe2co761t956
S14vW7ZMX/nOO+/UX81bq1atxo0bO+tb0ZOp9M1iHXZJy54HDx50P5mKZs2a
hYSEaPfVikmTJrm4mtf1FjkUHBzcoEEDNyur+2Q/+OADj1YBF0imAAD4Nfae
gPm8nkxjY2OlQv369c+fP69KtmzZor/eVd/azp075XXTpk2lJ2ru559/rn46
tGQqC8rkmjVrtNUtWLBA0qIasMidZDp69Gips2LFCodbp1rQ35cqrXmUTNXF
vc2bN9+wYcPu3bvVEEwukqnrLXKoSZMmFStWvHjxorMKehMnTpT2t27d6k5l
uINkCgCAX2PvCZjP68lUREVFSZ1GjRpJRIqMjKxSpUpAQIA2XpDNU2Oeeuop
mVRP/xw8eHDZsmXV40e1ZCovqlWrJqsYNGjQzJkz1UC4d9xxh35sXtf9Wbx4
sdS55ZZbpNqRI0dstk7iXq1atVSQnDNnjsRG9VwY95OpkL5ZbpCNffHFF10k
U9db5ND48eOljsNH3thr3759pUqV9M+RQRGRTAEA8GvsPQHzFUcylcAof8vq
+ZjSvrweN26cvkJISIh+fB7JehLNGjZsqH4E5IX+YZ361kRWVtawYcPUc1iC
g4Nffvlldafq4cOHtUV27NjRuXNnWYuUlypV6sknn0xKSlKz3OlPRkaGxGFp
XGo6fGyoxFv1KFXRoEGDjRs3WnRj86oRmdLT07X6EmAtf3+6qJAOv/XWW4sW
LZIuqWGRZKVqltoifSh2sUUOqRtX586d66KOIgk6MDAwMjKywJpwH8kUAAC/
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
eM4pAJiPvSdgPpIpYDiSqf+aM2eOPieqe0tdKMppU/lFdfhgU30yFdKlom0T
AMBj7D0B85FMAcORTP1UUlJS2bJltUg4cOBAd5Yq9GnTH374wSaThoeHR0ZG
rly58tFHH9UKpUvuPywVAGAI9p6A+UimgOFIpn5q0KBBWh4MDQ3NyspyZ6nC
nTbNzc0NCwvTp2B9/JRVSwe0udKxwm0RAKBw2HsC5iOZAoYjmfqjuLg4/Xi8
q1atcn/ZQpw2ffbZZ7VFZL27du2yqSAd0FeQ7nmwMQCAomHvCZiPZAoYjmTq
j0aOHKklwZYtW3q0rKenTW2u4500aZJ9nT///FO6odWR7nnUJQBAUbD3BMxH
MgUMRzL1O3l5eeXKldNi4JdffulpC+6fNrW5jvf222+X74zDmtINrZp0Tzrp
aa8AAIXD3hMwH8kUMBzJ1O+sXLlSy4D16tW7fv26py24f9q0wOt4NdIN6YxW
WTrpaa+KgyTr6OjoSZMm/fnnnw4rrF+/Xip4dDk0APga9p6A+UimgOFIpn6n
e/fuWgCcOnVq4RrRnzYNCwv77LPPfvvtt6tXr+rruHMdr550RqssnSxcx4x1
7do1NYKxw1tfL1y4UKlSJZn7zTffmN83Z3755ZfXX399zJgxixYtOnnyZHGs
QrZX8nhmZmZxNO6zNmzYIFsdExPjcG5OTs7EiROlQmpqqrHr/de//iXNHjp0
qMCasbGx8+fPHz169IIFC+SAx9huKJcvX5bOrF27tjgahxex9wTMRzIFDEcy
9S9XrlzRX8p77NixwrWzfPlyi53SpUv/z//8z9ChQyUTbdq06bbbbnPnOl6N
dEZ/Qa90tXB9M1bbtm2lPw4PxceNGyez7r//fvN75ZC8wyNGjNB/ImXKlPnk
k08MX1H79u2rVq0qsd3wln3Z3Llz5S0dMmSIw7mTJ0+WuXfffbez0+uFk5SU
pP73Y926da5rSmAMCAjQPnp5LUnZwJ4o6r+bFi9ebHjL8C72noD5SKaA4Uim
/uXHH3/Ujl0lXBSukYyMDP2VtwVyfR2vXt26dbWlpKuF656xnnvuOenMiy++
aFOekJAgSVxm7dmzxysdsyfZRPoj7+Hnn38u755kKJkMCQkx9hGxWVlZgYGB
AwYMMLBNv7B161b1fyz2s5KTk9W59e3btxu4xuvXr3fq1En9ObhOpl999ZX6
j4hXX31V/tamTZsmn7uUrF+/3sD+/HXjO3b06FFjm4XXsfcEzEcyBQxHMvUv
CxYs0KKfHEvLr5ynLcjR8iOPPOJ+LLW4cR2vJjIyUltKuupp34rDhx9+KJ3p
2rWrTfnAgQMt1mezeqVX9jIzMytUqBAUFKT/e2zXrp108q233jJwRRJ2pM2P
P/7YwDb9wrlz59R/s9j/1Tz99NMyq2fPnsaucd68edqfg+tkOmzYMKkjfz5a
iRp/e/DgwcZ2qXnz5mFhYca2CV/A3hMwH8kUMBzJ1L/onxcjpk+f7mkLsoj7
mVSCkjvX8WreffddbVkfeXbM3r17pTPVq1e3KQwICAgODra5kdOLVyC/+eab
0s9//vOf+sJjx47FxMQkJyfb1//999+feeaZb7/9dvv27aNGjbr77ruHDx++
detWNWvcuHFt2rTp1q3bsmXLbC5PlcqyItVmXFyc1HzggQdat249ZMiQ9957
rxADavmROnXqyLbb/OIdPnw40EpeGLguOWIpXbp0kyZNevfuXWAyHTBggOXv
t42//vrrUvLII484rC+Z9x//+Edubu7cuXO7dOny4IMPzpgxIysrSz6+JUuW
PPbYY/J9GDFihM3Z9rNnz0qb8rX5y/o/VCtWrOjbt+9dd93VtWvX8ePHcyLV
r7H3BMxHMgUMRzL1Lx06dNAnx/Lly7s/YIsci0qQ0d/LViDJNfv27XO/exKj
tGWlq4XaRIPJl1zytfTn9OnTWqEcyUuJHI2rycuXLy9atKht27alSpVq1qzZ
/PnzXTQYGxu71LmMjIzC9VMyqXTp66+/zszM3LRp0+zZsyXLyI7MWX35KC3W
a1MlUmnvuUShxYsXV6lSRf8h2pxyve222+688055ER8fX6NGDYv1lkZ1L6To
3Llz4frvF3r27Cnb+O677+oLH330USl8+umnDVxRfn5+06ZN5Yu3Z8+ewYMH
F5hM1YDb4eHhZ86ckUn5o5ZPVkrefvtth/UleMrce+65R/9BS4x96qmn9CW3
3nqr9ERbSt1dvmHDBnk9YcIEVadChQrqK1S2bFn1PxvwR+w9AfORTAHDkUz9
i/39oe4fUSckJFStWtX9WCq++OILj7onq9CWla56vn3FQoKYCn1qcsuWLTJZ
uXJlLfepo/T77rsvKirqjjvusDi6L1WjH4LY3v79+wvXyccee0wWX7Jkif4z
qlWrlrOxZFUytVgvVD558mRSUpJ2kXa7du22bdsme8AXXnhBJps3b64tdfjw
YSlRQ+uoWw4jIiIkC//555+7du1Sg2u5eIqQv5syZYps4IgRI7SSnTt3WqwD
dqWkpDhcRN6Z9957z9l/RDiLcur/GdQlDe4kU/kpVouUKlWqZcuWKirKJ5uV
leWwvkqmknzXrFmTl5e3fv169T9OsuDcuXPPnTv322+/1axZ0/L3O1X79+8v
i2RbSc0yZcr8+uuv169fly+AGnrL9dON4cvYewLmI5kChiOZ+pfq1avbRCE5
IpVwMaEgY8eOVUeqHrE5u1Qg+eHVlrW5gNaL1E1806ZN+8t64lgFVe3E6Pbt
2+U9lGNydSHrxYsXW7VqJcftJ06ccNia/L0scu7ChQuF62Tr1q3V+yaJXiLP
p59++sADD1isCdrhaXGVTENCQrSztBs3blQtaNdwStpSsUtb6o033pCSf//7
3/J60KBB8vrll1/W5q5du/att95ytuElwIYNG2STJfqpSUmd9957r8Xl05eu
Xbvm4g+kd+/e9ot89913FusJzT/++OMv95KpHK7IX6hN40uWLHE2ULBKpvr/
P2nRooWUDB8+XCt55plnpGThwoXahlSpUqVjx47y+vjx4zKrRo0aZ8+eVXPl
L3fGjBmrV6920Un4MvWd8XYvgJsLyRQwHMnUvwQHB3uaLovC0/tYr1y5oi0r
XS2e98Bj6hZOFSJWrFhhsY5/e+nGzbOjR4+26M6oimXLlknJlClTzOxks2bN
ZKWhoaHamVxJyvXr17c4OYGrkqkspZXEx8dLSc2aNbUSacFiPY+mlXTt2lWC
6uXLl/+6cQWpaNy48fjx47dt2+YjD/opPomJiRbrNc/qHZC0qN7z3NxcZ4tI
Nnz99ded/UfEpk2bbOqnpaVJg/ImS/pTJe4kU/WfJ/Jp7tixIysrS/5t3ry5
xfnN2iqZ6ttU1/EuXbpUK5k2bZqUzJ49W03K77x+Ul19ERIS0qtXL4nAxo7/
DPOpv2Vv9wK4uZBMAcORTP2Lycl07NixHnXPN5OpumIzPDxcuif/ymv9Q0Lv
v/9+KZHMopXs2rVLSp588kmHrUkj2c4V+mmYXbp0kZW+9NJL+kKZlMIePXrY
11fJVD/r5MmTFmvM1FcLCAjQkml+fn6ZMmUkiWhz58yZo56WolSsWFHiTAke
BEk+HXUT7v79+69evdqwYUPL39Nc0T3xxBPSZr9+/WJuUOe+J0+eLK8zMzPt
F5GeVKpUSf5eEhIStMLTp0+XL19ekqP+RlGNSqa7d+/WSoYOHSol+pOeM2fO
tOiiqAqqsbGxalLW1bJlS/0fe5s2bYwdAwpmUh+it3sB3FxIpoDhSKb+xf5q
3mI1aNAgj7rnm1fzSmBUd+Gpa1nvuusuffhSx+f6s2YnTpyQku7duzts7dVX
X3Xxjh04cKBwnVQP3JkxY4a+8F//+pcUtm/f3r6+Sqb6q0kLTKaqNZsrtHNy
ctavXz9q1Khbb71VbYLE1cJtgl9Qg1+tXLlSPU6oSZMm6ppbF+QtcvYfERcv
XrSprNKuMw7vGlYPKdbfDqyo/zPZsmWL/SIqmepvai4wmd577701a9a0+Z8T
iaILFiyQ90SNEiYB2X6L4BfUF8zbvQBuLiRTwHAkU/9iPwJSz54933SPRCpP
R0DydEQU3xwBSTRo0MBZOlBDHumP2JOTky3OR6l9//3373Ku0Ddpzp8/X1b6
6KOP6gvVU3iioqLs6xcimY4bN04qxMXFqcmPPvrohRde0C4elndgzJgxzoJw
iaFGhZowYUJYWJi82Lhxo+v6ru8z7dOnj019SYLP/12jRo2kZrdu3eS1w6/H
wYMHpUKVKlVszlarW0f/85//2C/iaTKVT7lUqVJDhgxRsySQSrn+yoHExMTy
5cs7y87wfew9AfORTAHDkUz9S1GeGvOX9ayZHKC6n0wlauXl5bnf/rZt27Rl
feSpMUr//v1VryQg2Mzq1KmTlGdnZ2slR44ckZLHHnvMzB7KPqtChQoSJLWs
JCUqPenvgdUUIpk2bdpUEro2S425pB8BST3r9oknnjBwu3zNp59+qn1F3cng
khZbtWrl7D8iJOcW2ILD+0x/++23X3755dy5c39Zr+ZV/2U0a9YsrcIXX3xh
sT7JxeE9sJ4mU9WabLua9c0331isz4vRBuyS73/lypWl8Pfffy9wi+CD2HsC
5iOZAoYjmfqXkSNH6pOjzcWfrskx9h9//KFuN3OTHLtKfnH/9sl33nlHW9bZ
4C1eMXfuXIv1kRwHDx60mTVw4ECLbjxbIZFBSoYNG2ZqF613fcp6y5QpI9lw
0qRJdevWtVgvqHb45nuaTGUDZe4///lPbdZnn31msY7tfO+990ZFRT300EOl
S5eWSYdBuMRQz81Rfv31VxPW6DCZqmipPWpWJUeL9SqFKVOmDBgwQF1//t57
7zls09NkGhkZKQ2eP39ezbpy5Yq6VKB69eoRERHPPPOM+j+QNm3aGLvtMA17
T8B8PpJMpWXZiX/66afF0XhRfPnll9Kx5ORkr6xddruy9pSUlCK2I7vOefPm
qddyDNm9e/fatWvLXli2Tkq2bt26bdu2ovYVOiRT/7JgwQLtuLps2bLyK+f+
steuXbtqpT340k09e/aUr4osXmA+VTdLKtLVom2rSdRjPfWPfZS8ICWvv/66
+Z1ZtWqV9nAfSQ2S7p2Nl6ueyvr4449rJWrg2SZNmuirSSwNCgr6y3oRsszd
vHmzfu7y5cs7duyonUavV6+eTYWSR77GatCnfv36mbPGIUOGyOpkF6YvlAwo
he+8845WIu+8/lr9W265xcXThO+55x6po/9vFjW675o1a7QSyaQW613D8mcr
u9FWrVrpW0hKSpJAGhoaqv2YSIL26AIJ+BT2noD5fCSZnjp1Sv78Bw4cWByN
F4V6eNmhQ4e8svZRo0ZZrBcCFaUR6Xx4ePjMmTPltYTcWrVqRURExMTETJs2
rVy5chJLjx8/XqNGjfnz5xvUa5BM/YwaLEWpWrWqR8vKAer169fl34yMDPv7
VfXCwsLUQys0zz77rEq1qgVnq1Cn+ZSffvqpyJtrhn379klvJa2ryT/++KN1
69alS5fWnvphPtnLHD582NgxcuWHdO7cuQ6jx/nz53ft2qU9FxVedO7cudjY
WNn9Gdim/M7LR/+vf/3LfpZ8x/bv33/kyBEJ7AauEeZj7wmYj2Tqmr8n0/T0
9KZNm3bv3v3ixYsyuXz58gYNGqjXqv0BAwbIi40bNwYEBKxbt86QboNk6l+u
XLlSrlw5Lf0dO3ascO1s377dJo2Gh4dHRkauXLlSXdcqEaZVq1b6CvPmzVPh
VLKbw9AkndEqSyf96OGYarzW/v37y89O165d5fW0adO83SkAcBd7T8B8JFPX
/DqZSgLt3bt33bp1teuBFy9e/NBDD2kVZs2a1aNHD/U6KiqqQoUKBw4cKGKf
cYlk6oe6d++uBcCpU6cWrpGvv/5af4ZUf5elJjU1VX8OVHz++edXb5B8anPy
VDqj1XT2yBXfJPuLRx55RN3ZV7t27TFjxly+fNnbnQIAd7H3BMxXHMl07Nix
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
wfLXKj+ShdpEAEDB2HsC5jMtmUq4k5xYpkyZQYMGzZw5Uw1Le8cdd+jH5q1c
ubIccT355JOTJk1Sl8Y99thjWrCSgFa9enVV4aWXXrr33nvV6QOtS5JJLdZn
vkREREyZMiUsLEw9l8HNZCqeeuopi/WSuejo6MGDB0tT6tk0DpOpdKxWrVoq
SM6ZM0dio3oujPvJ9NKNs7pKQEDAiy++6CKZun4P7akb37TNL1D79u0rVaqk
f44MCodk6tfi4+PlD0H7w6xQocLu3btdL1K4m0w1derUUcvOmzdPVqc1Jd2Q
zshvyNNPP60fnUkJDQ1dvnw5jwoFgOLA3hMwX3EkUzVqUHp6uk35jh07Onfu
HBISYrFe8CYBMykpSc06ffq0FEoYnDVrlrrPq0qVKgMHDrRp5KeffnrooYdU
hVtuuSUyMjIzM1NfYfLkySpLWqxj5P7jH/+w6Iaute+YunJPe+JnVlbWsGHD
1LNdJNW+/PLLanySw4cPO9zSvXv3ao91aNCgwcaNGy26sXkLXJ0ijb/11luL
Fi2Sz0INiyQbrmaptR85csSd99Ceumt17ty5ziroydFvYGCgvKXuVIZrJNMN
GzZER0fHxMQ4nJuTkzNx4kSpkJqaanLH3CR/y/okWL58+c8++2z//v0//PDD
F1988e67786YMWPs2LGDBg3q0qVLq1at9Gc53b/JVFH3y1ust5DrY6l0QLqh
Vdu3b1+nTp0sdlq3bi0/jEa/AQBwsyOZAuYrjmTqWnZ29vHjx12cmMvLy5MK
LlYkh7UJCQnO5l68eFEWv3DhQqF7mJ+fLy3IWtysn5ycnJiYWIgVybGuZFXt
8alCDnctultrnSnwPdRMmDAhPDzcJr87NH369Dp16qSkpBRYEwUimarnoQwZ
MsTh3MmTJ8vcu++++88//zS5Y+5bsmSJfQwskKc3mYpvv/3WYr2PICgoSN+U
dMC+8tq1a8PCwuzXO3DgwNOnTxu06QB81OHDh5999lk5TPLK2uWoIzo6etKk
Sc5+utevXy8V3Hzklu8jmQLmMz+ZQqPGXGrWrNmbb765evXqUaNGVaxYUY5O
5UMxahWSYdu2bfv888+7rhYbG1u1alXuMDUKyVS+SxbrYD72s5KTk9VlD9u3
bze5V55Sd4LrlS9f3kUs3bNnz8cff+zpWl566SX9gMCKrNpZ/YsXL86YMUM9
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
9+Q///mPt/tSeL689wRKKu8mU3XSU35dpWV3YqmiwqksIgty2tR837lni5Xr
prKysurVq2exPrN7/vz5UVFRav++du1arU5SUlK1atUkukZGRk6dOrVu3bpS
YdWqVcW8lUVCMnXTN998I32TYxh9oRzJWKz3KOkLn3zySYu3b61yyPefZ+q+
n376qVWrVvbHwJ06ddq/f7+3ewf4lmPHjo0cOdLZoLtDhw49dOhQ0deyefNm
h5lXyKyit19M1LNgJJh7uyNF4st7T6Ck8noyVdfxpqSkuLiI155UlkW0a3oN
7BIKZGAy/eSTT+Rnf+LEiVrJtm3bpKRv375aiYRWKVmyZImaTEhIKFu2bNWq
VU+fPl0cW2cIkmmBcnNzT5w4ERoaWq5cuaSkJP0sOd6TDkdGRuoLu3TpIoU+
+OAYf3meqZuuX7++bNkym4FALdahTp555pm0tDRvdxDwPvl579Onj7NBdydM
mGDgD8Lo0aOl2enTp2sl8lqtS2YZtRZjyc/IPffcIz8a7jwQx5f55t4TKNm8
nkzz8vIuXLiQmprqac9lEVlQnTY1sEsokH0IzbnBfpbrpjZv3jxlyhQJJlrJ
2bNnZUfQsWNHNSnft6CgoEaNGum/eJJkpc6aNWuKY+sMQTJ1TT5N7UBuyZIl
NnPliySHNM2bN9dK/vjjjxo1alSqVMl/71fyL/IRREdH219DKB/B66+/fvXq
VW93EPAC+f2RfVaHDh0cnsEMDQ2dM2dOZmamsStNSEhwNssHRxZSe+pJkybJ
G/LPf/7T290pKh/cewIlnheTaX5+/rlz5+RX9+DBg8nJyZ72XCLMgQMH4uLi
EqxOosgSbzh16tT58+edRX4Dk6k9dW3k9OnT1eThw4dl8qmnntLX+eqrr6Rw
xowZhfjWmYNk6lpeXl6vXr369u27fv16hxXUifLdu3eryY0bN1rsRutFcTtx
4oR8TPZH4E2aNJE/bW/3DjDPlStXVqxY0axZM4eZtFGjRh988MEl/3wwirGi
o6PVe9KwYUM5JPB2d4rKB/eeQInnxWSqYqkc/EgfPHq2lyKLxMbGHj9+PD4+
nmRqiMS/S0tLc/jB6YPnv6yKmEyzs7MnTpw4ZsyYdu3aBQQESA7VvmZqmNbJ
kyfr68sXRgojIiKK+A0sPiTTItq5c6f0uUaNGm+++eZrr71Wvnz56tWrp6en
e7tfN6Pvv//e4QF59+7djx496u3eAcVL9muLFi1yNujuPffcs379+kIPuusp
Scdvv/22Lw98JD184IEHXnnllZLx2Cl/3HsC/s6LyTQpKUlCpUTLPXv2FOLy
MFlk9+7dx44dU6dNvZ3qSgKbZHrq1CmHH5zhyfT8+fP6/3xes2aN9jVbunSp
FC5evFhf//Tp01LYuXPnIn4Diw/JtOjka1ClShWL9Q5HOdTZtm2bt3t08/rj
jz/eeust9XHoBQUFjR8/vhD/rwj4vtTU1Jdeeqly5coOM2mPHj22b99ucpfU
AIAl5q523+ene0/Ar/lCMpWAWbhkumvXLpKpgTxKpjkF8ehq3oyMjOTk5M8/
/7xbt26yI+jTp48qV2O3yuGBvvLevXst1ms7i/DtK14kU0P8+eef8tfNqDs+
4sKFC88991xgYKDNIXqNGjXef//9a9euebuDgDHksOTpp592OOhuUFBQRETE
b7/95pWOTZs2bdy4cfxfkGn8d+8J+C/vXs2rnTMt3NW8nDM1lkdX8xqbTDWy
0vLly8u+QD5TmVTDtA4ePFhfZ/369VI4e/bswn3xTEAyvXmUjOeZuk+OyTt3
7mx/xP4///M/5p9CAoz166+/Pv744w4H3ZUd04QJE06fPu3tPsI87D0B83l3
BKTU1FQJp/v27bN5bIQ7ZBHpPPeZGsijEZAMSaZTp04dPXq0zYp69Ogh+4Jd
u3apL0lwcHB4eHhubq5W4fnnn5cK69atK/J3sLiQTG8eJel5pu7buHFj/fr1
7Y/e+/Xr54NP9gFc+/PPP7/99tuOHTs6uGzXOuju7NmzMzIyvN1NmI29J2A+
rz81RiLMuXPnCpdMZUFZnKfGmMzAsXmfe+45+dlftWqVVpKQkFCtWrWqVatq
37T+/ftLnbfffltNxsXFlSlTpkaNGikpKcW0gUVHMr15lLDnmbrv8uXLc+fO
rVChgs1hvPx5vvLKK748SAuguXr16sqVK++44w6HmbRhw4bvvffeJQbdvVmx
9wTM5/VkKgcw0qzkEY/uJpPKsogsyPNMzWdgMpWvX6VKlQICAgYNGjR//vwX
Xnihdu3asiN49dVXtTpyzF+9evWQkJDhw4dPmTJFDQGxevXqYt7KIiGZ4iaR
kpIybNgw+6sfb7nllk8++YTnz8Jn5ebmLlq06NZbb3WYSdu0afPll1+aNugu
fBN7T8B8Xk+m+fn52dnZcngTHx8vewp3+izVpLIsIgvK4iRTkxmYTMWhQ4c6
dOigjTVRv379pUuX2tTZvHlzaGioqhAYGBgdHV08W2YYkiluKnv27Gnbtq39
4f29996rPZQW8BHnzp17+eWXnQ262717d+6YhsLeEzCfd5PpJd1p08TExLi4
uJyCHs0sFaSaVOaEqbcYm0yV3NzcgwcPurhANzMz86effoqJiTl9+rRB21GM
SKa42fz555+ffvqp/WMfAwIChg4dKn/a3u4g8NeJEyeeeeaZMmXK2AfSoKCg
p556SnZD3u6jK77/PNMShr0nYD5fSKbSpoSa9PT0+Pj4o0ePujiGkVlSQapJ
ZVlEFiSZms8+frrg7c56B8kUNyf5TX7llVdCQkJsDvvLly8/Z86cS9yvBy/Z
tWtX3759S5UqZZ9J5cs5bty4U6dOebuPBeN5piZj7wmYz+vJ9JIunF64cCEx
MfH3338/cuSI7CYyMzOvWMkLmZRCmSUVpBqx1ItIpgUimeJmlpSU9MQTT9hH
gHr16m3YsMHbvcNNRA2626lTJ4cX7tasWXPWrFl+NOguzzM1GXtPwHy+kEwv
6cKprEI9SkZy6L59+/ZYyQuZlEKZJRWIpfBxJNObx832PFP37dixo2XLlvZx
4MEHH/TxayZRAly9enXVqlXNmzd3mEkbNGiwdOn/Ze8+wKMo1/fxbxKSUCKE
HqQ3wUgNTVS6IIggCggIglIEaUZ66CihSOhF5ahIVbAAQZAe4PAjgfyJRHoJ
CZCQwkk/6e3/ZN/jfMedLTOb2ZnZ7P259vLaefedd56d3TB7O20r/YpQu0zQ
NGw9AZSnkWSa9Xc4TU9PT0lJoQXFx8dTDo3Woyc0SY30EnVALAWNQzKVy9mz
Z5cuXTp9+vTdu3c/efJE7XKMcMz7mYqUn5//9ddfV6tWzSAXuLi4TJw48dmz
Z2oXCKVQWlra2rVr69SpYzSTtmvXbv/+/fTNVLvMUiUpKYmSPv1DvWLFivPn
z+fl5YmZ6+LFiwEBAVOmTFmzZk1ERISti7SCXW89AeyUdpIpk5GRwfIpbVxS
eGiSZVLqYNMCAEoOybTk6Kfj0KFD+T8py5Urd+TIEbXrMuSw9zMVLzk52dfX
19XV1SAjeHp6rl+/Pjc3V+0CoZSIjY318/Oj75XRTNqnT5/Tp0+rXWMpFBQU
VKVKFf6q7tu3L/1aMzMLbSU/+ugj/izu7u4aPPLETreeAHZNa8mUwyIqB4EU
7AiSacktW7aMyvby8qLwEhwcPGvWLJ3++pm3b99WuzSwBn1w/fr1E+aF5s2b
//HHH2pXB/bN/EV333///T///FPtGkunxMREdlDE4MGDKfjv3bu3VatWNDly
5Egzc82cOZP61K1bd8+ePefPn6cPiCbLli0bGRmpVOGi2OnWE8CuaTaZAtgv
JNMSKiwsrF27NpW9bds2rrFnz57UsmbNGhULgxI6evRos2bNhPHhzTffpHCh
dnVgf0JCQt59912jF90tX778tGnTtBZ2Spnt27fTqq5Tpw538MOFCxeopVKl
SqaO6U1KSvLw8ChTpgx/K/nyyy/TXBs2bFCiaNHscesJYO+QTAFkh2RaQrQO
161bN3HiRP4lSubPn09v5NNPP1WxMCg5+gW7du1a+uFqkCNcXV1nzJiRkpKi
doFgBwoLC48ePdqtWzdhICXVqlVbtmwZ/WJRu0yZafB+phcvXpw7d+6PP/7I
tWRnZzvpUQI1Osv69evpM/rkk0/4jbdv3z558mR0dLRty5XIHreeAPYOyRRA
dkimsnv8+HGDBg3ojRw7dkztWkAGCQkJH3/8sXBXV/Xq1b/55puCggK1CwSN
ys3N3blzZ4sWLYxm0kaNGm3ZsqW0XnRX+/czLSwsXL58ORXZsWNHU30ok1KH
gwcPUnQ9dOjQF198sX//fm3+b4TSsfUEsC9IpgCyQzKVEf0K7dy5M4swU6dO
FXnVR7ALf/75Z9euXYX5ok2bNufOnVO7OtCW9PT0devWsXQm5OPj8+OPP5bu
i+5q+X6mCQkJo0aNqlGjhk5/cG9oaKipngMGDKA+W7ZsqVy5Mvfx1axZ8+TJ
k0oWLIa9bz0B7BGSKYDskExl1L17d+7Xy6pVq7R2KVfcz7TkDhw4UL9+fWHW
GDp0aFRUlNrVgfri4uLmz5/PDzJ8vXv3PnXqlNo1Orpz585xn0jbtm2vX79u
qqePjw/r1qBBg61bt+7atYsdlV2pUqWnT58qWbNF9r71BLBHSKYAskMyNS8o
KOisCTdu3DDoTNnk8ePH69atY0fzDh48WJWaTcH9TGVBfzWff/55hQoVDEJH
2bJlFy1aZP4OFFCK3bt3b+LEifQ1EAZSFxeXESNGhIWFqV0jFMvIyHj06BH9
2z5y5Eid/pLIpj6aF198kTrUqFGDO4K3oKCgYcOG1DhnzhwFS7ZMg1tPgFIP
yRRAdkimZuTn5xvd8cEMHDjQ1IzHjh3T6W97p6mcgvuZyig6Opp+1jo5ORl8
K2rXrr1nz57CwkK1CwTlXL58efDgwaYuujt16lRcdFezOnbsSB/TwoULjb76
+uuv06tz587lN9KkTn8jVEUKFEtrW08AR4BkCiA7JFMzKF+MGzdurAlbtmwp
0v8vdMp6BvtPqdHLy0uHiyCVdpcuXerQoYMwj3Tu3PnKlStqVwc2R3/g/GP4
+apVq7ZkyZJnz56pXSP8T3p6enh4uMEltbdt26YzfRGkMWPG0KtLly7lN7L/
8fjKK6/YsFbptLb1BHAESKYAskMyLSH6qUM1V65cmX+9I3ru6elJ7fSvloq1
gQIKCwt37NhRq1Ytg2Di5OT04Ycfau1kNJAF/YHv2rWrZcuWRjNpw4YNN2/e
nJGRoXaZ8A/vvPMOfToBAQH8RpqkxrfeesvoLKtWrRK+Sh8uNc6YMcOGtUpn
j1tPAHuHZAogOyTTEqJgwq7xuHr1aq6RndFJ7SyuJicnX7x48fLly+qVCbaV
np4+b948d3d3g5Di4eGxcuXK7OxstQsEedAHvX79elMX3W3btm2pv+iuSBq8
n+mWLVvoM6LPjjtp9MmTJzVr1qRGKpW1hIeH07/VsbGxbJJ60p+wk5PTr7/+
yrXUq1dPp7+VjPJvwQx73HoC2DskUwDZIZmW3IEDB1jlbdq0oXjSs2dPtsvs
6NGjrMORI0eoxdPTU906wdYiIiIGDRokDCyNGjXS2u9YkCo+Pn7hwoWmLrr7
+uuva/BOIirS4P1Ms7Oz2bV2KWyOHj16+vTp7NN85ZVXuCNe2rVrRy0bNmzg
5mL3PHV3dx88ePDs2bPZ+xo+fLjWziW3060ngF1DMgWQHZKpLPbv31+7dm3u
Z6q3tzf/Hpe///47NVapUkXFCkExp0+fbtGihTC89OrVy8z9KUCz7t+/P2nS
JFMX3R02bNjVq1fVrlFztHk/07i4OP6Fy1xdXX19ffk7dtu3b0/tmzZt4s/1
ww8/VK9enc1StWrVsWPH5uTkKF67Bfa79QSwX0imALJDMpVLYWFhZGQkrcyE
hAS1azEO9zNVTH5+/tatW+lHrDDITJ48mTuYEDTuypUrQ4YMMXrR3XLlyk2Z
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
dPnVV19xfdzc3CTtNs3Pz2/YsKGZcFqjRg2cc1o6IJkCAAAASFVTT+0qQDXa
T6aZmeYeJZeSkmJwyaNVq1aZSpc5OTn169e3erfp6tWrzSRTnf6CSLhabymA
ZAoAAAAgyY0bN9jvYXqidi2gDi0nUy5+Zph4yJJPDW4QY2pvKWf79u1W7zZ9
9uyZqTuccqgemdYfqAbJFAAAAECSjRs3sh/D9ETtWkAd2kym/ED634ystP8W
P1J5D9ZCL/EjqhWOHTvGT4VDhw61mC5LuNu0du3a/CVStu3UqVPTpk35jVSV
3GsUFIVkCgAAACDJ22+/zX4J0xO1awF1aC2Z8jMpS6Mp6VmJaVn/Sc16lpoV
n1L8oCc0SY30Ekup1uXT1NRUfiRs3Lgx/5JHZli923THjh1sLmdn57feeuvi
xYtZ+pui0nJp6dyYVBW12GoVg+0hmQIAAACIV1BQ4OnpyX4J0xOaVLsiUIGm
kikXS9MziiNnUlpxDj1+O2fxqfx39xZ0/qawxeYietATmlx0Kp9eog7UjTqn
Z0gOp/7+/lwYdHJyCgkJERkwrdttGh0dXalSJW6u1157LT8/n3uVls6/4SnV
Zrv1DLaGZAoAAAAg3pUrV/gHENKk2hWBCrSTTLlYmqbPpHHJWf+6nNv9u8Jm
G4rMPKgDdaPONAvbeSoynCYlJfGvxztx4kSRsZSxYrfpm2++yc1Srly5e/fu
GXSgGrgOVBtVaKNVDbaGZAoAAAAg3qpVq/jJlCbVrghUoJFkyuLkf/W7ShPT
ssKe5Ly1q+CFDUUiH9SZZknU7zylQcSE04CAAO7LX7FixcTEREnJVOpuU+44
Xmb9+vXCPlQDVcL1oQptsapBAUimAAAAAOL16dOH/1OZJtWuCFSghWTK7S1l
sfT3WzntthU2XV8k6UGzHLv1v3AqZs9po0aNuC+/n5+fpFjKiN9tav44Xj6q
hOtGFcq+qkEZSKYAAAAAIuXk5JQvX56fTGmSGtWuC5SmkWTKDuKlXHnoRm7z
jUVN1lvzoBkP3shN5B3Wa0pQUBD3zXd3d09ISLAimYrfbWrxOF4OVcK/rQzV
KfvaBgUgmQIAAACIdP78eZ0ANapdFyhN9WTKXfIoKS0rJCqnxeaixuusf7TY
VESD0FDcBZGMmjBhAve1HzJkiBWxlOHvNnVxcdm0adO1a9cosfL7iDmOl4/q
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
mkkTExNpNINBaInYW1rKIJkCAAAAiIRkCgySqYFbt24ZXBCJVKxY0c/P7+DB
gwb5VHwmTUhIoBGee+45g5FpWTi3tPRBMgUAAAAQCckUGCRToZSUFINbyTDu
7u5Dhgzx9/fv0qWLyGRKowUGBtJcNK9wQFoKrsRbKiGZAgAAAIiEZAoMkqkp
x44da9q0qfDPhEXUNm3a1K9ff9++fVevXo2JiUlLS8vLy6P/0nNqofbFixf3
6NHDaCAlNDKNr/ZbBFtBMgUAAAAQCckUGCRTM1JTU/39/atXr240XVqHRqMx
aWS13xzYEJIpAAAAgEhIpsAgmVqUlJQUEBDQqFGjEmZSGoHGodHUfkNgc0im
AAAAACIhmQKDZCpeUFDQhAkT6tWrJymQUn+ai+ZVu3xQDpIpAAAAgEhIpsAg
mVrh9u3b27dv9/X1ffPNN5s1a+bl5VWhQgVnZ2f6Lz2nFmqnV6kP9VS7WFAB
kikAAACASEimwCCZAsgOyRQAAABAJCRTYJBMAWSHZAoAAAAgEpIpMEimALJD
Mv3www9rWPLOO++oXWaJFBYWdu/e3dnZ+ddffxU/V15e3rp167p161azZk0P
D4/27dtPnTo1Pj6e3+fkyZNDLBk7dix/loKCgp07d7722mvVq1evXLlyv379
li9fnpaWZqqGtWvXDho0qE6dOlRD27ZtZ86cmZSUZL7y06dPu7i4tGrVSvyb
BQAAEAPJFBgkUwDZIZmKuVDY5MmT1S6zRBYtWsTeyP79+0XOkpiYSMlOuCoo
S545c4brtmXLFotrj2bh+lPS7N+/v7BPu3btnj17ZlBDbGwsBVhh52rVqt25
c8dU5VFRURRjqduLL74oZSUBAABYhmQKDJIpgOwcPJnGxcWxbUqTJk0WmRYS
EqJ2pVaiJDh//nxu0yk+mQ4aNIjN0r59e5rr2LFj48ePd3JyohYvLy8uRR44
cKCFCc7OzmyEjh07csPOnDmTNbZu3fq7777bt2/fgAEDWEvbtm0LCwu5nvTc
29ubvdS9e/evv/76t99+e/PNN1kLjZ+bmyss+6+//mrcuDHrg2QKAACyQzIF
BskUQHYOnkyPHDnCtikzZsxQuxb5hYWFtWnThr/pFJlMY2NjWX8fHx9+AFy8
eDFr37Bhg/kRoqKiqlSpQj2rVq0aGRnJGuPi4sqWLUuNLVu2TE1NZY2UQCnz
smFPnjzJjUA5lDX26dOHn1j79u3L2s+ePctfYk5OzpIlS1xdXbk3i2QKAACy
QzIFBskUQHYOnky5w1x//PFHtWuRmb+/f5kyZdi7c3Nzk5RMAwMDWf/Nmzfz
2xMTE1n76NGjzcxOYbZDhw7UzcnJ6dSpU1x7QEAAm/2rr77i96fE6uLiQu1v
v/0219ipUye2f9bgzNbTp0+zQb744guuMSIiokWLFqyd3jXbt4tkCgAAskMy
BQbJFEB2Dp5MuR1wDx48ULsWmXFniU6fPv348eOSkunFixdZ/02bNvHbk5KS
WPuECRPMzL5mzRrWbfz48fz2wYMHs5gsvIRR7969WajMycmhyevXr7MR1q5d
Kxw/Ojqavrr8Fm4Ha4MGDYKDg7t3745kCgAAtoBkCgySqdXod+Dly5d37dq1
cuXKBQsWTNejJzRJjfQSdVC7RlCHgyfTqlWr0galSpUqahciv9atWw8cODA0
NJSenzt3TlIyzc/PZ2umWbNmGRkZXDt3yurhw4dNzRsTE/Pcc89Rn+rVqycm
JvJfql+/PrV7e3sL56J/jtjIlEmLeEdZX7t2rUi/E/bSpUs//fTTrVu3CgoK
hLNTMvXy8qIYy6pFMgUAABtBMgUGyVQS+oX2xx9/zJwxw6dlcycnJ9cyzi/W
Kt/vxbLvtXIb2Uo3zseJnvRtXpYa6SXqQN2oM81CM6pdOyjHkZNpREQE26D0
6dNH7Vrkx0+FUpMpWb16NbuEEYXTLVu27NmzZ/jw4dx+SX5cNTBu3DjW7Ztv
vjF4qUKFCtTetWtX4VwUKtlc9E8QTX711VdsMjU1dfz48eXLl+e2/s8///yJ
EycMZmf/anGTSKYAAGAjSKbAIJmKdOfOndmzZtauWbVSedehLV2/fkt3Z6ou
f7GuaOn/Hg8//b/n9KCXqAN1G9LSlWahGWl2GkTt9wFKcORk+tNPP7ENiqur
ayPTrL4wb1hYWCURdu3aJe/7ErIimZKjR48KN769e/dOTk42NUtKSkq5cuXY
buisfx5wm5eXx0YwenPYHTt2sFfZHVcXLlzIJvv16yeswcnJSRh7+ZBMAQDA
RpBMgUEytejGjRsfjBxRxsX5jWbu+4foshf+I4Fyj3vTjLfTg2ahGWl2GoSG
ogHVfk9gW46cTLk7mJgXGxtr3fgUacWMbz5kycKKZPrDDz+wi+uyJMhd89bZ
2Xny5MlGD6klW7duZd1mzZpl8BL9g8wuTPTBBx8IZzx48CCbcffu3TT54Ycf
cuunXr16R44codmjo6MXLFjA9uQ+99xzNGmqeCRTAACwESRTYJBMzUhKSpo1
4zM3V5fBLVyvTTIZPNnj1hQLHehBg9BQNCANi7NQSzFHTqZdunRhG5SpU6d+
ZgJFIavHp0i7TAR2KqVNSU2mJ06cYCnS09Pz+++/p39L8/Ly6HvStm1bNs60
adOMzshuUkPhMSIiwuCl/Px8Firff/994Yx79+5lI//yyy80SX3YJCXQJ0+e
8Ht+/vnn7KWZM2eaqh/JFAAAbATJFBgkU1NOnz5dv3bNls+7XxpnOXLS48Zk
Ud3oQQPSsDQ4LULtdwk24bDJlIISO+2xTp06atdic1KT6SuvvML60x8+vz09
Pb1hw4Y6/UV0Hz16ZDBXaGgom6t///5Gh61Vqxa92rdvX+FLmzdvZvOyW5rO
nj2bTfr5+Rn0pC8t++DMnB2MZAoAADaCZAoMkqlRK1ascHN1+byHLm+RqLBJ
3W6L2GfK70+D0yJoQWq/V5CfwybTv/76i21N3n33XbVrsTlJybSgoIDd//S1
114TvvrNN9+woYR3gP3444/ZS8eOHTM6crt27ejVjh07Cl9atmwZm/fy5cs0
uXHjRja5c+dOYefWrVvr9Ef5mnoLSKYAAGAjSKbAIJkaSE9PH/HekJqV3ILG
SEiaWQt0902fZ2rqQYugBdHiaKFqv2+Qk8Mm0++++45tTVauXGmjRdAfy3ER
nj59aqMCOJKSKf3jyToPHTrUzFBr1qzht+fl5bGbxTRq1KiwsNDoyAMGDKAO
NWrUEJ6mOmbMGJ3+MOC0tDSa/OWXX9hS1q9fLxynZcuW9FKHDh1MvQUkUwAA
sBEkU2CQTPmSkpL69enVuLrbI19pGfO/83VREmdhj6hPdbQ4WmhycrLa7x5k
47DJdNKkSWxrcubMGYudp0+f3rFjR3agKaH09MYbb1ALu8WJKfZ7BSR27aPm
zZsLX9q5cycbip0Qyrl69SprnzBhgqlhuZuWnj17lt+enZ3t6elJ7S1atGAt
t2/fNpWOMzIy2OV/fX19TS0IyRQAAGwEyRQYJFMOvbU333i9dW33/+9jXdws
aQEzdZ7u8WeSY2nhEt2D6cWHAdNCadGleN06GodNpj4+Pjr9VWdTU1MtdmZX
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
V/wSqTwq0kZrG2wKyRQAAABAJCRTYLSTTElKSsq1a9cSEhK4cMoO6zWaT1k7
deBiKc1Is9MgYpbl7+/fo2lZ8Tnx9pTiO8uYeTVvkYUR/jOn+DY04pdI5VGR
tlvbYDtIpgAAAAAiIZkCo6lkSli6ZOE0NzfXIJ/ycZmUunGxlP4rckFhYWEu
zk6m7gJj8EjzK97jaabD3anmcit75C8WtWuVPagwKo+KtOnaBhtBMgUAAAAQ
CckUGK0l06y/w2lMTAw9z8nJ4fKpAZZJqQN1o86SYinTyrvp5n6icuIjXwv3
fLk/TZdtKZkW6e87kyTu3jFUWOuXXrDJ+gXbc/BkevPmzRoiXLp0Se1KAQAA
QH1IpsBoMJlm6Q/rvXXrVkRERFJSEk1mZ2eziMqhSWqkl6gDdaPOIg/i5Vu1
alXbupYP6M1aoLsz1cLFiyKm6zJN3FCG/8jUDyUmmVJhVJ78axYU4eDJ9Pvv
vxduX4QSEhLUrhQAAADUh2QKjDaTKRMbG3vjxo07d+5ER0cnJiamp6dn6tET
mqRGeok6WLwSr5nxPcq7n/zA8o7OxDkW+jz8VOw9aKJ8Le82pZKoMKvfF6jO
wZPppEmT2DZl3Lhxi0xYuXKl2mUq6vTp0y4uLq1atbLYs7CwsHv37s7Ozr/+
+qv48fPy8tatW9etW7eaNWt6eHi0b99+6tSp8fHxRjvfvHlzxIgRL730Utmy
ZevXr9+3b99ffvlF/LIAAADkhWQKjJaTKUMhNCoq6tatW+Hh4df06AlNUiO9
VMLBZ3zm272Ju5mQSHnzrqUdpixvpvuJSqaZC4ovl2T+bNNujd2pMFnWHqjC
wZNpu3btaIPi5OSUkpKidi2aQP9Y1alTh9bJiy++aLEzxXa2Rd6/f7/I8elf
Qsq8wm165cqVz5w5Y9B569atrq6uws7vvvtuQUGB5PcGAABQYkimwGg/mdoU
/WL0KO8eOMJkSLw/TZc6z3LefPKZqG7sET2j+B40pl6lYqgkKkztdQPWc+Rk
Sm+fBZ9mzZqpXYsm/PXXX40bN2YbWfPJNC8vb/78+dwWWXwyHTRoEJulffv2
NNexY8fGjx/v5ORELV5eXs+ePeN6hoaGsk/H3d19wYIFJ0+e/Pbbb+vXr89m
X758eYneKgAAgFWQTIFx8GRKVq5c2bCae5axs0T/M6d4Z6iYsBkzQ+yljYr0
F+m9M9X4FZOoDCqGSlJ7rUCJOHIyDQkJYRuUUaNGqV2LynJycpYsWcLfQWkm
mYaFhbVp04a/RRaZTGNjY1l/Hx+f3Nxcrn3x4sWsfcOGDVwjd6A1/1Dh+Pj4
6tWrs32sVr1RAACAEkEyBQbJNC0t7cWmDWe84iwMiWLuUsoesTN1z8TdgIY9
Uubp7k0zcpAwlfFi00bp6elqrxUoEUdOpps3b2YblI0bN6pdi5oiIiJatGjB
VkWZMmXYHkxTydTf35/6sM5ubm6SkmlgYCDrT2ue356YmMjaR48ezTVSeqWW
qlWrGgwybdo01vnhw4cS3ygAAEBJIZkCg2RKLl++XNatzLGR/5cQKTNSckwR
fYBuwmxd3CwJyZQdAPz0n8f0UgFUBhWj9vqAknLkZPrBBx+wDYqD3xTmt99+
Y+uhQYMGwcHB3bt3N5NMubNEp0+ffvz4cUnJ9OLFi6z/pk2b+O1JSUmsfcKE
CVzj66+/bjSZ0nJZ5+joaIlvFAAAoKSQTIFBMmXWr19f1cPt/rT/i40xMyTE
zMQ50vrTo2DxP8IvLZoKoDLUXhMgA0dOps2bN2cblOeff76RCSNGjLB6/Pfe
e6+SJd7e3jK+I+tQMvXy8lq7dm1GRgZNmk+mrVu3HjhwYGhoKD0/d+6cpGSa
n59PSVOnP7GXLYvhTlk9fPgw17hhwwbW+N1333GNT58+ZSO0bdvWujcLAABQ
EkimwCCZcj4a80Gj6u7xs4qPy30w3fL1eA2OzqUwKymZ0iN7YfEBw5kLdLRQ
WjQVoPY6AHk4bDJNSUlhh62aN3HiRKsX0bdvX4vj16pVS8Y3ZR0KifRN4CbN
J9PExETuudRkSlavXu3s7MzC6ZYtW/bs2TN8+HA2SIMGDfhxNSYmhvpQO/Wf
NGnSvn37AgICaHWxztu2bbPqvQIAAJQIkikwSKYcemtvvvF669ruNyZbuKuL
8JHuJ/ZaScJwSoujhdKiS/G6dTQOm0zPnDnDtibt27f/zLQLFy5YvYiffvpp
mSUaPMXVfDLlsyKZkv+fvfMAj6Ja//+GKl0EAcULiKIIIoIFEFAB5aLyvyKI
vV1F1KsoXhtXVBARGyooIM2AijRBem8GfACTHzU9Ib0npi4JyWaT+b+7Z5nd
zLaZ3Zk9s8n387yPz+6ZM2feOXM2zMeZObNjxw7nf9Pvvffe4uJiSU0S1UGD
BjlX3rZtm7JdAgAAAFQCZgoYMFNHioqK7hs9qlen5mkKNfPCdEPS676YKW2I
NkcbpRNI3nsPVKPBmunnn3/O/jVZvnw571z0haZmunLlyssuu4ytFRISIs4G
3KhRo//85z+Obymlv+GjR48W/9EXZ1tiV1fDw8N93D0AAADAD2CmgAEzlWA0
Gh9/5OHO7ZodelaBYJo+NMS/plhLaRO0IdocJuOtZzRYMx0/fjz71+Ts2bO8
c9EX2pnpnj172B3Ul156aWhoKP2Jrq6upuE3YMAA1s6UKVPEykOHDmWFDzzw
QFxcXG1tbUFBwcyZM5nMtm3bFnPzAgAACDx6NNPjx4WSEp4JNEhgps5UVFTM
mTOnWdPGs0bIfWtM7QzLTbnynZSapcZpE7Qh3rsL1KfBmin9I0L/lLRq1cps
Nmu0iVOnTu32hj93C2uEdmZ6xx13sPr79+93LDcajVdffbXB+s6atLQ0Ktm7
dy+redddd5GTOlZeuHAhWzR58mQluwUAAACogB7N9KmnhOhongk0SGCm7qDT
vO5dO/e7svnRF2TJZrRsM6UGqdkeV3WhTfDeS6AJDdNMc3Jy2D8lw4cP91p5
586dt99++6+//upYOG3aNCokgfKwYrDMgCRBIzOtqalhd+QOGzbMeemSJUtY
U2vWrKGvn3zyiUuHJUhUu3btarDOoSRvhwAAAADV0J2Z5uUJzZoJHk9IgBbA
TD1QWFj49n/fbNa08YQbm55+2YtvyrmblxqhpqhBaraoqIj3/gGtaJhmunXr
VvZPyX//+1+vlQ8dOkQ1X331VbHkzJkzjRo16t27d3V1tYcVYaaO0N9kVnni
xIkemvrqq6/o62uvvca+xsbGusuwVatWMvYGAAAAUBPdmeknnwgGgxAayi2B
hgrM1CtRUVFPP/l4k8aN/nl983UPW2bTdWmdHmZAolVoRVqdGqGmqEHe+wS0
pWGa6Ycffsj+KVm7dq3Xyvn5+Qbr5LFiCZuZx+sMsdnZ2XHe0OHDktrdzcvm
PiKjd170008/saY2bNhAX+fPn+/hALFbf2+88UY5GwUAAABURF9mWl0tXHWV
xUzJT0FggZnKhE53337rv107d2jXsunEfk2XjDXEvWYwO7xcRjKdLy2iClTt
4X5NaRVakVanRnjvBwgEDdNMxauZSUlJcup37Nixe/fu7PPu3btpxVGjRmmY
H1e0M1PqNFZ/8+bNjuVVVVX9+vVjizIyMqjkyJEj7OvQoUMdX3JKrFmzhi16
4YUXlOwWAAAAoAL6MtPffrNoKYUfr18HvgEzVQSdzu3ateut//53YL/elrcz
NGl0wxUt7rvhkkduavbCwBAK+kBfqZAWUQWqRpVpFVqRd+4gcDRMM73yyivp
35EOHTrIrH/XXXfRb4S6y2w2k0M1atTozJkzmmbIEbXMdOzYsV2s5ObmspLD
hw9T1xmsr4BZunRpXl4eFUZHR48YMYK18+yzz7KatbW14itjyGfDw8Op5ysq
KhYsWNC6dWsqbNGiRUxMjGr7DAAAAMhDX2Z65502Mx07lk8CDRiYqc8UFRX9
9ddfP//882effTZ9+vTXrdAH+kqFtAhPkjZYGqaZKuWVV16hf3fIoZYtW0Yf
Jk2axDsjDVHLTG+77Ta2ND09XSz8+OOPHf8pb9WqlfiZlL+srEysmZmZyeZP
ZpCKMqslGjdujLfQAgAA4IKOzPTsWZuWUgwYwCGBhg3MFADVgZnKYcGCBQbr
M49XXHFF69atc3JyeGekISNHjjTIe4rz8OHD7F9k9nCohMGDB7OlWVlZjuUH
Dhzo06eP4z/o1KWzZs2qqqqStECi+vrrrzdv3tyxMjV78uRJf3YQAAAA8Bkd
menkyXYzvfxyDgk0bGCmAKgOzFQOBw8epH93OnfuTP+dPXs273TqA0VFRTTw
yFJTUlIkbyyVYDabExIS9u3bFx4ebjQaA5YhAAAA4IxezLS4WGjZ0m6mISGC
0//gBZoCMwVAdWCmcsjLyxP/6amoqOCdDgAAAAD4oBcz/fpru5aySEkJdA4N
G5gpAKoDM5VJ+/bt6Z+eVatW8U4EAAAAANzQhZnW1grXXCM10yNHAppDgwdm
CoDqwEzlQF1E/+7cdtttnu87BQAAAED9RhdmumOHVEspZLyiHagIzBQA1YGZ
esZkMuXm5l599dUhISHHjh3jnQ4AAAAAeKILM73vPhdmOnduQHNo8MBMAVAd
mKkH6G9I48aN2ctK3nzzTd7pAAAAAIAz/M00MdEy35GzmeJEJbDATAFQHZip
B0pLS2+55ZZBgwbNnTu3pqaGdzoAAAAA4Ax/M5061YWWUjzySOByADBT/ygs
LDx37lxkZOSJEyeOWaEP9JUKaRHv7AA3YKYAAAAAADLhbKbnzwvt2rk20zvu
CFAOwArMVClZWVnh4eFbtmxZunRpaGjo5s2bDxw4cPjw4T///JN9oP9SIS2i
ClSNKtMqvLMGAQVmCgAAAAAgE85munixay2l6N49QDkAKzBTmZSUlERERKxe
vXrVqlU7d+6MjIw0mUyOPVlbW5uYmJiUlCS+mZEqJCcnk6vSKrQirU6N8N4P
EAhgpgAAAAAAMuFspjfe6NZMmzYV8AaBAAIz9UpxcXFYWNiyZcsOHjyYnZ1N
nVZVVUUSeu7cudLSUkl/UuW4uLiMjAyz2exYTivS6kuXLqWmqA7vfQLaAjMF
AAAAAJAJTzM9dMitlrLIzQ1EGsAKzNQDFRUVERERP/744+HDh2nHJV1XVlZ2
zop4kZRRW1ubn58fGxvr7K3UCDW1fPlyapbW4r1/QCtgpgAAAAAAMuFpphMm
eDHTEycCkQawAjN1R05Ozpo1azZv3mw0Gt31HlWLi4sjCc3MzJRcJCXxTEhI
SE9Pd559lBqkZqlx2gTvvQSaADMFAAAAAJAJNzPNyBAaN/Ziplu2aJ4GuAjM
1CWRkZHLly8ntfTQdcXFxTExMVSZ3JMckxRV4rC1tbVUTo1InkhlUDltgjbE
e1+B+sBMAQAAAABkws1M33/fi5ZSLFqkeRrgIjBTZ8LCwtasWVNUVOSh33Jz
cxMTE6uqqsSS8vJyktPCwkJJTeo06mSXckqboA3R5njvMVAZmCkAAAAAgEz4
mGllpXD55d7NdPp0bdMADsBMJRw6dOiXX36prq720GkZGRlJSUm1TlN1mc3m
1NTUtLQ0ySKj0RgVFeXyrmDa0IYNG/bu3ct7v4GawEwBAAAAAGTCx0x//tnm
njNmWL7+/rvw+efC5s3Cq6/WMdNnn9U2DeAAzNSRPXv2rFq1yrOW5uXlJSYm
OmupCMkpVZAUVlRUxMbGupPT1atX79+/n/feA9WAmQIAAAAAyISPme7cWedr
WJjl5t7x44U+fYRevSy6ysz0nnu0TQM4ADMVoX5Yv369Zy1NT0+PiYnx2qsk
pykpKZLCysrKuLg45zl+BeubTxctWiTnQICgAGYKAAAAACATzu8zdYZdgTp0
SLjrLuGGG7il0fCAmTKio6NXrVrl+NyoM1lZWXl5eV67NCIi4ujRoySn7OWn
jhiNRpJTl/JLm6YEKA3ePQFUAGYKAAAAACAT3ZmpI19/zTuDBgTMlCgoKFi+
fHl+fr6HjqJ9T0xMdH4FjIQTJ06EhYVRtdra2nPnzhUXF0sq0FZcPqPKFlEa
lAzv/gD+AjMFAAAAAJCJrs0UBBCYKUE/h6ioKA+9ZDQa4+PjPd/oS0RGRp46
dUr8yp4tdZbZ9PR0d9deKQ1Khnd/AH+BmQIAAAAAyARmChgwU5LB9evXe+gi
ElISTJfPhzqSnJy8e/duyf3A2VacG4yJiamsrHTZDiVDKfHuFeAXMFMAAAAA
AJnATAFD/2aak5MTHR197NixgwcP7rdCH+grFdIiPxs3Go0rVqwoKCjw0EWp
qameb/QVrBP2kpaWl5dLys1mM0ko/VdSXlhYSCbrsinqZEqJElOl9wAXYKYA
AAAAADKBmQKGbs20oqIiJSXliJVTp07FxcUlJSWlWqEP9JUK2VKqRpV920p4
ePjevXs99E9xcfG5c+c89yEJ6Y4dO9zpbUZGhstF1KzLl8gQlBIlpm5/gkAC
MwUAAAAAkAnMFDD0aabkg0ePHj1+/Hh8fHxmZmZ2dnZubm5+fn6BFfpAX6mQ
FlEFqkaVaRWlWyGjDA0NpZ1y1zlmszk2NpZqeujAmpqa/fv3e7BXWj0hIcG5
vLS0lBTb5SqUEiVG6anesSAwwEwBAAAAAGTC30wfe0x4910hNFQ4epTO0QO3
XVAXHZppTk7OoUOHTp8+zd7SUlhYSBJnNBrLHaCvVEiLqAJVo8q0Cumqog1F
RkbulLxjty7UMrXpuQNPWPFcJyYmxuXsSaTVzjcAMyixs2fPatTDQGtgpgAA
AAAAMuFspnl5gsFgj08/DdB2gRN6M9Ps7OyDBw/GxcWRchYXF7PNmUwms9lc
4wB9pUKWGFWjyrQKrUguKX9bmzZt8nCts6qqyuUjoo5kZGTs3r3b65y9aWlp
pa7+90tRURG14HKVpKQkSk+rXgYaAzMFAAAAAJAJZzMNC6tjpr//HqDtAid0
ZaaFhYWHDh2Kj4+nDRmNxsrKSpI+9m5Q58ypkBZRBapGlWkVWpFWp0bkbIus
cNmyZR7E093zoSKkrjt27HB+Y6kE2lB0dHRUVJTL+ZFokcu9o0WUHq2rXW8D
7YCZAgAAAADIhLOZLl5cx0xjYgK0XeCEfsy0oqLir7/+iomJIbWkzyaTyZ2T
OsL8lCrTKrQirU6NyJkQKTIy0sPcR9QgNeX8KlJHjh8/To14zo309ty5c+Sw
pKUkzunp6ZJZj1JSUiSXU6lySUkJ7cK+fftwQ2+QAjMFAAAAAJAJZzOdOtWu
pU2akAYEaLvACf2YaWpq6smTJ5mWVldX11qRswusJq3C5JQaoaa8bm737t0x
7v+XSI4VDxvNysoisfWgrpRScnIyqahjCaWXlJRE26X/Zmdn0yaYutLntLS0
xMREWsQEljKkz5SkRr0NNAVmCgAAAAAgE85mOmaM3Uyvuy5AGwWu0I+ZHjt2
LDMzs7y8XObVUkfEK6e0OjVCTXnd3MqVK929tIWIjY31cKMvbWvnzp0e7vWl
fMgr3b2xlFanPIuKitg8w/RfNssTZeWoumVlZZSkRr0NNAVmCgAAAAAgE85m
2qOH3UwffDBAGwWu0ImZ5uXlnTx5klysqqqKlFCRljJoFVqRVqdGqClq0MPm
yEmXLFnirimSxJSUFA/bioqKOn78uIdMIiMjXU55pBRKklLVosOBpsBMAQAA
AABkwtNMKyqEkBC7mb73XiA2CtygEzNNSEhITk5m9/EqvWDKECdEokaoKWrQ
w+YyMjLWrl3rrqm0tDQP8xrR6jt27Ljg/iWn6enpnqdOkg8lSalq0eFAU2Cm
AAAAAAAy4Wmm1dXCH39YJkGaOtVyW+/GjYHYKHCDTsz0zJkzeXl5lZWVvl0w
ZbDLptQINUUNethcVFSUu+mP2I24Hh4gPXXqFDXubil1UVJSks+7IIGSpFS1
6HCgKTBTAAAAAACZcL6bF+gGnZjpiRMnSktL2XtL/TRTaoSaogY9bI7s8o8/
/nDZiNFodPd8qGC9YLpt27aqqiqXS0mKyWpN6s3oRUlSqlp0ONAUmCkAAAAA
gExgpoChEzOlNNjcR6qYKTVFDXrYXHh4uDtxyM7Opt10t4kzZ854eFNMUlKS
19ebKoKSpFS16HCgKTBTAAAAAACZwEwBQydmevLkSfYOU1XMlJqiBj1s7ujR
o7TjLhs5d+4cre5yUXV19bZt20h7XS4lJ2Xz8Xp+C6oiKElKVYsOB5oCMwUA
AAAAkAnMFDB0YqZnzpwxGo1qmSk15fk5U3fXTKmF6OhodwmQtEZERLjbenx8
PCltbm4um3zJt12QgGumQQrMFAAAAABAJjBTwNCJmcbGxhYWFvr8yhiG+OIY
aooa9LA5d8+ZklomJSW5a3///v15eXkuFxUXF4tPp5aWlsbFxXm4JVg+eM40
SIGZAgAAAADIBGYKGDox05SUlMzMzMrKSv/fGkONUFOpqakeNudubt6ioiJa
12X75J67d+92t3XyWaPRKH41mUwkqrRT7uZKkgnm5g1SYKYAAAAAADKBmQKG
TsyUWo6Li6MPPt/QK97KS42wS5YeNufufaa5ubn5+fku2z9z5kxMTIzLReTC
8fHxzuXs0i216fNVYLzPNEiBmQIAAAAAyISbmS5YIPTvLzz2mDBzJp12C2az
5lsEHtGJmV6wXscsKiqqqqry4bKpeMGUVqdGvF5nNBqNS5YscW4nPT29rKzM
5SZ27txZWlrqclGuFZeLKKXs7Gzy07y8PB9mRqIkKVWNOhxoB8wUAAAAAEAm
3Mx00iTBYLBFq1aCr9eSgFrox0xzcnKSkpIuOFw2lSmnrKZ4wZQaoaa8bm7l
ypXOEkrrupx6t7i42OXdv4zExMQLHqc8osSysrJiYmIyMjLcma+kfmVlJdWk
JDXqbaApMFMAAAAAAJlwM9Nhw+xmOnCg5psD3tCPmVZUVERHR5PBsadNZcqp
qKXsCVMmgNSU183t3r3b+e7c+Ph4l0+GUs0zZ864TIC26+4uX+dUi4qKUlJS
qD79Nzs7m4SX9NNoNJIO04eCggLKnzw3NjaW+pmqUZIa9TbQFJgpAAAAAIBM
uJlpx452M33ySc03B7yhHzMlSkpKTp8+nZ+fL8opu63XpZ+ycqogaimtSKtT
I3K2FRkZ6XwZ1N0rY44cOULO6LIDS0tL09PTFfU5bYJUlHkorUuWmpqaSh9y
cnJIXWlHWLV9+/adPXtWu94G2gEzBQAAAACQCR8zLSiwaynFJ59ouzkgA12Z
KcHsksmpyWSS+KkjopOye1/FFWVuiBxw2bJl5rpPOpOuuuylLVu2uHtKNDs7
mxxT9eNCiVF6lKSmvQ00AmYKAAAAACATPmZ65EgdM/3tN203B2SgNzO9cFFO
s7Ky6HNVVZXopxKYk1IFqkaVFWkpY9OmTefOnXPsjaioKOcuKiws3L9/v7sO
TE5Opj5R/bgkJSVRepr0L9AemCkAAAAAgEz4mOmyZXXM1M31KRBIdGimF6y3
9cbExJCdsYuGlZWVTFFF6CsVXrBe+qRqVFnmTbyOREZG7ty507E3XD4xSvYa
ERHhrgNjrbicN8kfKDHcyhu8wEwBAAAAAGTCx0zfeceupY0bCxefpwMc0aeZ
MnJycqKiouLi4jIzMwsLC41GY4UV+kBfqZAWUQU5M/G6hHQyNDSUdkrsjejo
aOcuOnHiRHJysrsOpAQoJfYGVbUOCjVFiVF66vYnCBgwUwAAAAAAmfAx05oa
ISVF2LlT+OYb4f33td0WkIeezZRBEpqamspmxz1thT7QVyqkRX42Hh4e7jgP
ksu7ecPCwvLy8tx1YEJCgmCdoffcuXMZGRk+vLTUGUqJElOl9wAXYKYAAAAA
ADLhNjcv0Bn6N1NNMRqNK1asEKcwcjkD0s6dOz3crJuUlMQ+1NbWZmdnx8fH
V1RU+HNEqJMpJUqMd98A34GZAgAAAADIBGYKGA3cTImoqKj169ez3oiJiXF+
a8zmzZs9dGBqaqrj17Kysri4uJycHJ8vnlIylBLvXgF+ATMFAAAAAJAJzBQw
YKYE/RzYfbwklSaTSdJFklmSJKSlpUlKyEmzsrJiY2NLSkqUHg5Kg5Lh3R/A
X2CmAAAAAAAygZkCBsyUKCgoWL58eX5+fmJiIn2VdNGBAwc8dGBmZqbL8oqK
ipSUFGqwqKhI5rGgBCgNSoZ3fwB/gZkCAAAAAMgEZgoYMFNGdHT0qlWrcnNz
q6qqJF30559/eujA9PR0D0vLy8tTU1NjY2Ozs7PLysqcbxWuqakpLi5OSkqi
7VIClAbvngAqADMFAAAAAJAJzBQwYKYi1A/khs538x49etRDBzrfzetMdXU1
dV1ycnJMTExiYmJKSgrpKv03Pj6eSjIyMkpKStavXy/nQICgAGYKAAAAACAT
DmYq+55GEEhgpo7s27ePfhokko5dFB4e7q73KioqTpw44echoM398ssve/fu
5b33QDVgpgAAAAAAMgm0mdbWCi1aCO3bC0OGCM8/Lzi8QRLwBWYqYc+ePRs2
bHCUUw/umZCQ8Ndff/nzmhiTyURaiqul9QyYKQAAAACATAJtpikpgsFgj2+/
1WpDQCEwU2fCwsJWr15dWFjIusjdNVPqDVpUWloaHx/vW+fTJtasWUOb473H
QGVgpgAAAAAAMgm0me7aVcdM6SvQBzBTl0RGRi5fvjwhIYG6aN++fUaj0WQy
mc3m2tra6upqstGMjAwSUnZpNTMz89y5c0p7nhqnTdCGeO8rUB+YKQAAAACA
TAJtpt9+W8dMU1O12hBQCMzUHTk5OWvWrNm8eXNycrI4W1F0dDR9SE1NLSws
rKmpEbsxKyuL5PSC0xtnXEKeS81S47QJ3nsJNAFmCgAAAAAgk0Cb6eTJdi1t
2VJwencG4AXM1AMVFRURERE//vjj4cOHacc992RJSQlJK2lscXGx2Wx2WYca
oaaoQWqWGue9f0ArYKYAAAAAADIJtJneeafdTG++WautAOXATL1CphkWFrZs
2bKDBw9mZ2d76Mza2lp2o29MTExsbGx5ebm4iFak1akRaooa5L1PQFtgpgAA
AAAAMgm0mXbqZDfTxx7TaitAOTBTmZSUlERERKxevfrXX389fPhwcnJyVVWV
576lCikpKVSZVqEVaXVqhPd+gEAAMwUAAAAAkElAzbS8XOjVS2jc2GamH3+s
yVaAT8BMlZKVlfXXX39t2bJl2bJloaGhmzZtOnDgAOnncSv0gb5SIS2iCps3
b6bKtArvrEFAgZkCAAAAAMgk0NdMBcsFJCE6WtiwwfJfoBtgpv5QWFiYlJQU
GRl54sSJY1boA32lQlrEOzvADZgpAAAAAIBMOJgp0CUwUwBUB2YKAAAAACAT
mClgwEwBUJ16aaaGmQYEAoHwHLz/UAEAghKYKWDATAFQHZgpAoFomMH7DxUA
ICiBmQIGzBQA1YGZIhCIhhm8/1ABAIISmClgwEwBUB2YKQKBaJjB+w8VACAo
gZkCBswUANWBmSIQiIYZvP9QAQCCksCZaVqaEBEhlJWp3zJQA5gpAKoDM0Ug
EA0zeP+hAgAEJYEz01mzBIPBEl27CvfcI1y4oP4mgB/ATAFQHZgpAoFomMH7
DxUAICgJnJk+8YTNTCk6dlS/feAfMFMAVAdmikAgGmbw/kMFAAhKAmemAwfa
zXTYMPXbB/4BMwVAdWCmCASiYQbvP1QAgKAkQGZaWyu0amU30xdfVLl94Dcw
UwBUB2aKQCAaZvD+QwUACEoCZKZpaXYtpfj6a5XbB34DMwVAdWCmCASiYQbv
P1QAgKAkQGa6Z08dM92xQ+X2gd/ATAFQHZgpAoFomMH7DxUAICgJkJnOn1/H
TJOSVG4f+A3MFADVgZkiEIiGGbz/UAEAgpIAmenatcKoUZb3xZCWXnKJUFOj
cvvAb2CmAKgOzBSBQDTM4P2HCgAQlARubl5GWZkQGalV48APYKYAqA7MFIFA
NMzg/YcKABCUBNpMgV6BmQKgOjBTBALRMIP3HyoAQFACMwUMmCkAqgMzRSAQ
DTN4/6ECAAQlMFPAgJkCoDowUwQC0TCD9x8qAEBQAjMFDJgpAKoDM0UgEA0z
eP+hAgAEJTBTwICZAqA6MFMEAtEwg/cfKgBAUAIzBQyYKQCqAzNFIBANM3j/
oQIABCWBMNMFC4SNG4XoaKGqSs1mgarATAFQHZgpAoFomMH7DxUAICjR3ExN
JqFJE8FgsETjxsLs2aq1DFQFZgqA6sBMEQhEwwzef6gAAEGJ5mYaHW3TUhZL
lqjWMlAVmCkAqgMzRSAQDTN4/6ECAAQlmpvpxo11zDQsTLWWgarATAFQHZgp
AoFomMH7DxUAICj58ssvDU60bdtWtQ18+mkdM83LU61loCowUwBUB2aKQCAa
ZvD+QwUACEr++9//Gpxo3Lixaht46im7ll52mWrNArWBmQKgOjBTr9FqdqsO
n3dg0frT1i1nt0QEXVz2+WXiQeSeDMK3EI9guzntYKYAAF5obqa33mo30zvu
UK1ZoDYwUwBUB2bqNbLKsnjvEADATmV1JcwUAMALzc20TRu7mT7/vGrNArWB
mQKgOjBTmCkAwQXMFADAEW3N1GQSvvzSIqRDhgjt2wtffaVOs0ADYKYAqA7M
FGYKQHABMwUAcETza6aOmM2aNAvUAGYKgOrATL1GRmmG2DKdEpebyhFBF7W1
teJB5J4MwoeoMFWIR5A+w0wBALwIqJkCHQMzBUB1YKZeY1PsJrHlcWvGqds4
IjDxd/nf4kHs8EUH7vkglMYNC24Qj2BMfowqbQb0rxIAoL4AMwUMmCkAqgMz
9Row03oQMNNgD5gpAEAnwEwBA2YKgOrATL0GzLQeBMw02ANmCgDQCTBTwICZ
AqA6MFOvATOtBwEzDfaAmQIAdALMFDBgpgCoDszUa8BM60HATIM9YKYAAJ0A
MwUMmCkAqgMz9Row03oQMNNgD5gpAEAnaGime/YIkycL33wj7NolpKQIDrPK
Ax0CMwVAdWCmXgNmWg8CZhrsATMFAOgEDc102jTBYLBFSIhw/rwKbQLNgJkC
oDowU68BM60HATMN9oCZAgB0goZmOm6c3Uy7dVOhQaAlMFMAVAdm6jVgpvUg
YKbBHjBTAIBO0NBMe/e2m+no0So0CLQEZgqA6sBMvQbMtB4EzDTYA2YKANAJ
WplpdbXQtKndTF9/XY1kgYbATAFQHZip14CZ1oOAmQZ7wEwBADpBKzONjbVr
KcUPP6iRLNAQmCkAqgMz9Row03oQMNNgD5gpAEAnaGWmmzbVMdNDh1TIFWgJ
zBQA1YGZeg2YaT0ImGmwB8wUAKATtDLTzz6rY6Y5OWokCzQEZgqA6sBMvQbM
tB4EzDTYA2YKANAJWplpaqqwdq0wc6bw6KPC0KFqZAq0BWYKgOrATL0GzLQe
BMw02ANmCgDQCRrOzQuCCpgpAKoDM/UaMNN6EDDTYA+YKQBAJ8BMAQNmCoDq
wEy9Bsy0HgTMNNgDZgoA0AkwU8CAmQKgOjBTrwEzrQcBMw32gJkCAHQCzBQw
YKYAqA7M1GvATOtBwEyDPWCmAACdADMFDJgpAKoDM/UaMNN6EDDTYA+YKQBA
J8BMAQNmCoDqwEy9Bsy0HgTMNNgDZgoA0AkwU8CAmQKgOjBTrwEzrQcBMw32
gJkCAHSCJmY6ZIgwZowwdaqwZIkQFaVSpkBbYKYAqA7M1GvATOtBwEyDPWCm
AACdoL6ZGo2CwWCP6dPVSxZoCMwUANWBmXoNmGk9CJhpsAfMFACgE9Q304iI
Omb6yy/qJQs0BGYKgOrATL0GzLQeBMw02ANmCgDQCeqbKamoo5mSqIJggIuZ
VgAQJPg2wmGmXgNmWg8CZhrsATMFAOgE9c10+vQ6ZlpWpl6yQEMCbKbiCX/5
Rc4DoDPEwemzn8JMvQbMtB4EzDTYA2YKANAJ6pvphAl2Lb3qKvUyBdoSMDN1
FFJqpKysrNRKyUWKAeCKOBTZyKQhKlqqUj+FmXoNmGk9CJhpsAfMFACgE9Q3
0z597GZ6zz3qZQq0JTBmKmqp0WikM//CwsLc3NysrKyMjIy0i6SmpqZYSQYg
gLBRl+YADcvs7GwaojRQabjSoFUqpzBTrwEzrQcBMw32gJkCAHSCymZqNgvN
mtnN9LXXVE0WaEgAzJSd0tOKpaWlBQUFdM6fk5NDJ/yVlZW1tbW8OwAAKWaz
mcYtDVEaqDRcadDS0KUBLF9OYaYN4dyVu1ZwD5ipob4MZgFmCgDgivrXTIuK
hKNHhdBQ4d13hR071MsUaIvWZsouldJadJ6fm5tL5/kkpLx3GgC50HBl109p
ALObe+XIKcy0IZy7cnci7gEzNdSXwSzATAEAXFHfTEFwoqmZildL6ayeXXvi
vbsA+AK71s/kVM6VU5hpQzh35e5E3ANmaqgvg1mAmQIAuAIzBQytzbS8vLy0
tDQ3NxdaCoIaGsA0jGkwy7lsCjNtCOeu3J2Ie8BMDfVlMAswUwAAV2CmgKGd
mYpTHtEpfVZWFu8dBcBfaBjTYBYnRIKZqnXuGkQzIGnUIUEaMFNDMA8Jyc8Q
ZgoA4AjMFDA0NVOqXFxcnJGRUVVVxXtHAfAXGsbp6ek0pNk9vTBTtc5dYaZB
GjBTQzAPCcnPEGYKAOAIzBQwNDJT9iye0WjMz8/Pzs7mvZcAqAMNZhrSNLA9
P20KM1V07gozDdKAmRqCeUhIfoYwUwAAR2CmgKGdmZaXl5eVldGZfHFxMe+9
BEAdaDDTkKaB7fmGXpiponNXmGmQBszUEMxDQvIzhJkCADiipplWVgrV1Won
CAKEdmbKbuVNTU2lr7z3EgB1oMFMQ9rrDb0wU0XnrjDTIA2YqSGYh4TkZwgz
BQBwRE0z/eEHoVkzoU8fYfx44f33BaNR7WSBhmhtpsnJyTU1Nbz3EgB1oMFM
Qxpmqu65K8w0SANmagjmISH5GcJMAQAcUdNM33hDMBhs0aSJYDKpnSzQEO3M
1Gg0FhYWJiYm8t5FANSEhjQNbPaoKcxUlXNXmGmQBszUEMxDQvIzhJkCADii
ppmOHm0309691c4UaIvWZhofH897F0FwcPr06QULFixcuNBsNvPOxRM0pGGm
6p67wkyDNGCmhmAeEpKfIcwUAMARNc20Wze7mY4bp3amQFu0NtO4uDjeuwiC
g88//5z9IaIxxjsXT9CQhpmqe+4KMw3SgJkagnlISH6GMFMAAEdUM9PyciEk
xG6m06ZpkCzQEE3NlOrDTCWsWLFi2rRp33zzDe9ElBGAtIPITGlgw0xVPHeF
mQZpwEwNwTwkJD9DmCkAgCOqmenJk3YtpfjpJw2SBRqiqZkWFBTExMTw3kV9
cc8999Bv7dprr+WdiDICkHawmCkNaRrYMFMVz11hpkEaMFNDMA8Jyc8QZgoA
4IhqZvrrr3XM9K+/NEgWaAjMNMDATN0BM9U52p0Sw0yDNGCmhmAeEpKfIcwU
AMAR1cz0hx+ENm3sZlpaqkGyQEPqvZlmZmYeP368pKREUl5WVnbmzJnTp087
L5JgMpmo5rlz52praz3XlNOmz4pXU1ND+xIeHp6fny+zZnx8PB0Ime1T5ejo
aJObubVlpk2rnzhxgtpxXkTjgcppvOXm5rrsSc9mKv8oaA3MVPVzV5hpkAbM
1BDMQ0LyM4SZAgA4ouYMSILl7F/Yv19YtkzVHEEgqGdmStbW2MqSJUuWLl16
3XXXsbEdGhoq1omIiBg9erTjyB8xYgTZq3NrBw4cuP3225s3b86qtWrV6t57
73X5Hhw5bfbs2ZMSc/y5EX379vW6U2azedasWV26dBHX7dat25NPPumsqNXV
1TNmzHCs2bRp04kTJyYkJEhqvvbaa7T1rl270sF69tlnO3fuzOo3adKE6ufl
5clMW2yHxsb9999PXcTSc9wWOfI///nPkJAQsRFq87vvvpOk5M5M5R+FwAAz
Vf3cFWYapAEzNQTzkJD8DGGmAACOqGymIGipZ2aak5PDBvNDDz3k6FOimcbG
xl566aXOg58KJanOnz9fbKFRo0ZizdatW5MrOdaU2eZVV13lXKdXr15ed2ry
5MnOKxqsAnjq1CnHmi+88ILLmt27d8/KynKs+dJLL1F5hw4dHn74Yef611xz
TWVlpZy0WTvt27cfNWqUY2Lihs6ePduuXTuXWX366aeOKbk0U/lHIWDATFU/
d4WZBmnATA3BPCQkP0OYKQCAIzBTwKivZkq0aNFi2rRp27Zt+/PPP6lcsF5R
7dmzp8F6JXHGjBnHjh07fvz4zJkzmzRpQoVXX321eBWS8meX/6jw4MGDJpMp
LS1twYIFTI6GDx8ublF+m+np6YmJiYMHD6Zy0r1EKxkZGZ73aNasWWx3brrp
psWLF5MF//bbb0899RQr7NOnj1jzww8/ZIW33nrrsmXL4uLitm/fPmnSJFbY
v3//Uoeb7ZlRMh599NG9e/dSJnv27Onbty8r/Oqrr+Sk7dgOdcuiRYuOWmFL
qdO6du3K/ra888471JORkZEkm9deey1bZcWKFWJKzmYq/ygEEpip6ueuMNMg
DZipIZiHhORnCDMFAHAEZgoY9dVMW7ZseeTIEcnSV199lS1duXKlY/nSpUtZ
+UcffcRKtmzZwkrWrVvnWPO7774bMWLEyJEjRXuS3yZD0XOm2dnZrJErr7wy
NzfXcdGzzz7LFpGyOdbs0aMHHSbHmq+88gpb9MUXX4iFolE+8sgjNTU1YnlK
SkqzZs2ofOzYsXLSFtuZMGGC8zOq4tXeuXPnOpYnJCSwC6mtW7cWt+5spvKP
QiCBmap+7gozDdKAmRqCeUhIfoYwUwAAR2CmgFFfzXTcuHHOS2+99VZaNGrU
KOdFAwYMoEX3338/+7pt2zbWzvvvv+95i/LbZCgyU1HN6INkUXFx8YwZM0h7
Dx8+TF+3bt3Kau7evVtSs6qqisSWFk2cOFEsFI3yL6f5tIcPH07lvXv3lpO2
2M7p06ed8x84cCAtGjx4sPOiBQsWsBXF6ZKczVT+UQgkMFPVz11hpkEaMFND
MA8Jyc8QZgoA4AjMFDDqq5lKLtIJVkFji0iX9jjBbjrt3Lkzq1xYWMguHRLD
hg1buHAh7YjzrLCK2mQoMtMPPviAtU/5eK5JispqkrE6L33ggQcM1ntixRJm
lLSPtAuSyk888QQtouTlpM3aadOmjXPnVFZWNm3alJa+8cYbzilFRESwhH+6
+BJkZzOVeRQCDMxU9XNXmGmQBszUEMxDQvIzhJkCADgCMwWM+mqmZDGSRSdO
nHAe886wJ1KJ7du3i/PBMsgx33zzzcjISJ/bFBSa6ZgxYwxOkuiS+++/32C9
6dfl0vfee49lIhouM8rLL7/cufK///1v5416NlOX7YSHh7ONLl261HlpeXk5
m6339ddfZyUuZ0CScxQCDMyU47mrrk7muSfDPWCmBp0NCZ9/WQLMFADAFXXM
NDxccJi/JTc39yd5iNN+Au40HDM9fvy4ONRvc8JgnVGWPjhaJH3+8ssvBw4c
6DgrLP1MVq1a5XObisx07NixVLlLly5eazIzdeewfM10mav3SdEIYWY6ZcoU
VuLurTFej0KAgZlyPHfV1Zk/92S4B8zUoLMh4fMvS4CZAgC4oo6ZXnaZYDAI
rVsLt94qLF5M55/ObbrcCpd5S4BLGo6ZUkpsvtwPPvhAabMlJSW///47szOD
9fUlbJYhH9pUZKYzZ85kW3R8wahLxIl5Xd7NywzX+W5eTc3U8928NPBYwh7u
5pXg7igEGJgpx3NXXZ35c0+Ge8BMDTobEj7/sgSYKQCAKyqYaX6+RUvF+PRT
d29dlNCvXz/NdgsoRmszjY2NDeTueDBTon///rTon//8p8/tixcfN23a5Fub
TKy6d+8up/KOHTvY5jZs2CBZVF5e/t13382bN+/MmTOCw1xJimZAUmqmzml7
aEe4OAeUzzMgucP5KAQSGtIwU17nrro68+eeDPeAmRp0NiR8/mUJMFMAAFdU
MNOwsDpmunEjOwslvv/++8PuEU9EgR7Q1EwLCwt1ZaYvvPACWyp5w0t1dfWD
Dz7Yu3dvcYrdt99++7bbbrv77ruzs7Mda4aGhrIWDhw4oLRNBrvtlpC07JK8
vDx2y2vnzp2zsrIcF4kvKt23bx99paXsa48ePSTTJXl4a4x8M3WXtmczFf9v
1ddff+1YLvOtMfKPQiChIU0/BJipiueunmdA0igH/zPnngz3gJkadDYkFCUj
+RnCTAEAHFHBTJcscTTTihMn2G2NdCJdUlKiWeJAZbQ20/j4+EDujmczTU1N
veKKK2gpjdUPPvggLCyMSnbt2jV06FC2lvjuUdJMVjJo0KD9+/eXl5fTjm/Y
sIEMkQo7depkNpuVtsn4z3/+w8rHjRu3e/fuxMREz3sk+lq/fv0WL15M9alx
8SWq/fv3F2uKE/mSzf34449kf1RTdMObbrqptLRUrKzUTN2l7dlM09LS2ATF
1DnvvffeH3/8ER0d/f333/fq1Yu1tmLFCuc9Fc1U/lEIJHFxcTSwYaYqnrvC
TIM0YKYGnQ0JRclIfoYwUwAAR1Qw0zfftJtp48ZHw8JYI9ddd51mWQP1aVBm
Spw8ebJNmzbOg99gffGo+AoV2oXBgwc7/jTYtUuiRYsWv/76qw9tMg4ePOhY
gRzN606JVijhyiuvjIiIcKz5/PPPu6zZrVs3ySVXpWbqLm3PZkqcPXuWXR51
Zvbs2Y41nc1U0VEIGDSkYabqnrvCTIM0YKYGnQ0JRclIfoYwUwAAR1Qw0/vu
s5vpddfNnz+fNfLkk09qljVQH+3MlGoWFRWdO3euuro6YLuTn5/PxuHixYvd
1aH9HTlypOPI7969O5msRCHNZvOsWbPI6cRqZFijRo2KioryuU3GunXr7rzz
TlZNzv/JYZl06dJFbLxTp07jx493nPKXQV394Ycf0lKxZpMmTSZMmOD8/weY
7bqc9ZfdJ0w7LidtD+2IHD9+/N577xWl0mC95Zj+YkiqffXVVwbrTRc0eCT7
LvMoBICamprExEQa2DS8YaZqnbvCTIM0YKYGnQ0JRclIfoYwUwAAR1Qw0x49
7Gb6r3+RkLJG5s2bp1nWQH20NtOkpCR9TsVcUlJyxgol6blmaWnp6dOnk5OT
a2tr1WqTKCsrKywslP8GJXK0tLQ0Ol6ZmZkya8bExKje+UrTFqFuPHv27MmT
J7Oysrz2pMvVZR4FTaGBfe7cOZipuueuMNMgDZipQWdDQlEykp8hzBQAwBF/
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
p9tN9OplqTBggLT85Zdt6+bnK9jE6tW2r8ePS2vGxFhuCXa+m5epcbt2wtSp
ysx04EDbpWRy3gMH6lQQ7w0uLvbSFD98N9O//64j5rNmKd20s5maTKabb76Z
Cv/5z3/+v//3/wwXzfSaa64xOL0jNTw83HDxAigz08cee8yxAjPTCRMmiCXU
gsG9mdJpZB/rld/OnTs//fTT8+fPp1PKnTt3GmCmDsBMAZAPzFTRKTHMNMAx
YuUIpqW+3cQrhlpmarh4Wy9lFXSz9epqSChKRvIzhJnqlM8/t51vN23q9pnE
hkNBgUXZyLPY83ouzdQDDz1kEzd3lw7Pn7f19ksvSReFhtoWhYUp2MRnn1m+
tm1ruYOXBHPLFsvlywULBOsbQ1ywbp39SdVvvlFmpvffL/z6q22V7t3r3NNb
v81UvAGbxfr1SjftbKaC9cFPx6l0mZmOGTOGPi9btsyx5oIFC6jw7rvvFlQy
U3Z7cKdOnf7+2/6P7HfffUeFt1+8TA8zhZkCIB+YqaJTYphpIKPNnDbsBTFp
JWl+NqWimVKwCZEot+B6z6muhoSiZCQ/Q5ipTqGzWXa+PXAg71T0gclk/8xu
qXU5N68zBw7YetJBB6RkZNjqkMpJ2LzZtui33xRs4rXXLF/79xdWrhSaNKkj
UHRkJZP9Zmbabv19+GHLVx/MlBg3zoVc128zJU907NjISKWbdmmmxMcffyxm
wsx00aJF9LlHjx65ubniuldddRUVzps3T1DJTNesWWOwXjCtujjjVlpaWrdu
3QzWV8+wEpgpzBQA+cBMFZ0Sw0wDGeGZlrehmcwmpTPxOoe6Zkr5sFfJUIbc
e0l+6GpIKEpG8jOEmeqUbt1s59vkNSQdHmLGDM6plpUJw4dbHqiUE6Rd/iPf
TKOibNJHpuPueqVgffyT9bZzeocP2xaRY8rfBLuEyq6i0n+7dLFM8Nu0qa1w
2DD7REn0YdQoS+EVV9iuCPtmpmRM7JFYin37bBXqt5keO2Z5mex991nGA/Wt
19e/OuHOTKurqwcMGMAyYWZqNpsHDhxIX7t06TJ16tQ33nijU6dO9HXixIm0
SFDJTMlD2ROmQ4YMmT179osvvkibY+9OJV1l9WGmMFMA5AMzVXRKDDMNWIxf
O77WiqL3lroLdc3UYH3PKUuP8uTeVzJDV0NCUTKSnyHMVI+QZTheDPIcdSdd
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
gUr27t3LtnXXXXdJ7vJduHAhWzR58mQftqUTYKYAqA7MVNEpsdZmqmIoSqbT
l52KL1heTDY8dDjHnJvPas7+8VJlel7HYE+wMjp80UHdxtnEvJQ55c+r6+jA
CdbLwR4ueQfv+JT8DGGmAACOKDPTJ5+0a6nTy1O0w52Zzp8/nyX8008/Oa/V
v39/g/UuX982Kl51Xb/ecgfUJ598wr7u379fUpP+xezatSstuv76633blh6A
mQKgOjBTRafE9dVM10aupWrb47dzTzvvvOXF34sjFqvbrKZmStlSs5Q5366j
w0dp0KF0VyF4x6fkZwgzBQBwRJmZ3nKL3UyHDQtYku7MdMOGDSzhb7/91nkt
dkfubbfd5qHlXbt2ff/995s2bXJeJE6ItGDBAvr62muvsa+xsbHuMmzVqpWC
vdIZMFMAVAdmquiUuF6a6SvbX6E6xirj1fOu5p72msg1lEz++Xx1m9XUTClb
apYy59t1Pef1pINImdABdVkhSMenAWYKANATCsy0tlZo3dpuppMmBSxJd2ZK
ksgSnjhxomRReXl5ixYtaNHUqVPdNVtTU9O+fXuq06tXL+el7777Lmv80KFD
gsP12bVr1zpXvvrqq2nRjTfeqHTX9APMFADVgZkqOiWuf2Y6Yd0Ec42Z6jy+
4XHuOVNcO//aWit9F/ZVsVntzJTyZAmTGHLvPTqItIN0QOmwOi8NxvHpXFmA
mQIAuKLATNPT6zxkOnduwJJ0Z6bEAw88QIuaNGkiucmWTbRLbNiwwUPLEyZM
YNUkl03T09Pbtm1L5U2bNmXT8x45coTVHDp0qOOEvcSaNWvYohdeeMH3neQN
zBQA1YGZKjolrmdm+sr2V5iWqvIKUbUiqyyLUtqZsFPFNrUzU8qT2qScufcb
C/ZmVTqszldOg258uqwswEwBAFxRYKZ799Yx0+3bA5akBzM9duwYy/nSSy9d
t25dWVkZaePnn3/OXv7Sp08fKmE1Dx061MXK22+/La5Ohez9Mpdddtn69etr
amrMZvPevXvZNVBizpw5rGZtba34yphRo0aFh4dTzYqKigULFrRu3ZoKW7Ro
ERMTE4De0AiYKQCqAzNVdEpcb8y005ed2LOlgs60lGLavmmC1a3azWmnVpsa
mSllyNSecubeb2IwORWsz5w6TogUROPTQ2UBZgoA4IoCM/3uuzpmmpQUsCQ9
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
C/Pn2z6fO+d9K716WWoOGCAtf/llWyP5+baS116zfG3f3kuDeXn26+Dky+xh
YfG6pwceesi24rp19sJnn7WUXHON5VJps2aWm5mD8AxElpl++mkdM6VuBPUO
mCkAqgMzVXTuCjPVQ7SZ0yY8M5w5o7nGvC5qXbs57TyvoshMqbX1UeupZcHq
v7St4HpvqbvQ1ZBQlIzkZwgz1SnvvWc7Cb/jDtcVxHt9Bw4MbGa64cknbT2w
caOtJDnZ4obswqLjy3RIG4cNsz3s+fPPcs30/HlbzZdeki4KDZVevBs61PKV
tvLDD5bpdumoPfGEZYKm0tI6KxYUWK7eTp9um61Xppnu3m3b3JgxdcqNRuGF
F2xzQP3jH8L69V7a0SWyzPTpp+1a6lX/QXACMwVAdWCmis5dYab6ifFrx5dc
KGE7SBa5M2Fn34V93VWWaabUArXDnJSg9mkr3PdUrdDVkFCUjORnCDPVKbfe
ajsPJ9n5/XcXIc7MM3Ei51TLyoThwy23tsqJb75RbbsnTlh0zHBxeiLKQZzH
mE1dK2Iy2T//9JPcu3kzMmw1SSQlbN5sW/Tbb5avZMFt2rieqqhbN8vbZNwl
c/XVsu7mZdMu0d7Fx7tYWl3t9q00wYAsM73tNnuXOt5EDeoRMFMAVAdmqujc
FWaqqwiZGTLn8JzzVefZbtbW1uafz18Uvqj/D/0lNT2bKdVfHLGY1q29eM2C
2qSWqX3u+6hi6GpIKEpG8jOEmeqRkhKBzsxdmo5zzJrFOducHLmpUjz/vJqb
Fg3RMb76ytMq8s00OtpW09mmSTbZopUrLV+pKXHrV1xhuWb64os262Q37rq7
+1SOmUZE2Nq57z4vCQcnssy0Tx+thhDQDTBTAFQHZqro3BVmqs+Ytm9aVllW
rcO9cJXVleQvm2I3fXTwo/t+ua+ovEhcdGfonVRC5bSU6lBNcRG1QO1Qa9z3
SIvQ1ZBQlIzkZwgz1SNhYQpcb9MmYfJkS6xd67q1V16xLD19WnEaCQmyquXm
Ksj2hRcUp+EO8Ybn5s0tr7kkcWO38pLUfPih21eayjfT+HhbzW+/lS4SbXGZ
5fXQlmd+2RtFx461zHHEqKgQHnvMVu3f/3a9CTlmSseONbJ9u5eEgxO57zM1
Gi3PDv/yi3DkCI80gebATAFQHZiponNXmKme49r5166JXJN3Ps9RUeVA9Wkt
WrfnvJ7c90K70NWQUJSM5HjBTPXIggU2GenaVVizxkWI8/w0aWJ5Hwr73LKl
a9ti0rR5s4IE0tMt71i5/Xa59SMjLeYrJ8Qpg/zk+HHbXvfqJcTG2gr//tvi
p6x83jzXK8o3U7FjJfcGE/v32xaJ/zegpkbIzJTq8P9v707gbKr/x4/fGfuW
vUQRilB2oWQrIi2UNm0i2rSoRLRItIkvkdK3fKPwTd9CvpUlifpF/Fsoe8kW
4mvPZMxy/u87n+tzz9z9js+dc++d1/PxeXjMnHvOuefO3Jm5L+fccw4ftipX
ds9Wq1bguwhbpn/95TlOWOb0ufRMsoi0TJHsKFPAOMo0qteulGlCjGIjivX7
pN+sX2at3rP6f8f+l56Rbm/VzKxMmSLT5VaZR+aU+R3f5nwYcfWUiGpjfH4M
KdN4pMPzqqsCz/D8854ZWrVyv81T75Fs0yZAv+ShTNW1VyIv0/z30EOeh/zN
N7mmHzjgicGGDQMvGHmZZmZ6jqkeMsT3plmzPCv57LMwK+ne3T1bSop17FiA
W8OWqb4YjX8dJwvKFAplChhHmUb12pUyTdCR5+uZJtOIq6dEVBvj82NImcYj
fSbSAQMCz6AvdTp2bK4ydQV6U2RSlqk0u2xhamqAm9QFVkqWDLxg5GUqzjwz
8LG4EyZ4VqKPkc7KckexP3UC4TyXaevW7hmKF0/ocxyFRplCoUwB4yjTqF67
UqYJOihTV5w9JaLaGJ8fQ8o0HqnskjF0aIBbV6703Cqv3nfv9i3TEiV8z+Aa
sEyly15/3X09FInft9/OdYqeL7+0rrjCvcg551iTJ1uLFoXfYPnDt2xZRGP7
9jx8PQK47TZPmR465HtTt27um4JdWySqMm3Z0nNSI5890V26eOJXHb77wAPu
LZH89D/TUePG7jmrVw+8/tBlevSoZ6dt9+7hNzVhUaZQKFPAOMo0qteulGmC
DsrUFWdPiag2xufHkDKNR9dd56mngQMD3KqvF9Ozp/tTXaZvveXeuebKuQSq
vaT8y3T8eM+celSubM2b57m1adNcN6l7CcGRc/O++qpnhfJY7H77zSpVyj1d
4jqgqMp00iTPzJ9/7p24c6f77b0u28lyZRvUbC+9lGvxTz7xTA92xdLQZfrl
l57Fn3km/KYmLMoUCmUKGEeZxui1a2K98k/6QZm64uwpkeefLIsyjU8PPuhJ
kksv9b1Jv8NR4kjtG9Vl+s031ssvez6WcNN8ynT2bM887dpZ06a5e7ZRI/en
xYq5s058+KF1442efaaSZgsWhNlaR8p0+3arbFnPbtMJEzxH0q5YYdWr57mj
YGcqDlGm8qWQKpexapVnyrFjVsWK7pkrVLCWLHFft3TDBu9dfPGFZ7bff3fv
qpYp8qWeMsX93wIZGe4TVaktLFLE+vXXwBsTukzHjPHckXzTkxdlCoUyBYyj
TGP02jWuXvk7vjGOD8rUFWdPiTz/ZFmUaXwaO9aTJCkp1rffeqfPn2+ddprn
pocf9ky0l2lmpvucSK6cdyZKQyn2MpViqlXL/an0lz6VWVqaVaeOe6IEqRLV
+0yPHnUfQNulS0TjjTdO+atz0vvvu7NUPXb5oHRpb//27h10qRBlOnRogD2k
Eye6vwtqun1H891351r2X//y3lSypHdO6X11zdOAQpfpo496VrJuXZgvRSIL
U6b791u//GKlpzu6jcgPlClgHGUao9eucfXK3/GNcXxQpq44e0rk+SfLokzj
05497qJRVVKunPXEE+5WlWzUiXTZZdaJE56Z7WUq1q/3ZFHr1p5jeu1lummT
Z+YpU3Ld47PPuieecYbn0/g/A5Ly3XdWs2a59snKQ5BIDGHGDM+cW7f63jR8
uO/OUGX2bM+pkNQoVcp9eK3/9VIXLLDq1/fOJm3VuLF7N24Ideu65wx2tdN+
/Tz7YYNdmzUphClT9T8J8um551pXX23t2uXoxiKGKFPAOMo0Rq9d4+qVv+Mb
4/igTF1x9pTI80+WRZnGLb2/zH+0bZvrtD8+ZSpGj/ZMkQ+s3GX66afefXnS
vHoUKeKZLmuzEqdMFflqLF/uflfmH3/E8F527HC3548/Bj7LrrZnj/tET/JK
4K+/YrgxSSRMmT75pPeZn5LCVzWJUaaAcZRpVK9dQ58BKa5GjL4gCTooU1ci
PyV8fgwp0/j18svePadqVK3q3tdpu6Cwm3+ZZmV5rzayfn2uMpXF9Y6/gGPL
FvdsiVWmSGRhylRdA0iNs892dEsRW5QpYBxlGtVrV8o0QQdl6krkp4TPjyFl
GtcyMtxXzJwxw/0O0927A8/jX6ZiwwbPMb0tW3rejKnKdPFiz8wBL76pUabI
L2HKVJ9vSkanTo5uKWKLMgWMo0yjeu1KmSbooExdifyU8PkxpEwTXsAytWzX
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
X16VgroiTCSCnZtXelDPo1Jx0KBBeopPXVaoUCElJeWnn37SMzz//PNVqlRR
5+P1eZ+pfVmJR9W89g3euHGjVK2scNu2bdbJMrWfMemDDz6QKe3bt4/yKwQD
KFMolClgHGUKAEgOmzdvVplQsWLFyJdSZXrPPfcMzm3ixIl6HlWmc+bM0VPs
dakOmg1xiZkQZaoas2PHjj6LXHrppTL9888/t06W6fz58/WtK1eulCnNmjWL
/GHCFMoUCmUKGEeZAgCSw+zZs1UmdOnSJfKlIn+f6Zo1a/QUe13OmzdPPr7s
ssuCLR6iTMeNGycf33bbbT6L9OrVS6ZPmjTJOlmm9ovg/PzzzzKladOmkT9M
mEKZQqFMAeMoUwBAQRZ5mW7YsEFPsdflkiVLXDmn3g22eIgyfe+99+xHBWtX
XnmlTJ82bZp1skylRvWtlKmDKFMolClgHGUKACjITr1Md+zY4co5Wa78VdUz
fPLJJ6VLl1YzqDKVf/2XXbFihXxco0aNjIwMvWx6enrVqlVl+ldffWVRpnGG
MoVCmQLGUaYAgILs1Ms0OztbXVBG7xUVbdu2lSlPPPGEfPzyyy/Lx4888oj/
svKHWLJUPpV59LIjRoyQKZUqVVK5SpnGFcoUCmUKGEeZAgAKslMvUyvngN7U
1FSZcvXVVw8YMKB27drycZUqVXbt2iW3TpkyRT4tVqxY69at5W+uz7Iff/xx
SkqKTLnyyiufeuqpLl26yMelS5fWf50p07hCmUKhTAHjKFMAQEEWSZk2btw4
YJn27NlTT1m6dKm6zKhyySWX6JY8cuRI+/btVX6OGTPGf9lFixade+65akEJ
2LZt2y5btkzf2qJFC5m+bt06PUWVqUw/9YePaFGmUChTwDjKFAAAU/bt27dy
5cq9e/f63yR9unv37uzs7GDLymtXea2blpYWyw3EqaJMoVCmgHGUKQAAQIQo
UyiUKWAcZQoAABChSZMm+ZdpxYoVnd4u5DfKFDCOMgUAAIjQhx9+6F+mZ599
9imudsGCBVMj8N133xl5FDh1lClgHGUKAAAQoRiVabVq1fxX62/w4MFGHgVO
HWUKGEeZAgAARCgWZfrHH39EkqXio48+MvVAcIooU8A4yhQAACBCsSjTuXPn
qvU0bdp0WUhSN6YeCE4RZQoYR5kCAABEKBZlOmzYMLWegQMHmtpOxBplChhH
mQIAAEQoFmXauXNntZ4ZM2aY2k7EGmUKGEeZAgAARMh4mWZnZ5cvX16tZ/Pm
zQY3FTFFmQLGUaYAAAARMl6mUqNqJdKnBrcTsUaZAsZRpgAAABEyXqYzZsxQ
K+nUqZPB7USsUaaAcZQpAADiiy++KFSoUMOGDaNaKiMjY+zYse3atTvjjDNK
ly7dvHnzAQMG/Pnnn/Z5Fi5c2DOcPn362BfJysqaOnVqmzZtKleuXL58+a5d
u44cOfLIkSPBtmHMmDHdu3c/66yzZBuaNGny2GOPHThwIMRmZ2dnt2/fPjU1
lauQRMt4mT7yyCNqJfK9viq46667zuCjiCsvvvhiywh06NDB6S3NhTIFjKNM
AQDYunWrZJ3UQb169SJfav/+/VKy/p0iLbl48WI928SJE/3n8V9Ezy+l2a1b
N/95mjVrtm/fPp9t2L17twSs/8yVKlXasGFDsC1/+umn1WwffPBB5I8XVgzK
9JJLLgn79BB16tQx+Cjiyl133RXJV6BYsWJOb2kulClgHGUKACjg1qxZU7t2
bfXqN6oy7d69u1qqefPmknifffbZ3XffnZKSIlOqVKmiK3LWrFkXBJGamqrW
cNFFF+nVPvbYY2pio0aN3nnnnRkzZlx99dVqSpMmTbKzs/Wc8nH9+vXVTe3b
t3/zzTc//vjjK6+8Uk2R9Z84ccJnmyV7hw4dql/tU6bRMlum8u0oWbKkWskZ
Id177732BbOyshYsWDB48OBbb731pptuGjFixJw5c44ePWriIYYybdq0l19+
ee/evXpKenr6Ka7zmWeeqReBZs2aneIdmUWZAsZRpgCAAkteVD/77LNFihTR
iRF5me7evVst0rRpU3sAystsNX3cuHGh17B169YKFSrInBUrVvz999/VxD17
9hQvXlwmXnjhhYcPH1YTpUCledVqFy5cqNcgHaomdu7c2V6sXbp0UdO//PJL
+z3+8MMPjRs3ticVZRots2X6008/qTWcddZZkS8lr9zOOecc/82oXbv2ihUr
8rYlEWrevLnc0erVq9Wn77zzzplnnhnTe4xblClgHGUKACiYfvvttwsuuEC9
pC9cuLDa1xl5mX7yySdq2QkTJtin79+/X02/4447QiwuMduiRQuZTe530aJF
evqrr76qFn/jjTfs80uxFipUSKZfe+21emLLli1dOftnfd7Z+sUXX6iVPP/8
83riqFGj5GGq6UWLFqVM88Zsmf7zn/9Ua+jRo0eEi8yfP1/9X4rE6SuvvCKf
ygs5ebaoA8vlW/zjjz/mbWMicdddd7Vq1WrLli3qU3lOyj3G7u7iGWUKGEeZ
AgAKJr3DUV7hL1++vH379lGV6TfffKMWf+211+zTDxw4oKb369cvxOKjR49W
s91999326ddff70qR/9TGHXq1Emlhzp+8ueff1ZrGDNmjP/6d+7cKX/l7VP0
W2IfeughyRnKNG/Mlmn//v3VGl588cVI5j906FC1atVUyfqcEUu+3ddee63c
dMstt+RtY/KAMg37SpsyBSJHmQIACiYp0ypVqkjWHTt2TD6NtkwzMzMrVqwo
i9StW1etQdHv4pw7d26wZf/4448yZcq4ck7Hun//fvtNNWrUkOn169f3X2rY
sGFqzdKk8um8efPUpz/99JOVsxP222+//fe//71u3bqsrCz/xRs1anTNNdes
WrVKPv7qq68o07wxW6b64Oovvvgikvlff/11mfnMM8+URPW/dePGjampqXKr
RJCV838XgwYNWrx48Ztvvtm5c+cnn3xy06ZNVs5/nowdO/buu+/u0KFDz549
Zfpvv/2m1iA/DrLI2rVr7auVZ5RMnDx5snz82muvyce7du3avHmzfKCONJAP
3n333UmTJskH8iS0L7tz506ZOH78+BAP6o033ugegfws7khQpoBxlCkAoGCS
nPzbtlcx2jIVL7/8sjqFkcTpxIkT33///Ztvvlnvh7Xnqo++ffuq2dSrfbtS
pUrJ9LZt2/ovJdWglvr888+tnNfz6tPDhw9LZegT6YiqVasuWLDAZ3F7AlOm
eWawTNPS0tTx1dJ3AUvTnzwxZP6BAwcGm+HXX3/V7zj+z3/+IzM3aNBAb6ds
/MqVK9X/qAh1fLiQJ49Ml0VkzfLp/fffb1+nfCoThw0bZtneZ6qfQkrHjh1H
jBghH1xzzTX2ZUeNGiUTBwwYEOJBcW5eAAplCgCAlacyFZ9++qn/S+hOnTod
PHgw2CLSICVKlJDZKlSo8HfuA24zMjLUGgK+6/Bf//qXulVdhPSpp55Sn3bt
2tV/GyR2/LNXo0zzzGCZygswtXjdunUjXERF5dSpUyOZWZWpaNOmzTvvvPPw
ww8fP35cXZDo+uuv37hxY3p6+uLFi5s1ayZTbr/9duvkIeJyL/qkXvKButPN
mzdbuc+AdPTo0UI55AOp7G3btqWmphYpUkQqTG+DPDSZX+2pD0Y2rFwEqlat
GuFXKX9QpoBxlCkAAFaeyvTdd99VJ9dVJajP8Suvz++///6Ah9RaJw/IFI8/
/rjPTfLaVR0eqTLBx+zZs9WC7733nnzau3dvXUbVq1efN2+eLL5z585hw4ap
PbllypSRTwNuA2WaZwbLdNy4cWrxgN9uf9KVav7vv//ePn3MmDEjR458PseI
HL/++qt1skxLliypL2AkL/ykTBs2bLhr1y69+JQpU1w5Oz3Vp6o9P/nkE/Xp
nDlz5NNLL73Ufqs+N6/P+0wvv/xyuXXSpEnq0++++86Vs9M2yi9MYqBMAeMo
UwBAEti7d+9v4ezYsSPEGqIt0wULFqiKLFeunLy2l5edGRkZ8ie1SZMmKh8e
fPDBgAuqtxZKPOo392mZmZkqKnv16uW/4PTp09WapTjkU5lHfSoF6vPQ1HGV
4rHHHgu4DZRpnhks01tvvVUt7nMSrWDk6aGOv503b559uj46V1PfVlWm8nwL
uKqNGzfKel5++WX1zG/durW6Sf3PyU033aQ+Vafkkme4+jR0maqn6MUXX6w+
feCBB+TT0aNHR/41SSCUKWAcZQoASAL6Cp4hhL7wYrRlKi+/1Wp9zl1z9OjR
mjVrunJOortt2zafpVatWqWW6tatW8DVykbKrfJw/G+aMGGCWlZd0nTQoEHq
0yeffNJnTvn7rt6v2rlz54D3QpnmmcEybdSokVo88ouQnnXWWTL/M888Y5/4
7rvvTjzpvPPO8ylTnyPDd+7ceccdd6hr5trpMj148KDcWqJEiSNHjhw4cKBY
sWLyXJJntbo1dJmmpaWVLVtWZtiyZYs6DFhm2L17dx6+OPGPMgWMo0wBAEkg
n8s0KytLXRK0TZs2/rdOnjxZ3ePMmTN9btJXCfnss88Crlm96e+iiy7yv+m5
555Ty3733Xfy6fjx49WnAd91qKqnevXqAe+FMs0zs+fmjdZtt93mynkjc7AZ
Onbs6FOmN998s75VXvjVr19fJp5xxhm33367PIXkRaA8Fe1lKtSJvCR433zz
Tfmgd+/e+qbQZSruuecemWHkyJHqgr9XXnmlqccebyhTwDjKFACQBFatWjUv
nMWLF4dYQ1RlKq8zVZLccMMN/rfq7vM5jjEjI0NdLKZWrVr6BKo+rr76apnh
9NNP93+b6p133unKOQxYXchSn9/mH//4h/96LrzwQrmpRYsWAe+FMs0zZ8v0
iy++UPco6RdwhjZt2oQoU/kRUM8u+0mKXnvtNZ//DFm4cKFMueqqqzp06CAf
LF26VN/kX6bCvgErVqyQGZo1a9anTx/5YNasWSYedzyiTAHjKFMAAKzoj+ZV
5z46//zz/W+aOnWqygf1hlDt+++/V9P79esXbLX6oqVffvmlffrx48fLlSsn
0y+44AI1Zf369cHq+NixY+r0v4888kjAe6FM88zZMrVO7jZ15RzFvX37djUx
Kytr1apVnTp1sn9b/ct05syZaodpenq6mrJt27bq1avLxEaNGunZZG3yiNSq
ateubf9fFJ8yVU8zn0veyA+RK+do9vLly8vzNjZfBudRpoBxlCkAAFb0ZXrZ
ZZepl+5z5syxT5fX/Gp/pfA5MdGkSZPU9PHjxwdb7c6dO9U5fvUpaBRdu08/
/bSeqK4AIgng817X4cOHB0xjjTLNM8fL9MiRIz169NB3LV3ZqlWr0qVLq08l
FZ955hl1LV3/MpUOVe8wbd269ciRI/v161elShV10i3JVfu96GsSjRgxwj7d
p0xV1Uq99u3bV8/zyiuvqGV9rouaZChTwDjKFAAAK2SZLlmypEoO+3Veli1b
pl7SFy1a9K233vrzzz9l4tq1a9UBkOLOO+/0WY9+k2no44rvuOMONdsDDzyw
b9++48ePT5s2Tb2ttVSpUvoKIGL58uVqznLlykljSrNIkrz00kvqDK7169dX
x/36o0zzzPEyVaZPn96uXTt1dmhXzkWLatWq1bt3761bt+p51AVf7GUqPvro
I3kmq6XkCdyxY8d169bJsvLpypUr9Wy//vqrrFNm8DmLlyrTX375RW9GyZIl
XTkniNbz7N69W22YekN0sqJMAeMoUwAArJBl+umnn6pX8n369LFP16ckUtTp
cJULL7zQvwqvuuoqdeuePXtCbMmmTZv0sZTyCl81qeoI/32gI0aMUIHsytl5
qppUnHXWWfpQT3+UaZ7FSZkqR48ela6UAAz2XxABnThxQp5j33//vdq1eoqO
Hz8uOWxflTrOPFkvY6pRpoBxlCkAANbJk5rqd3HazZ8/XwWI//tDFy9erE52
qpUuXVpqUb+Pz05daKZSpUphN2bv3r1du3aV0tSrrVu3rs9VLLWFCxeef/75
evdZ+fLlr7/++rVr14ZY/7Jly9TMwQ73RTBxVabxSb0Tdty4cU5vSGxRpoBx
lCkAAKfowIED8sdUKvX3338PdtLdPJA/0ytWrJDVbt682f9UvT4OHTr09ddf
y6vlsHPiVFCmwRw/frx+/frnnHOO2mWvL4GarChTwDjKFAAAIEKUaQjq9NGS
pT/88IPT2xJzlClgHGUKAAAQIco0hKNHj/76669Ob0U+oUwB4yhTAACACFGm
UChTwDjKFAAAIEKUKRTKFDCOMgUAAIgQZQqFMgWMo0wBAAAiRJlCoUwB4yhT
AACACFGmUChTwDjKFAAAIIQZM2boj0OX6bRp0xzaRuQ3yhQwjjIFAAAI4dFH
H1UF2q5du+HDh/uX6WmnnaY+6Nevn9Mbi3xCmQLGUaYAAAAhfPnll/41GtDM
mTOd3ljkE8oUMI4yBQAACOHEiRNly5aNpEz37Nnj9MYin1CmgHGUKQAAQGg3
3nhj2Cxt0KCB05uZF+vXr69Wrdrpp58+b968CBfp27fvTUGMGTMmplsbPyhT
wDjKFAAAILRp06aFLdOHHnrI6c2M2okTJ5o2baq2/9///ncki+zduzfEF+Ga
a66J9TbHCcoUMI4yBQAACE1yLDU1NXSZzpkzx+nNjNqQIUP09kdYpgsXLlTz
16xZ8wI/jzzySKy3OU5QpoBxlCkAAEBYrVu3DpGl0q0HDx50ehujs3TpUntu
R1imr7zyipp/y5Ytsd7CeEaZAsZRpgAAAGGNGjUqRJm2aNHC6Q2MzqFDh2rU
qCFbXqhQoajKtFevXjJzhQoVYr2FcY4yBYyjTAEAAMJavXp1iDIdPHiw0xsY
ndtuu002u2zZsu+9915UZVq/fn2Z+fLLL4/1FsY5yhQwjjIFAACIxNlnnx2s
TBcsWOD01kVh5syZarPff//9r776KvIyTUtLU/tYhwwZsmzZspEjR951113P
PPPMxx9/fOzYsXzY8vhBmQLGUaZO2bp166ZNm+Q3vNMbgkSQkWEdOmT99VdE
M2dnW0ePmrnfzEwr2qeozH/iRHSLyAZH+NAAwFH33ntvwCwtWrRoAnXZ9u3b
y5UrJ5t9ww03yKdRlel3330XrM3PPffcb775JvabHy8oU8C4pCnTLl26XJgj
7OE0AwcOVHP+97//PfX7lcA8JMkQsd27d990003VqlXTv8mfe+65U9+MAm79
+vXqe9q7d+8Y3cUPP/yg7uL+++8PPTEmbr3VcrmsM84INc/q1dYtt1gXXGCV
KOGeuUIF6+KLLflxiOb56fG//1mPPWadf75VtKiVkmI1aGD172+FuM5dero1
ZozVrp1Vtar7rgsXturUsa65xlq0KNS97NhhDRpkdexolS3rXqpSJatNG2v6
9Eg3cvJk9+bJeOKJSBeZONGzSLFiYbZNXlypOeURAcBJ8sohYJS1bdvW6U2L
VFZWVocOHWSbq1atun//fivKMp08ebL9gdepU6d58+YlS5ZUnxYqVGjVqlWx
fxBxgTIFjEuaMj3rrLPUb8WUlJQvvvgixJzXXHONmvNf//rXqdzj8ePHR4wY
UaJEiS+//DLCRdLT0y+++GKfP2fTpk07lc2AZfsv3NatW8foLuS7rO6iU6dO
oSeaJ88QCTcVmwFlZ1uSxqmpntl8RpUq1ty5UdydvKgoVy7wql55JcD8K1ZY
tWoFnl/GjTcG3oErPzWVKwdepH176++/w2zkxo1WyZKe+SP/b4GXX/beS/Xq
1pEjQeeUblWzlS4d6coBFABpaWnyd9+/TIcPH+70pkVq9OjRapvnz5+vpkRV
pvfdd5+aWV7P7NixQ02Uwr3xxhvV9IYNG56I9siZxESZAsYlX5mKGjVqHAn+
mtNUmd5www1qPZGX6dSpU/VGVqlS5aabbpKN2bBhw6lsBqzkLtMPPrAKFQpT
pvbgKlLEatbMuuIK65xzvBMl4iJ8mm3bZp1+unfBOnWsli3duw71lOefzzX/
/v3ys+e9tWpV6/LLLfkuqP22avTp43svM2d6H5SMatXcNWrP4bvvDrWRGRlW
ixbemfNWpjL69Qs6J2UKIIirrrrKv0y//vprp7crIj/99FPRokVlgx944AE9
MaoyXbdu3fTp08eOHetz9HJmZmajRo3UepYtW2Z+0+MPZQoYl5RlKu65555g
c5oq065du0ZbpsOGDVOLdOvWLTs7+1TuHXbJWaYHD7qbzl5SAct040Z3jaoZ
mjeXFw2e6fIEe/tt92Gr6qYIvzL6HmXBjz7yTNy3z1uCxYtbOUd/edxxh2e6
lObo0e73pSpSuB07erfcfmIQWVvFip7pZ5/tPm5W/SzI9C5dvIusXx90I596
KteXJc9l6rNhdpQpgCDefPNNnywtVapUQuwllFd9DRo0cOUcgmvvyqjKNIQp
U6ao9bz++uunvLEJgDIFjEvWMhWLgryPzMEyfeSRR9QirwQ8KhJ5lYRlOmeO
5z2bYct03DjPrWXKWCcPrPIaM8Zza0qKdfhwmDv94w/v7tE338x105Ej3kN2
9bNXilI2SU0cONB3bYcOucNT3froo97pzz3nmViqlPXrr76LVKrkuVW2PCAp
Wfv+1lMsU9nCgF8WyhRAEDt27PB5vXHFFVc4vVERmT17ttrgIkWKnGdz5pln
qumVK1eWT7t06ZK39X/zzTdqPY899pjZLY9PlClgXBKXafXq1QMe0xtJmcpv
D4mdX375JVPvA/KThzJ96KGH1CJv+rzst8nIyFi/fr18U/bb90yFJBspW7th
w4aAW3vo0KGffvpJ/l7s3Lkzkh21v//+u8wsv0IjvPdg8vBArJx376rHkpWV
FflS/mWanp6+atUq2YAI903Ld/z7779funTp6tWrZVn/GfK1TCdPzlVPxYuH
KtMePUIdmyrZpdezdGmY+5WfCDVnxYoBzq87caLnVklU9VVdvdq7cqlafxKk
6tYOHbwTzz/fM/HZZwMscs897mKtUcN64YUAt8pPdM2ansULFzZQpjL69g0w
58KF3nwGgNz0YauJ9b/NH330kSsCEqchVrJ8+fI5c+YEfOUzb948tYaxY8fG
7EHEEcoUMC75ynTcuHEpKSnq436BXquHKNMTJ0489dRTderUSU1NVfMUL168
RYsWn332mX02CcwqVaqo63mJ0047TT5t0qRJiM1r3ry5zKPe3CFKlixZJceU
KVP0PAsXLpT7KlKkiP7rIA+qT58+/mX3448/qsXHjx//1ltvVaxYUc1/9tln
y98LPdusWbMuvfRS+5+b0qVLDxo0KGB1Spd17NixbNmy9nvv37//4bA72vxE
/kBkojyKatWqScZOnz69VatW+kskm3rllVdu27Ytknu0l+mWLVvkgcg3Tk2R
R9S1a9dgb+ZdsWJFt27d5OumnzOiWLFiV1xxhc8i+VqmI0d6D5EdPlxeB3iD
0d8DD1gXXeR+s+cbbwS49e+/3XtL1eK5n8YBSBWqOXOuI+Br0yZvzW3d6p7y
7bfWZZdZ9eq5WzWgIUM888sWKvIN1SvZuTPM9vi7807Pspdf7t5Lm+cybd3a
atrUuyWff+47J2UKIDj93hxFCsXpLYrIunXrHg+kZ8+e6oHIn135dPTo0cHW
kJmZWaZMGVfOf/7736q/LJ+F/XOTFChTwLjkK9OffvppwIAB+u+F/5Wvg5Xp
+vXrmzZt6grigQceOH78uJqzV69e/jOcEfKKHlWrVg24WuloK+dXvT6fkr8z
zzzT55f8t99+q27q0KGDPalcJ8/0m56eftdddwVboYTYrl279NqysrJeeOEF
e0janXPOOZFfnizaB3L11Verm2QDfB6IUqFCBYnHsPery1QeRaVKlfzXI39J
pdN9lpLvacA7VaRP7dcVyu8yTU11XwJm7Vr3pytXhirT0OQLrvtrz54wM+s3
kwbcXyn06XAjfNXRsqVn/nvv9UyRL6nr5LmVlLQ093l6X3/dHYOh99R/+KFn
2fLl3VWrd8jmoUwvvdRas8Z76LJ0vc+1dShTAMEtX75c/7EoX758VAf5xKGo
3meqTwD1n//8xz59+/btpUqVcuWc4PGvgnGJasoUMC4py1R+9mvVqqU+lQrz
2esXsEylOvUiUjf333//u+++O2HCBD2zePbkwYdz58597rnnatasqabfdttt
8qlqzGBee+01mad58+Zqka5duz6XQ/1H66hRo/S9tGzZ8sUXX5Rte/jhh9X/
TLpydt3+antHni5TTf05KF26tPpzYP/v3BYtWrz00ktvvvnmFVdcoffzykR9
mOtbb72lZ27cuPHo0aOnT58+ZMgQ+eOiJkoeRnhEbrQPRJepUq9evcGDBz/z
zDPt2rXTEyN5w4vPhb+LFi364IMPTp06dfjw4fr/BFJTU9fbTqqjo9KVcx26
iRMnyh9Z+Sr16tVL7zFv2rSp//z5UabbtrnPa6TluUzlxVKjRt43VIal30k6
Y0bgGerW9czw1lvh1yYvWnQUv/OOZ+Lo0Z4pPXtau3db8nWzn/hXxjXXWHv3
BlibpKh+T6vavFMsU8u2b1rGXXflmpMyBRCcpGjlypXV7//u3bs7vTmnKliZ
LlmyRB2g9fjjj+uJn376qfpP3bJly8qrhczMzIyMjAULFuiXYSHer5RkKFPA
uKQsUyvn16zeHdY39/vIApapTir5W7NmzRr7/JMnT1apUqJECfvBpabeZ6pP
4S6ky+zvFd24ceP555/vH2j2MpXokwcrmblp06aF8nLasiT99A7QAQMGyJ8M
veDHH3+sF1R7Qg8dOqT/vErN2WfetWvXRRddpG66P4IX/3l4IPYylS+O/d6f
eOIJNV2+jzvDHfZpL1PpaPn62B+F5La66aabbtLTr732WjXxLp8kyfmfB722
zZs3q4mnXqZz5szpHZk+ffrYvxTeMg121ZhgHnnEW16RnClRnzI354kUwMUX
e2b4xz/CrGrTJu/VZ2rW9F7S9MknvYfj1q4d4F2frpwLsP74Y661ZWe751e3
3nyzZ+Kpl6l8kZs1896vfUcwZQogpDvvvFP9/p8wYYLT23KqgpWpRKia3if3
xb/kT7z+K1ksh/5U/nYn+h7kyFGmgHHJWqZCOkv/qvzc9j4y/zI9fPiw2uco
PtJXyrC544471K336oMSzZXp7bffriZepN+LZyPfHZ+WtHKXqYSzzyIvvfSS
uqlmzZr+57Fv06aNLkH59Omnn1afNm3aNFcN5ZDaLVy4sNxaqFChPwKe4sYm
Dw9El+m5556rD5ZWpLVPP/10devScKfusZfp+PHjfW79+uuv1U0Sub///ruV
c03w0qVLyxR5dHsCHeNavXp1tYiO3FMvU5/3JYWWlpbmXTJvZfrSS97m6tDB
iuRMUHr3ZbBL0ekLwYwcGWo9u3Z5z1OUkmLZf0AefNC3Q1u0sAYNckd0vXre
iU2aWPbTeY0d65lerZp14IBn4qmXqfj5Z++jlpUfPOiZTpkCCGnWrFnq1/Va
9baLRKb/Sn744Yf26fPnz1fT/c/aIS+W9JFm6s9rnTp1Pvjgg3zcaudRpoBx
SVymx44dq127tpootx46+T4y/zLVXVO5cuWAK1+8eLGawX5RElNl2qxZMzXR
/q5Gu86dO6sZJk2apKbYy3T37t0+8+tDYV977TX/tW3YsGHmzJk//vijupaZ
fhTBrj6mz6Hk/45dH3l4ILpMBw8e7D9/+/bt1a3yxzH0XevvYKVKlXwKV2nZ
sqWaQZ8hSspXWnv16tX+Mx85cqRhw4Zqfh3FCVamw4d7K69SJWvLloiWKlcu
6BmBFL3jcsSIoCvZvNk691zvvftcO8DnCq2vvupN5vR06777vDfpZ++aNZ6r
skrk2nfmGilTy33AhPdOe/f2TKRMAYR0+PDhIkWKVKlSxekNcdKuXbu++uor
CdtDPm/VLxgoU8C4JC5TIVmhj+nVB236l+n777+vphQrVuyuQLp3767DR6/c
SJlKH+ndtf6NqTz55JNqBrWX07KVaelAF1usUaNG5Bt27rnnqpklugM+dn2Z
s4kTJ4ZYT94eiC5T3ap2+jQLwVJX02Xatm3bgDP07dtXzeB/bv/MzMz169dL
scpNd999tzSs2k2syN9cNdupl+m+fft+iozP8eTRlWlGhvstkzq1Kla0AtV3
YPJ0UksFe+ZI0KkZgr2revlyq3Jl77337++7r9Z+gPFttwXY+Asu8Nyqrg94
/Lh14YWeKQ8+mGtmU2Uqd9q8uXer1JONMgUQTseOHXv16uX0VsAxlClgXHKX
qWWLQdfJ05j7l+mzzz4bbNeVP/0fg0bKVF+wu2jRosGuvKnPUCT3qKboMm3c
uLH//CVKlFC32s81FFBGRoa9wkJ7RJoiuLw9EF2mn3zyif/8+jsVeZna30lq
N3z4cDVDf2mlkzZs2NCvX7+SJUuGeNQGyzTvIi/TI0eszp29kXXWWe6jVSNX
pYpnwblzA8+gz6dku9qR1+zZ8uTz3vvAgQEOIX71Ve8Mv/wSYCVvveW5VZ2y
Sedn1arucwsfPuwd997ruUlKXE0JfvVhj4BlKmRL1G5ZdUcHD1KmAMIaO3bs
22+/7fRWwDGUKWBc0pfpsWPH9G7BatWqHTx40L9MH3/8cV0iVcPROwTNlqkU
YrClJk+erObp1q2bmqLL9FKfF9g5dJluCXcMp/yS1A+8cuXKoR+4/dR8/vL2
QHSZBrz2WR7K1P90Rspzzz2nZhgouZRj2bJl+pqnWrFixdq1azdy5Ej9dEqk
Mt2501uOMho2jPqCoXrvZLD94/oUSf5vxx4/3n2lG3WrfBBsp+rMmd4t9HsT
tJt8wfUMaWne96tGMl56KcwDDFam4oUXvOu54w7KFEBYmzZtCvt3FkmMMgWM
S/oytXIaRF8HpHfv3v5lKp2opvTo0SPyezRSppmZmfo8unsDXizDsoYOHeqT
XaHLtEGDBurWr7/+OuAK7efN05eGCfiOy8jl7YEYL1NZJOAMffr0UTOot9PK
H4jy5curKaeddprk6ocffrhhwwZ9PuFGjRr5fHNPvUzT0tL2RMb3CxhJmf76
q3sPqW4r2Z7cF0uKyE03eRY/ebh1Lv/7n3f9tuvvuOkz7sooUSJAt2rynNRz
bt0aYAb5gqtbCxVyH2cbVZmGPi+TFbJM5VuvL+eqvgKUKQAgOMoUMK4glKnl
fnPbI3q/mK5UXaa6L2rUqBFw5UePHp03b97KlSv//PNPPdHUGZDq1KmjJi5e
vDjgUt26dVMzPCmv/3OELlN9PZR39EUkbX744QdJyGrVqt1www3yadu2bdXM
UwIen5kz/8KFCzdt2hTwzEJ2eXggxsu0du3aAWdo0aKFmkGdTEk6VGep/2kV
s7OzK1asqGZYtGiRmhjXZ0DascOSp66uqn79LL/TLEdEnwuoUaMAt0pvqlvL
lct1mO6IEd67PuMM+WaEuovt270zB7yk+6RJnlurVXN/2rWr+3xKAUfx4p45
ixXzTAn0hM8lRJkKeSboY3r1oEwBAIFQpoBxBaRMjx07dt555/m8+NdlumvX
Ln2ipOnTp/svrq/DUqlSJb3DUXeWjpewApapPr3SZZdd5r+IPBy9bUuWLFET
Q5epvtBYkyZN/G8dMWKEurV3zmlI7733XvVp/fr1/S8xI79F5SGrGQKe6dcu
Dw/EeJm6bNd50eTu1E2FChVSl0Z99NFH1ZTLL7/cf23265nq6w3FdZlKvumS
euaZsFsS1Jo13vUsX+57qz4xr33HtMyWkuKZXrOm9dtv4e9FvlZq/ksucZ+P
106CWl875pZbwqzH1BmQ7F58kTIFAESCMgWMKyBlauVcrkvvLVV0mVq2oz2r
VKnyc+6Txnz//fennXaaulXiQk/v2bOnmvjPf/4zwo0MWKYrV67UyeZzLc4/
//xTX+6kWrVqOopDl+mOHTv0WX3+8Y9/2G/atGmTuo6nmJtzlpvNmzfra2Q/
/PDDmbZzyGRnZ+tLlJYqVeqgvtRjEHl4ILEo03POOWf79u36pl27dulLwNx3
331q4gsvvKCmyBdK/ljYVyXPE/s5kT7++GM1/dTL9P333+8SmSuvvDLX/xKE
LlO9K1PtLf3776BD7+iUD154wXr2WfeQlds1bOhZVfXq7uu/aEOGeO9FHyQg
z5bGjT0Tixd3n0co2F3bH87Spd5V3X67d7qs7eGHvTeFu1RQTMpUtuGiiyhT
AEBYlClgXMEpUzFw4MBgZbp3795y5cqp6VJqgwcP/uSTT6ZOnSr5qS+Gcvrp
p9uvh9K/f381vUyZMtddd91t/pfA8BOwTC3bNU1E9+7d33vvvUWLFo0ePbpq
1ap6ur3dQpepZTsVrbjhhhtmzpwpDfXiiy+WLVtWTWzXrl3GyQM+9ds/RatW
rSS0FyxYIA2u368qnn766bCPLg8PJBZlKmrWrDly5Mj58+ePGzdOQlhNPO20
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
vb3m
     "], {{0, 502.5}, {623., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{623., 502.5},
   PlotRange->{{0, 623.}, {0, 502.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`vInitial = 
     6, $CellContext`\[CapitalTheta]Initial = 
     30, $CellContext`\[CapitalTheta]Final = 
     30, $CellContext`t = -3, $CellContext`ball = {{
        GrayLevel[1], 
        EdgeForm[{
          GrayLevel[0], 
          Thickness[Large]}], 
        Disk[{0, 0}, 3]}, {
        GrayLevel[0], 
        Polygon[{{-1.1, 0}, {-0.25, 1}, {1, 0.75}, {
          1.05, -0.7}, {-0.25, -1}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{-1.1, 0}, {-2.3, 0}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{-0.25, 1}, {-0.75, 2}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{1, 0.75}, {1.5, 1.5}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{1.05, -0.7}, {1.75, -1.5}}]}, {
        GrayLevel[0], 
        Thickness[Large], 
        Line[{{-0.25, -1}, {-0.5, -2}}]}, {
        GrayLevel[0], 
        Polygon[{{-2.85, 1}, {-2.3, 0}, {-2.85, -1}}]}, {
        GrayLevel[0], 
        Polygon[{{-0.5, 2.95}, {-0.75, 2}, {-1.8, 2.4}}]}, {
        GrayLevel[0], 
        Polygon[{{1, 2.85}, {1.5, 1.5}, {2.5, 1.7}}]}, {
        GrayLevel[0], 
        Polygon[{{2.85, -1}, {1.75, -1.5}, {1.5, -2.6}}]}, {
        GrayLevel[0], 
        Polygon[{{-2, -2.2}, {-0.5, -2}, {-0.5, -2.95}}]}}}},
 CellTags->"Snapshot",
 CellID->704566744,ExpressionUUID->"761a43ad-ee75-465a-91e0-244a94ad6312"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Fy+enp6u6oeEhEhgPHnypKowaNAgfYM9e/aU0XHjxqlRCX0VKlTwnExvueUW
/borKpn2799fja5YsUJGJV1+8803qqRfv35S4vAM3jvvvDM8PDzL7aDp0qWL
NCKNu+sb3CGZAgAAAD4xJ5m2bdtWm3rw4EF1JlGNZiOZOjh+/LhM7dGjhxr1
nEzvuecemfrJJ584P01IdbV27dr6wjlz5kih9laXGjVqSJbUVxg5cqRUiIiI
uGS/jleGFy1apE2Nj4+XEol4arRy5cqSNPXb8P333/eQTFNTU2Vq6dKlHcpV
MtVOE6ekpKjTuFoF1ZNXX31VK5HULCW7du3KcjtoJk+eLHVeeeUVdxXgDskU
AAAA8Ik5yXTEiBH6CqGhoU2bNlXD2UumK1asePLJJ1u0aFGvXr3ChQvL1O7d
u6tJnpOpZLGgoCCpUL58ecmD0o6kPzVJdbVPnz76+ps3b9bOciYkJKiTqnfq
qBIJmFJh9OjRLitIGr10I6Xef//9+vZl+3tIpidOnJCpzZo1cyhXyVT6o5U4
tLxmzRopWbBggVYiAVNWWcuhHraDZvny5VJh0qRJLvsGD0imAAAAgE/MSabP
PvusvkKBAgVuJpmqS2RtNlvz5s179OghmdT7ZHrJ/gwi6c8dd9yhUqRkW3VR
q+qqNK6v/M0332jJOjY2Vs3SU0eyZ4cOHTZu3CgVhgwZIlMbNGigr1CjRo0n
nnhCm91h1Q4dOuQhmSYmJsrUxo0bO5RnI5m2bNlS28iet4NGnc998cUX3W1J
uEMyBQAAAHwScMlUVahSpYqWyw4cOOBTMtX8/PPPbdu2tdx48q3q6j333KOv
o54U9O6776rRcuXK1axZ012Db731lv7SX2dlypSpXLmyvmTVqlWe7zMNDQ2t
Xr26Q6GvyVQiZ3Bw8JdffulyEQ7bQaNu4NXWHd4jmQIAAAA+yW3JVF3y6pDF
nBvUblMV0riXyfTChQt9+vQZO3ZsRkaGKlEXrKqnJ2lPQFq7dq2aKtGvRo0a
UrJ3715Voh4dvHLlSq3NefPmSU5Uj2OSLamyrfaQ2+PHj3ft2nXy5Mlq9MEH
H5QK7733nhpNSUlRl/t6SKa1atUqVqyYw92gviZTWWLx4sW1RwR73g6a8ePH
S+GWLVvc9Q3ukEwBAAAAn+S2ZCpKlSolJR07dly8eLFzg5LRypUrp9LcSy+9
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
IJkCAAAAPiGZ5jYSzWQjS8qTsBYTE3PkyJG4uDh3H59MkgpSTSrLLDKjX5Kp
BzndmdyJZAoAAAD4hGSaC2nh9MKFC7Gxsb/88svhw4dPnTqVlJT0m50MyKgU
yiSpINVMi6WXSKZeIJkCAAAAPiGZ5k5aOJVtHh8fHxMTIzl0//79++xkQEal
UCZJBTNjKbxBMgUAAAB8QjLNtVQ4TU9PT0lJkS2fkJAgOfSsnQzIqBTKJKlA
LM1tSKYAAACAT0imuVxGRobKp2lpaSk6MqoyqVTwdx/hiGQKAAAA+IRkGihU
RNUQSHMzkikAAADgE5IpYDiSKQAAAOATkilgOJIpAAAA4BOSKWA4kikAAADg
E5IpYDiSKQAAAOATkilgOJIpAAAA4BOSKWA4kikAAADgE5IpYDiSKQAAAOAT
kilgOJIpAAAA4BOSKWA4kikAAADgE5IpYDiSKQAAAOATkilgOJIpAAAA4BOS
KWA4kikAAADgE5IpYDiSKQAAAOATkilguFyVTC0AACBb/L0PB/IXkilgOJIp
AAB5gL/34UD+QjIFDJcLk6m/ewEAQCBh7wmYj2QKGI5kCgBAQGPvCZiPZAoY
jmQKAEBAY+8JmI9kChiOZAoAQEBj7wmYj2QKGI5kCgBAQGPvCZiPZAoYjmQK
AEBAY+8JmI9kChiOZAoAQEBj7wmYj2QKGI5kCgBAQGPvCZiPZAoYjmQKAEBA
Y+8JmI9kChiOZAoAQEBj7wmYj2QKGI5kCgBAQGPvCZiPZAoYjmQKAEBAY+8J
mI9kChiOZAoAQEBj7wmYj2QKGI5kCgBAQGPvCZiPZAoYjmQKAEBAY+8JmI9k
ChiOZAoAQEBj7wmYLyeS6QcffDBgwIC4uDgjjvGzbu2zzz4LDw8/e/asIYvL
DVavXi1rZMgGPH/+/MsvvywDBw4caN++ffny5e+++27ZYlKyZcuWrVu33vwi
4IxkCgBAQGPvCZgvJ5Jp9erV5f/yypUrjTjGz7q14cOHS4WDBw8asjhx+PDh
bdu2ycoa1aCvhg0bJmv0yy+/3GQ7sk2qVKkya9YsCbnlypXr37+/rNf06dML
Fy4ssTQqKqpMmTJz5841pM/QI5kCABDQ2HsC5suJZLp58+YZM2ZcvHjRiGP8
rFszPJk++eST0uAPP/xgVIO+MiSZJiYm1q5du3379pmZmR988IEEfBnQ2u/V
q5cMrFu3LigoaPXq1QZ0GjokUwAAAhp7T8B8eeA+U5KpMwmhnTt3rlSpkrok
eOHChW3bttWmzp49u0OHDmo4PDy8aNGikZGRN9ln6JFMAQAIaOw9AfPlRDId
N25cnTp1VCaSeCXDc+bMmTt3boMGDQoUKFCvXr3ly5c7zLJ06dJHH320RIkS
lStX7t69uz6U6Vu7ZM9c8+bNu++++woWLKiack6m0dHRY8aMkblKlizZrVu3
NWvWaJM89+f8+fMytXjx4tKg9ESGd+zY4XIdpU3pg9S85ZZbHnzwwZ07d2qT
Ro0aJTPKhu3UqZN0oGzZsr169Tp16pR+9r179w4YMKBChQqlSpXq06fPgQMH
ZBZZUzXVOZl6WCOX1q9fLy3Mnz9fje7bt89qtX799dcyHBUVVaNGDdkCalJS
UlJwcHC7du08NwifkEwBAAho7D0B8+VEMu3du7f8X1ZZ7Mcff5ThSpUqSZBs
27ZtzZo11f/0bdu2afUXLVokJRISH3jggdq1a8uwRFTpmHNrYsaMGTJaqFCh
hx566I477pDhKlWq6JNpYmJi3bp1paR+/frSoNSU5LVhwwY11XN/ZAUl96kG
W7VqJcOS6ZxXUHK0VAgLC2vfvn2jRo1kWFrTanbu3Fktonr16pL4ZL1Ua9rs
kg0lz0qh9F9aKFq0aLVq1WRUXWF7ySmZel4jl6Qpqb9582atROK8hFOJ20FB
QY8++mhaWpo26fbbb5dJp0+fzuJzhddIpgAABDT2noD5zEmmks60k4/Tp0+X
kgEDBqjRI0eOSCwqWbKk5DVV8sYbb0iF/v37O7cWGRkpwap06dIxMTFqqgqq
+mQ6ePBgGZVyNbp///5ixYoVL148PT3dm/5c8uJq3ieeeKJx48Y//fSTGp0/
f77Unzp1qhpVyVTSX0ZGhoyeO3dOOiwlx44dUxU6duwoozNnzlSjcXFxnpOp
5zVySSVfhxO1sbGxmzZtcr5wt0uXLlJ5xYoV7lqDr0imAAAENPaegPnMSab6
mxwlQkpJy5Yt1eiHH34oo6+88opWITMzc9WqVRs3bnRubcmSJTL86quv6itX
rVpVn0xr1KhRoUIFfX9GjhwpFSIiIrzpzyXf7zM9fvy41O/Ro4caVclUfxmw
OoOpvaJFguptt92mb0HW10My9bxGzlJTU2WqLMXL/k+ePNnhI8BNIpkCABDQ
2HsC5jMnmY4YMUJfITQ0tGnTpmpYhaxvv/3Wm9ZcVu7atauWTBMSEtQ3yZ06
quT999/3pj+XvEumK1askGotWrSoV69e4cKFpX737t3VJJVM4+PjtcqzZ8+W
kk2bNslwTEyMDD/88MP61qKiotwl0yzXyNmJEydkarNmzTz0X2/58uVSf9Kk
SV7WR5ZIpgAABDT2noD5zEmmzz77rL5CgQIFtCSonl/03XffedPakCFDnDOj
qqCSaWxsrPom6akjUa5Dhw7qJGyW/bnkRTIdNGiQVLDZbM2bN+/Ro4dkUudk
KolSq//iiy9qyVS2YVBQUJMmTfQNykfgLplmuUbOEhMTpX7jxo3d9d+BJFyp
L530sj6yRDIFACCgsfcEzOf3ZPrOO+9IhcWLF+sr/Prrr9o5R31rr7/+ugwv
WbJEX7l+/fr6q3nLlStXs2ZNd327+WQqfbPYH7ukZc8DBw54n0xFnTp1ChYs
qN1XKyZMmODhal7Pa+RSaGho9erVvays7pN99913fVoEPCCZAgAQ0Nh7Aubz
ezKNiIiQCtWqVTt//rwq2bx5s/56V31ru3btkuHatWtLT9TUTz/9VH11aMlU
ZpTRlStXaoubN2+epEX1wCJvkumIESOkztKlS12unWpBf1+qtOZTMlUX99ar
V2/t2rV79+5Vj2DykEw9r5FLtWrVKlasWGZmprsKeuPHj5f2t2zZ4k1leINk
CgBAQGPvCZjP78lUhIeHS53bb79dItKgQYNKlCgRFBSkPS/I4a0xjz/+uIyq
t3/27du3UKFC6vWjWjKVgVKlSski+vTpM2vWLPUg3Lp16+qfzeu5PwsXLpQ6
FStWlGqHDx92WDuJe+XKlVNB8qWXXpLYqN4L430yFdI3yw2yshMnTvSQTD2v
kUtjxoyROi5feeOsefPmYWFh+vfI4CaRTAEACGjsPQHz5UQylcAo/5fV+zGl
fRkePXq0vkLBggX1z+eRrCfRrEaNGupLQAb0L+vUtyaSk5MHDhyo3sMSGhr6
wgsvqDtVDx06pM2yc+fONm3ayFKkPDg4uGfPnidPnlSTvOnPxYsXJQ5L41LT
5WtDJd6qV6mK6tWrr1u3zqJ7Nq96IlNiYqJWXwKs5e9vFxXS4ddff/2VV16R
LqnHIslC1SS1RvpQ7GGNXFI3rs6ZM8dDHUUStNVqHTRoUJY14T2SKQAAAY29
J2C+nEim2Xbq1Cn9qUYPMjIyoqKiUlNTPdRJSUmROtk+FSiNX7hwwUOFs2fP
xsbGZqPlTz75RLKq9kpWMXPmTPn2mz17tucZfVqj5557rkqVKklJSZ6rzZgx
o0KFCnFxcd60CS+RTAEACGjsPQHz5apkmk+o5zjVqVPntddeW7FixbBhw4oV
K2az2eSzMHApEmObNGnicN2yg4iIiJIlS3KHqeFIpgAABDT2noD5SKbmS01N
HTduXHBwsHaradmyZbX7ag0k4bR///6jRo1yOXXXrl0NGjTYs2eP4csFyRQA
gIDG3hMwH8nUX86dO7dz587PP//8yJEjXj5EN3u2bdvmsjwyMvLMmTM5t9z8
jGQKAEBAY+8JmI9kChiOZAoAQEBj7wmYj2QKGI5kCgBAQGPvCZiPZAoYjmQK
AEBAY+8JmI9kChiOZAoAQEBj7wmYj2QKGI5kCgBAQGPvCZiPZAoYjmQKAEBA
Y+8JmI9kChiOZAoAQEBj7wmYj2QKGI5kCgBAQGPvCZiPZAoYjmQKAEBAY+8J
mC+PJdPMGzIyMv5rl6ajSmSSVs3f/UXeRDIFACCgsfcEzJeXkqk+k6ampl68
eDExMfH8+fPxdjIgo1Iok/T51N+9Rh5EMgUAIKCx9wTMl2eSqRZL09LSJH5K
Dk1ISJAOS+EVOxmQUSmUSVJBqhFOkUNIpgAABDT2noD58kYy1WJpamqqOk+a
kpLibpVlkjp/KpUJp7lEenp6ZGRkXFycvztiDJIpAAABjb0nYL48k0zV2VIV
S2XY81pLBRVOtTOn/l6D/Ovs2bMdO3YsWLCg2gVUrlx5xYoV7irPmjVLVVu2
bJmZnfQVyTTfkq+UI0eO7Nu371s7GZBRKfR3vwAAvmHvCZgvDyRTddIzPT1d
uudNLFVUOJVZZEZOm/pkk3c223luKjk5uWrVqvLN37lz57lz54aHh4eFhcno
qlWrnCvv378/NDRU7SmWLl2aMytnDJJp/nH58uWdO3dOmzatbdu2FStWtLgh
k6SCVJPKMou/ew0AyAJ7T8B8eSOZqut44+LiPFzE60wqyyzaNb3+Xo+AYWAy
/eijj+Rrf/z48VrJ1q1bpaRbt24ONeUXr3HjxiEhISNGjCCZ+oR9a064du2a
ZMzBgwcXK1bMXRp1R2aRGWV2acTf6wEAcI29J2C+vJFM09PTL1y4EB8f7+vq
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
dtpUuufvLQQA+Qh7T8B8eTKZalRE1RBIYQ6SaSAaPHiwelNMlhfrnp9ok1Dp
ocKa3tbUrB6UdCrctunxrG9Zlc6oByFJ9/y9hQAgH2HvCZgvbydTwC9IpgHn
8uXLxYoVkw3VqkpQlmlRftb2tiZMdJs9/9XTmjE1i2S6baC3z++VLknHpHvS
SX9vJwDIL9h7AuYjmQKGI5kGHO1S3sWPZHEpr/r5eYTt30PdnvH85DHrb9M9
pc5L02xSx+GtNO5+FnXigl4AMBt7T8B8JFPAcCTTgDNt2jS1oY6N9iotZk67
/m5Td1M/6m696jF1Ro22/eA+2Dr8SJdU36ST/t5OAJBfsPcEzEcyBQxHMg04
bdu2la10azGLl2lRXdDr7hG+S7tar83ylEy3P+Htpbzq59brFxpbpJP+3k4A
kF+w9wTMRzIFDEcyDTgVK1aUrdSpllc3maqffU9aD450nS4/7JrF+dAVPayX
pvmQTKVj0j3ppL+3EwDkF+w9AfORTAHDkUwDS1pamtpK4c29uslUu8j2+yGu
E+hSj8nU85XALn+kY6qH0lV/by0AyBfYewLmI5kChiOZBpYjR46orfR2Jx+S
acJE25duXvuyrJunq3nPTbB91d+3ZPpWx7+SqXTV31sLAPIF9p6A+UimgOFI
poFl3759ait93N2HwPjfqbZVPd2dMw36fZrlyoxgl/n0+HO2XYN9S6bSMdVD
6aq/txYA5AvsPQHzkUwBw5FMA8u3336rttIXfX0IjL9Nv/7mF+dySaNLu1gk
maof53B69Fnb/w3zLZlKx1QPpav+3loAkC+w9wTMRzIFDEcyDSxaMh3VJOhf
Pa0SA78eYN012Prjk9afR9gkSJ54znZmnC1hoi1lsu3SNNvvM2wqby7r5iJg
/jE9aHnX/yVT55Onh0bZIp66PuOVmbbL023/nWq7+ILt3ATb6XBb9BibTI18
xrZ7mHX7E9ZNj1vX9rZK/pWOkUwBwEzsPQHzkUwBw5FMA4t2Ne9H3YIzptr+
84Lt7HhbzBjbLyOvR8j/G2bdOdi6daD1S3tOXNXT+nF369Ku1vceDX66cdCK
HtbVvayf97n+I5F2fV/rF32Cn73XsqGP5Yvels97W9b1sqzpef1nbe9gmV2S
7/x2wZNbBX/Y1bq8m/XTx6yf9bo+4+b+1m8GWb8fYt073CrJ9MiztpNjbeft
Wfi36Tau5gUAk7H3BMxHMgUMRzINLNoTkN7q6MMTkP471Sah0uWkZV2D/5ge
pD9tqj95GjvW5/tMeQISAJiMvSdgPpIpYDiSaWDJ3ltj4ifYNrt5xK56Nu/V
mVbncCqJ9fwE68Z+vDUGAHI19p6A+UimgOFIpgGnYsWKspU61QryPi0ecf8g
I+19ppJPnU+e/neyZXnXIA+vlXH+6Vjz+n2m0kl/bycAyC/YewLmI5kChiOZ
Bpy2bdvKVrq1mMX7tPjvodajz7pOlx92/VtidT55+ml3S/ILLh7b6+5HOiak
k/7eTgCQX7D3BMxHMgUMRzINONOmTVMb6thob9Piv3pa06a4rry0q9UhdTqc
PN0xyHLwmb/uPM1yQdIl1TfppL+3EwDkF+w9AfORTAHDkUwDzs6dO9WGWtTJ
q1tNUyfbVrt5/JH8fNTdemWmi9CqnTyNGmXZ2v9/d556PnkqXVJ9k076ezsB
QH7B3hMwH8kUMBzJNOBcvny5WLHrl8y2quLVraYRT1nVO0ld/nz6mPXydNdh
U508zZhsWdrFkj7pf9f3Smh111rLKtdvMpXuSSf9vZ2uS0tLGzdu3IQJE65d
u+aywpo1a6TC8uXLTe4YABiIvSdgPpIpYDiSaSAaPHiwbCgJgSfHZnFBr6TL
f/W0pkx2W21VT2va5GB1PtRlBcmh2wdaDjzt+Nhe55On0pkg+yco3fP3FvrL
lStXChUqJF2Kjo52nnrhwoWwsDCZunHjRvP75s6///3vBQsWjBw58pVXXjlx
4kROLELWV/J4UlJSTjSea61du1bWetu2bS6npqamjh8/XirEx8cbu9yvvvpK
mj148GCWNSMiIubOnTtixIh58+bJAY+x3VAuX74snVm1alVONA4/Yu8JmI9k
ChiOZBqItAt6x9+XxQW9khbdvS9G/azpbU1+wVMylZ9zE6yrezi+U8b55Kl0
JhdeytukSRPpkstD8dGjR18/9dyqlfm9ckn+P6q/OWgKFCjw0UcfGb6g5s2b
lyxZUmK74S3nZnPmzJFN2q9fP5dTJ02aJFPvvvtud6fXs+fkyZPqrx+rV6/2
XFMCY1BQkPbRy7AkZQN7onzzzTfS+MKFCw1vGf7F3hMwH8kUMBzJNBDJwXP9
+vVlWxUNtfznBU+nTdf1sZ4d76nCF32t/3n++kOQPN9Auunx4GPPOr5TRn/y
VLpRJOT6xycdM/bY/iY9/fTT0quJEyc6lB8/fjwk5HqP9+3b55eOOZNsIv2p
VKnSp59++t1330mGktGCBQtKujFwKcnJyVartVevXga2GRC2bNki2/OOO+5w
nnT27Fl1bn3Hjh0GLvHq1astW7ZUX2uek+nnn3+u/hAxbdq0PXv2TJ8+XT53
KVmzZo2B/fnzxu/YkSNHjG0WfsfeEzAfyRQwHMk0QK1cuTLL06anwm0b+nk6
YSo/Xz5uTZiY9TN+48bbJOS6fOepOnmqnTCVjvl72/zNe++9J7166KGHHMp7
9+4t5fKvX3rlLCkpqWjRojabTf//sWnTptLJ119/3cAFSdiRNj/88EMD2wwI
586dkxUPDg6WYwOHSUOHDpVJHTt2NHaJL7/8snYO1HMyHThwoNQZNGiQVjJk
yBAp6du3r7FdqlevXuXKlY1tE7kBe0/AfCRTwHAk0wB15cqVOnXqyOYKCbYc
HuUiWv4xw7aqZ9ap8+sB1vgJXr19ZttA68GR10+tXpkR7JBMI5+y2OzBVLqU
264R/fHHH6VjpUuXdigMCgoKDQ11uJHzt99+M7d3//Paa69JP5955hl94dGj
R7dt23b27Fnn+r/88svw4cO//PLLHTt2DBs27O67737iiSe2bNmiJo0ePbpx
48bt2rVbsmSJwylsqSwLUm1GR0dLzdatWzdq1Khfv36LFy++evVqTq6ln1Wo
UEHW3eEb79ChQ1Y7GTBwWXLEEhISUqtWrc6dO2eZTHv16iV1pk6dqpUsWLBA
Sh5++GGX9SXzPvXUU2lpaXPmzHnwwQfvv//+mTNnJicny8f39ttvP/roo/L7
MHjwYIez7WfOnJE25dfmT/v53KVLl3br1u3OO+986KGHxowZw4nUgMbeEzAf
yRQwHMk0cG3fvl1tsfsqBzm/+eX/PW37fkgWJ0zl59tB1lPhXiXTtCm2FT2s
mdOuV9afPL00xdLstr9ODM2aNcvfW8WR/JLbbNffsnr69GmtUI7kpUSOxtXo
5cuXX3nllSZNmgQHB0u4njt3rocGIyIiFrl38eLF7PVTMql06YsvvkhKSlq/
fv2LL74oWUZ2ZO7qSyZV16ZKpNJOzEkUWrhwYYkSJfQ3qzqccr3tttvq168v
AzExMWXKlFG3NKp7IUWbNm2y1/+A0LFjR1nHt956S1/4yCOPSOHQoUMNXFBG
Rkbt2rXlF2/fvn19+/bNMpkuW7ZM6lSpUuXXX3+V0fj4ePlkpeSNN95wWV+C
p0y955579B+0xNjHH39cX3LrrbdKT7S5PvjgAylcu3atDD/33HOqTtGiRdWv
UKFChdRfNhCI2HsC5iOZAoYjmQY0dSuimNzqb9f0Jj5vW3kjRXr+kfQaPcar
ZCo/kc/Yvh7wV9rVTp4+f5/+WNjSv3//3PbQV3VProQ+Nbp582YZLV68uJb7
1FF6s2bNwsPD69ata3F1X6pm6tSpFvd++umn7HXy0UcfldnffvvtkiVLaq2V
K1fO3bNkVTK12C9UPnHixMmTJyWYqJKmTZtu3bpV9oBjx46V0Xr16mlzHTp0
SErUo3XULYfq87p27dqePXsKFy4sJT/88EP2ViH3mzJliuXvz47etWuXlMiK
x8XFuZxFtszixYvd/SHCXZRTf2eYMWOGDHuTTOWrWM0SHBzcsGFDFRXlk01O
TnZZXyVTSb4rV65MT09fs2aNenqSzDhnzpxz5879/PPPt9xyi+Xvd6r26NFD
Zkmxk5oFChTYvXv31atX5RdAPXrrgQceyGoTIpdi7wmYj2QKGI5kGtDkkLJK
lSoW+xtk1ve1atfxftbLetq7M6H7nrT+MtLbZCpp9MvHrfqLh7/oG+yczipW
rCjpz9/b5n/UTXzTp0//034Rowqq2onRHTt2yFG9HJOrC1kzMzPvuusuOW4/
duyYy9bk/8sr7l24cCF7nWzUqJHaelWrVpXI8/HHH7du3VolaJfvMVHJtGDB
gtpZ2nXr1qkWtGs4JW2p2KXN9eqrr0rJt99+K8N9+vSR4RdeeEGbumrVqtdf
f93diucBa9eulVWW6KdGJXXee++9lr9fRuvgypUrHv4Q0blzZ+dZNm3aZLGf
0Pzjjz/+9C6ZyuHKqFGjHBp/++233T1MTCVT/d9PGjRoICVPPPGEVjJ8+HAp
mT9/vrYiJUqUaNGihQxHRUXJpDJlypw5c0ZNlUOmmTNnrlixwkMnkZux9wTM
RzIFDEcyDXR79uxRz5gtZLP8MPR6OP1uiFUNeHkaNOLJLN4ao/9JnXz9bGzS
pOvhVJZS6Pp1stdP9OivKVWGDBmSmprq781znbqFU4WIpUuXWuzPv5VffjV1
xIgRFt0ZVbFkyRIpmTJlipmdVHcNly1bVjuTK0m5WrVqFjcncFUylbm0kpiY
GCm55ZZbtBJpQZ1H00oeeughCaqXL1/+88YVpKJmzZpjxozZunWrH2+zNUds
bKzFfs2z2gKSFtU2T0tLczeLZMMFCxa4+0PE+vXrHeonJCRIg7KRJf2pEm+S
qfrjiXyaO3fuTE5Oln/r1aun/hO5rK+Sqb5NdR3vokWLtJLp06dLyYsvvqhG
5XteP1q1alX1l41OnTpJBDb2+c8wH3tPwHwkU8BwJNM8YPny5epavuIFLMu7
BW/oZ3W+7dTdz+FRtv8b6kMylZ/T4defrfTtoGBZnMV+l6J04MCBAw0bNnQI
pxIA3V2MaiZ1xWaVKlUkealTzPqXhLZq1UpKJLNoJRL2paRnz54uW5NGUtzL
9htzHnzwQVno888/ry+UUSns0KGDc32VTPWTTpw4oWKmvpp8OloyzcjIKFCg
gCQRbepLL72k3paiFCtWTOJMHn4Iknw66ibcn3766ffff69Ro4ZDmrt5jz32
mLTZvXv3bTeoc9+TJk2SYZcXuktPwsLCQkNDjx8/rhWePn26SJEikhz1N4pq
VDLdu3evVjJgwAAp0Z/0nDVrlj6KqqAaERGhRmVZDv9hGzdubOwzoGAm9p6A
+UimgOFIpnnD/Pnz1dYLDbZ81svte2Scf2LG2HYNzvp9pg4/b3cKDr1xGa92
uaAcYE+bNk09bkjv6aefTk9P9+PGkcCokru6lvXOO+/Uhy91fK4/a3bs2DEp
ad++vcvWZB0t7kVGRmavk4MGDZLZZ86cqS/86quvpLB58+bO9VUy1V9NmmUy
Va05PP8nNTV1zZo1w4YNu/XWW9UqSFzN3ioEBPXwq2XLlqnXCdWqVUtdc+uB
bCJ3f4jIzMx0qKzSrjsu/1Dz3XffWf5+O7Ci/mbi8sJ4lUz1NzVnmUzvvffe
W265xeEvJxJF582bJ9tE/beVgOy8RggI7D0B85FMAcORTPMMSYgqfwXZH4jk
5WnTM+Ns3wzy9tJf+ZFmpfEg+ycli9NiqUa+qNWFiHrVqlXbuXOnP7bKX6pX
r+4uHahHHumP2M+ePWtx/5Tad9555073sn2T5ty5c2WhjzzyiL5QUqQUhoeH
O9fPRjIdPXq0VIiOjlaj77///tixY7WLh2ULjBw50l0QzjPUU6Gee+65ypUr
y8C6des81/d8n2mXLl0c6ksSfPbvbr/9dqnZrl07GXb563HgwAGpUKJECYez
1erW0e3btzvP4msylU85ODi4X79+apIEUinXXzkQGxtbpEgRd9kZuR97T8B8
JFPAcCTTvGT58uXqnlOL/VUyLt9z6vBz4Xnbhn7eJlNpUJpV7cuCZHEuu3H5
8uXnn3/e4c5TiUiSjFxemmiCHj16qG5IQHCY1LJlSylPSUnRSg4fPiwljz76
qJk9lH1W0aJFZStpWUlKVHrS3wOryUYyrV27tiR0bZJ65pL+CUgzZsyQksce
e8zA9cptPv74Y+130psMLmnxrrvucveHCMm5Wbbg8j7Tn3/++d///ve5c+f+
tF9soB7IPHv2bK3Cv/71L4v9TS4u74H1NZmq1mTd1aSNGzda7O+L0R7YJb//
xYsXl8JffvklyzVCLsTeEzAfyRQwHMk0j9mzZ4+6lfJ6eAy2jL8v+D8veMqn
6VNsq3tlnUylEWkq5MYVvLIIWVCWPZEo5HCOSXKTHJCbsyn05syZY7E/qenA
gQMOk3r37m3RPc9WSA+lZODAgaZ20X7Xpyy3QIECkg0nTJhQqVIlGe3Tp4/L
e1d9TaaygjL1mWee0SZ98skn6i8G9957b3h4eNu2bUNCQmTUZRDOM9R7c5Td
u3ebsESXyVRFS+1Vsyo5WuzvbZkyZUqvXr3U9Q+LFy922aavyXTQoEHS4Pnz
59Wk3377TV0qULp06f79+w8fPlz9DaRx48bGrjtMw94TMF8uSabSsuzEP/74
45xo/GZ89tln0rGzZ8/6Zemy25Wlx8XF3WQ7sut8+eWX1bAcQ7Zv3758+fKy
F5a1k5ItW7Zs3br1ZvsKHZJp3pOUlKS95/T6mZHQ6/n05FjX+fTKTNuybp6S
qcwos0sjGmncyzeWZmZmjh07VvKgPpzK6Pjx4y/deDSu36nXeupf+yh5QUoW
LFhgfmeWL1+uXkOpUsOQIUPcPS9XvZW1a9euWol68GytWrX01SSW2my2P+0X
IcvUDRs26Kd+8MEHLVq00D6gqlWrOlTIe65cuaIe+tS9e3dzlqj+M8ouTF8o
GVAK33zzTa1Etrx6Xq5SsWJFiavu2rznnnukjv7PLOrpvitXrtRKJJNa7HcN
X7t2TXajd911l76FkydPSiAtW7asWpxsE0nQ/r0fHDeDvSdgvlySTE+dOiX/
/Xv37p0Tjd8M9fKygwcP+mXpw4YNs9gvBLqZRqTzVapUmTVrlgxLyC1Xrlz/
/v23bds2ffr0woULSyyNiooqU6bM3LlzDeo1SKZ51vbt29WLSJQgi6VVlaDF
jwQfG+0YUT/u7iKZSjWpLLME6UKlNOjyrjfPvv/+e+fHwkhT+/bty4kV99X+
/fulPw8//LAa/eOPPxo1ahQSEqK99cN8spc5dOiQsc/IlS/SOXPmuIwe58+f
37Nnj/ZeVPjRuXPnIiIiZPdnYJvyPS8f/VdffeU8SX7Hfvrpp8OHD0tgN3CJ
MB97T8B8JFPPAj2ZJiYm1q5du3379pmZmTL6wQcfVK9eXQ2r9nv16iUD69at
CwoKWr16tSHdBsk0D5OjzZUrV9avX98hFd5azNKpVlB48+C3OwVLLB3XPGhN
T8uyrpa3OgZLoUySCg6kEWkq24ev8m08cuTIoL/F3Ovv2Zw8eXJueIemel5r
jx495GvnoYcekuHp06f7u1MA4C32noD5SKaeBXQylQTauXPnSpUqadcDL1y4
sG3btlqF2bNnd+jQQQ2Hh4cXLVo0MjLyJvuMSyTTfODatWs7d+4cPHhwsWJO
gTMrMovMKLNn+zWdetu3b9fugdU0aNBAf7ucX8j+4uGHH1bBuXz58hKiL1++
7N8uAYD32HsC5suJZDpq1Kg6ders2LGjTZs2hQoVmjlzpiqPjo4eM2aMTCpZ
smS3bt3WrFmjzaIl088++6xhw4YFCxZs0qSJ5CaHxR07dkwal4MuyVAPPvjg
/PnztdN/ol+/fnfeeae+/ssvvyyL05Kd6piscqdOnaQPZcuW7dWrlyxaqy+t
zZs377777pMO1KtXb/ny5VkmU1kLqV+8ePFbbrlFuiRHmw7bwcPixN69ewcM
GFChQoVSpUr16dPnwIEDMsu4cePUVOdk6mEbOlu/fr3F/mJErWTfvn1Wq/Xr
r7+W4aioqBo1asyZM0dNSkpKCg4ObteunYcG4SWSaf4haUv+10+bNq1t27YV
K1Z0l0ZlklSQalLZ8ICWlpamvqn0QkJC5Ls3y9dK5rTU1FT5BjP2GloAMAF7
T8B8OZFMO3fuLP+Xy5UrV6JEiVatWi1ZsuSS/bJS9di6+vXrP/DAA5JYJQdt
2LBBzaKSaeXKlYOCgiQutW/fXr0FbOzYsVqz8fHx6qGUNWvWfPjhh9XD2PUV
mjVrFhoaqu/Js88+K3Ukjuk7VqlSperVq0sEK1CggIxKD7X66vH+0reHHnro
jjvusNiflukhmS5dutRif4+2dFi9LEAirfeLk2yonsshy5IWJG5Xq1ZNRtUV
tpeckqnnbehM2rHYXymuL5ToLeFUbepHH31Ujmm1SbfffrtMOn36tLsG4SWS
ab4l/6GOHDkiXwLf2smAjLp8RYXhtmzZcuuttzrk07vuuku+vkxYOgDkMew9
AfPlXDKV8JiSkqIVDh48WAol+qnR/fv3FytWTNJlenr6pRvJVJ80f/31V3WU
9f3336uS/v37y+iECRPU6IULF2rVqiUlcjymSrxMphLHMjIyZPTcuXOlS5eW
kmPHjsloZGSkhDUpiYmJUfVVUPWQTJ944onGjRv/9NNPanT+/PlSeerUqd4s
TnTs2FFGtXPKcXFxnpOp523oTMVeh7O0IjY2dtOmTc4X7nbp0sVif0K+y9bg
PZIp/CI5OXnQoEEO4VS+FV9++WUexgIAPmHvCZgv55KpQ7M1atSoUKGCvmTk
yJFSLSIi4tKNZCpJSt/+kiVLpPCVV15Ro5LaHCqoq1W1JOhlMt2xY4dWQZ1V
VO9MUYt79dVXtamZmZnqgfNe3md6/Phxi/2JH94sTkhQve222/QtrFq1ykMy
9bwNHaSmplrsr0jwpufK5MmT9Rsc2UYyhR9t3LixfPnyDvn03nvvPXr0qL+7
BgABg70nYL6cS6YJCQlaiQyr/+B36qiS999//9KNZNqmTRt9Oz/++KMU9u/f
/5L9hKMM33///foK6k1znTp1UqNeJtP4+HitwuzZs6Vk06ZNl26kvG+//Vbf
QteuXT0n0xUrVjz55JMtWrSoV69e4cKFLfYXunmzuJiYGHVmWd9aVFSUu2Sa
5TZ0oF4QL9vEXc+dLV++XGaZNGmS97PAJZIp/OvixYt9+/Z1CKcFCxZcsGAB
t3wCgDfYewLmMyeZqggpeupIsOrQocPGjRsv3UimDjFN8qCaRYZPnjwpw9qD
ZBUJfVKoPWzWy2Sq75h6a7aKikOGDJHhH374Qd9C7969PSRTdeGczWZr3rx5
jx49JJM6J1N3i5ONGRQU1KRJE32D8lm4S6ZZbkMHiYmJUrlx48Yue+6SJFyZ
RTrp/SxwiWSK3GDt2rXqkn69++67LyYmxt9dA4Dcjr0nYD5zkqkoV65czZo1
3c2iPQFJX6gubZ09e7YarVChgkOFb775RipoT7Jt0aKF5e+3Vfbp08f7ZPr6
66/LsHpek0a9tdBlMv31118t9kckaQ0eOHDA+2Qq6tSpU7BgwaioKK3ChAkT
3CXTS1ltQ2eS06tXr+59fXWf7Lvvvuv9LHCJZAr5dgoLC5NvA/92IzEx8bHH
HnMIp4ULF37zzTcNeWcNAORV7D0B85mWTB9++GEpXLlypVYyb948qakeH6Q9
Aemdd95RU1NTU9XTbr/88ktV0qlTJ31yzMjIaNOmjb5N9YCgjz76SI3GxcWV
KlXK+2S6a9cuGa5du7asppr66aefql65TKbqYuOWLVtqJeoUrffJVF3cW69e
vbVr1+7du3f69Olqce6Sqedt6KxWrVrFihXTv1jHs/Hjx1t0T5RCtpFMIf+P
1GUe/u7IdfKlob4M9e6///6TJ0/6u2sAkEux9wTMZ1oylXAnh0YFChTo06fP
rFmz1GNp69atq382b/HixUNDQ3v27DlhwoSGDRta7A+21YKVBLTSpUurCs8/
//y9994rFR555BGtS5JJLfZ3vvTv33/KlCmVK1eWyt4nU/H444/LqHqjaN++
faUp9W4al8lUOlauXDkVJF966SWJjeq9MN4n00s3zuoqQUFBEydO9JBMPW9D
Z2PGjNGvfpaaN28eFhamf48Msodkij/++CM1NTUjI8PfHfnLuXPn5OvUIZwW
LVr03Xff9XfXACA3Yu8JmC8nkql6alBiYqJD+c6dO9u0aVOwYEGZGhwcLAHz
5MmTatLp06elUMLg7NmzJQ/KcIkSJXr37u3QyPfff9+2bVtVoWLFioMGDUpK
StJXmDRpksqSFvszcp966imL7tG1zh2TRGnRvfEzOTl54MCB6t0ukmpfeOEF
9f76Q4cOuVzTH3/8Ub32VFSvXn3dunUW3bN5s1ycIo2//vrrr7zyinwW6rFI
suJqklr64cOHvdmGztRdq3PmzHFXQU8StNVqlU3qTWV4RjJdu3btuHHjtm3b
5nKqRLbx48dLhfj4eJM7ls8tX75c+4bUPPTQQ7/++qu/uwYAuQvJFDBfTiRT
z1JSUqKiojycmEtPT5cKHhYkh7XHjx93NzUzM1Nmv3DhQrZ7mJGRIS3IUrys
f/bs2djY2Gws6JNPPpGsqr0+VcycOdOiu7XWnSy3oea5556rUqWKQ353acaM
GRUqVIiLi8uyJrJEMp0zZ44stF+/fi6nTpo0Sabefffd3OpovjNnzrRv394h
nEpcXbp0qb+7BiBXk6OOcePGTZgwwd1X95o1a6TC8uXLTe5YDiGZAuYzP5lC
o565VKdOnddee23FihXDhg0rVqyYzWaTD8WoRUiGbdKkybPPPuu5WkRERMmS
JbnD1CgkU3WX5R133OE86ezZs+qyhx07dpjcK2iWLFki3zYO+bRTp06cxQbg
zpUrV9S3d3R0tPPUCxcuhIWFydSNGzea37ecQDIFzEcy9aPU1NRx48YFBwdr
R4Zly5bdunWrsUuRcNq/f/9Ro0a5q7Br164GDRrs2bPH2OXmZyRT9QJi+d2W
bwyHSUOHDpVJHTt2NLlLcHDq1Km2bds6hNOSJUt++umn/u4agFyqSZMm8kWx
atUq50mjR4+WSa1atTK/VzmEZAqYj2Tqd3IMv3Pnzs8///zIkSPeP0fXV9u2
bXM3KTIy8syZMzm03PyJZCoqVKggy3XYDocOHbLayYD5XYKDa9euvf3220WK
FHHIp926dUtISPB37wC4cPjwYT8u/emnn5aviIkTJzqUHz9+PCQkxGJ/6KJf
OpYTSKaA+UimgOFIpkI9O/qtt97SFz7yyCNSOHToUPP7Y7Jc8j5Tb8ghZcuW
LR3CaZkyZT777DN/dw3AX65du7Zp06YHHnhA/nvK14u/uvHee+9Z7I9Ncyjv
3bu3xf78Rr/0KoeQTAHzkUwBw5FMxZQpU2S5gwcP1krUK4MLFy4cFxdn7LLk
mG3x4sWL3NiyZYuxi/NGrnqfaZauXr26cOFCdQeZnhxnyte+v3sH5GuZmZnv
vPNO7dq1tf+YfrwbQr3JvXTp0g6FQUFBoaGhJ06c8FfHcgLJFDAfyRQwHMn0
T/uLY2S5DRs2VKMSHtU7iKdOnWr4sq5cuWJxr3PnzoYvMUu57X2m3oiKimra
tKnD1itXrtz69ev93TUgP4qPj588ebJ6k52exMCjR4/6pUuyg7PZbNKH06dP
a4X333+/lIwZMyYbDUZERLj7o6K4ePGicX33GckUMB/JFDAcyVTExsbKckNC
Qi5fviyjq1evttif8ZWWlmb4siT2Lliw4BU3CFbek4w/d+7cAgUKOBwJDxgw
IDk52d+9A/KLn376Sf7TqTs3nbVu3Voq+Ktv9evXlz588cUXanTz5s0W+5un
snd9xdSpUz38XdGPq/knyRTwB5IpYDiS6Z/2tFiiRAl1aPH777/XqFFDhhct
WqRVWLNmzb333qu/1Pbq1avdunVr1qxZUlKS+R2G5tChQ3fffbfDIWLFihW/
+uorf3cNyMvka3Pjxo3qFKQzCaplypQpVKiQfKP6sZMDBw6UzkyfPv1P+5e2
Cqpz587NXmuyr3T3R0Vx4cIFQ/vuG5IpYD6SKWA4kqmijq+WLVumHppRq1at
P/74Q5u6adMmKZw9e7ZW8sknn1iy+3yk1NTUFDcyMzMNWJl8Rj4p+WicT9nI
pyOb2t+9A/IaObhatGhRzZo1XWbSUqVKTZo0KTY2Vl3PsHPnTj929bXXXrPc
uEti6dKlMlypUiXZ8WkV2rVr5/Dwty+//PLee+9dsGCB2X29OSRTwHwkU8Bw
JFNl7NixsujnnnuucuXKMrBu3Tr91BMnTljsl4mq0d9++61q1aoOz0e6cuXK
1atXs1yQ5/tMu3TpYux65R8HDhz4xz/+4bA95dP046NBgTzm7NmzL7zwQsmS
JV1+fdWqVWvx4sXqjvXdu3erQqnvxw6rZ9lVqVJFvrTlXxn+6KOP9BUaN24c
GhoqX8tq9I8//qhdu7aUHD9+3Lk1acTdHxXFtWvXzFglN0imgPlIpoDhSKbK
xx9/rB1fNW/e3GGqRM5ChQo1bdpUjb7++usW3fOR9u7dO3jw4FKlSoWFhXXo
0CEmJsbDgqSpu+666043JCDnxNrlE7///rt8KOqZJ5qgoKBnnnkmPT3d370D
ApgcgD3++OPubiZt27btl19+qY9mCxcuVJPk686P3ZbAKN8A0o1XX31V/pXv
WIe/Hw4YMEDKtef0qmtm3D0fadq0aR7+rhgZGZnj6+MeyRQwH8kUMBzJVDl0
6JB2gLF7927nCnJIo94+kJqaWqZMGe35SKdOnSpevHiRIkWefvppOciRWFSu
XLnY2FizV+AmBND7TL0RERFRt25dh4PGatWq7dq1y99dAwKM5Lj169e3atXK
ZRYLDQ0dOHDggQMHnGfs2bOn9qehhIQE83uuqV69utbhbdu2OUz95z//KeVf
f/21DGdkZFSsWLFEiRLuno/0zjvvuPujojh27FiOr4x7JFPAfHksmWbeIF+G
/7VL01ElMkmr5u/+Im8imSpXrlxRr8h0F9D69esnU1NSUtTjGRcvXqzKW7du
LaNa6vnXv/5l0V33GxAC632m3rh8+fLEiRODg4P1R9FyhDxmzBju5AW8IUcg
b731lnocnLPSpUtPmTLl3Llz7ma/7bbbtMqffPKJmT130KNHD9WNdu3aOU+V
3C2TZE1l+OWXX5bhefPmmd5HA5BMAfPlpWSqz6SpqakXL15MTEw8f/58vJ0M
yKgUyiR9PvV3r5EHkUy99OKLL6o/rRcpUqR27drq+Ujy/9Riv0JMq3b16lU5
JLNareoFNAEhEN9n6o3du3fXqlXL4Yi6Zs2auecXHsiFfv3114kTJ6rHlTu7
44473n33Xc9/4Tlz5ox+lv79+5vWeWdz5syRPgQHB7s8txsdHW2xP2FADhqL
Fy9euXLlS7rnIwWQ3Lz3BPKqPJNMtVialpYm8VNyaEJCgnRYCq/YyYCMSqFM
kgpSjXCKHEIy9dLatWulb7feeqv8q711dMeOHTI6cOBAfc327dtL4eHDh/3R
TfyNfGfKMae60Uwjx6gTJkwIoD8dAOb48ccf+/bt63CntubBBx/cvHmzN8/5
+eyzz/Qzli1b1r9PB/JAjrgKFCjQtWvX8PBwv5/evRm5ee8J5FV5I5lqsTQ1
NVWdJ01JSXG3yjJJnT9VZzQIp7nB6dOnv/76a/nXXYVz585t27bt6NGjAfFh
kUy9dOTIEdW9li1baoVffPGFlMghjb6mHNpJ4Z49e0zvI1z77rvv9PeaKXXq
1JHjcH93DfC/q1evrlu3rkWLFi4DqQS3wYMHHzx40PsG1aPO9fbv359z/b9J
9evXL126tKxmo0aNcm2CzlJu3nsCeVWeSabqbKmKpVleQScVVDjVzpz6ew3y
r4iIiNq1a2u72oYNG0ZFRekrREZG3nnnndoJmlq1annzG+tfJFMv/f777+q+
xX379mmF6tTAlClT9DWHDRsmhZKGTO8j3JLdwYgRIxxOnlqtVvnsfvvtN3/3
DvAPOa54/fXXnf9uo9xyyy3Tp0+XIxBfm23atKlDUy+//HJO9N8QvXr1Up3c
vn27v/uSfbl57wnkVXkgmaqTnunp6dI9b2KposKpzCIzctrUJ5u8s9nOc1MH
Dx4sUaJEaGhoeHj4e++917t3b9kLlC9f/sKFC6rCgQMHZD8uhbKbe/PNNyWe
hISE2Gw2ias5v6LZRzL10saNG9WHqy+UIxmL/R4lfaF6KGVuPkeQb3377bfq
fbV6//jHP/z7ugfAfKdPnx43blzx4sVdZtK6deu+//77l7J1x+Xly5cLFCjg
0GDr1q2NXgPDqHfBdOzY0d8duSm5ee8J5FV5I5mq63jj4uI8XMTrTCrLLNo1
vf5ej4BhYDJVO6+lS5dqJX369JGS1atXq9GnnnpKRl966SWtgkyy2J8HmBOr
ZhSSaZbS0tKOHTtWtmzZwoULnzx5Uj/p6NGj0uFBgwbpCx988EEpDKwXx+Qf
8mmqk9p6ISEhs2bNUk+1AvK2vXv39urVy93NpLLD+vrrr2/motY9e/Y4Nyv/
xXLnO4WvXr16zz33BAcH//LLL/7uy03JnXtPIG/LG8lUvpwvXLgQHx/v6+rL
LDKjOm3q7/UIGM4hNPUG50memxo9enTz5s21M6Ti3XfflR3BjBkz1Gjt2rVD
Q0OTkpL0c6lH7nu4KdXvSKaeydeIdnD19ttvO0yVXyQ5pKlXr55WIummTJky
YWFhAXS/Uh57n6k3tmzZoh5mpdeoUaNAPzoF3Lly5cqaNWuaNWvmMpAWLFhw
6NChhw4duvkFLVy40OUiNmzYcPONG0gdIk6YMEH69swzz/i7OzcrF+49gTzP
j8lUwuD58+dPnToVe8MJ3x23i46OjoyMPHPmjK+rL7PIjDK7aicbHchLtA9C
PhT5aNyldQOTqTPZl8mOYOXKlWpU8kjx4sUdeqJ2Frt27crGb505SKaepaen
d+rUqVu3bnJQ57JC586dpc979+5Vo+vWrbM4Pa03l8t77zP1RnJy8oABAxwO
nkNDQ//5z3/KMby/ewcYRvZ3kharVq3qMjCWLVt25syZiYmJRi1O3c7gbMSI
EUYtwhDjxo1THatRo4ZsIn9352blwr0nkOf5MZlK9on9u2yEKYmTMTExUVFR
ERERclDk6+rLLDKjzC6NkEwdPo6EhASXH5w+eH5lZ1QylSRis9mqVauWkpKi
Srp06SL7ha1bt2p15JNSOwv9NcC5Dcn0Ju3atUv6XKZMmddee01CTZEiRUqX
Lm3gYZ4J8ur7TL2xYcOG8uXLOxxCN2nS5OjRo/7uGnCzTp48OXbs2LCwMJdR
sX79+h9++KHhr0+67bbb1Nf477///sYbb7zzzjt/2r/bJQAau6CbJPvl1q1b
T548ORtnCnKhQNx7AoHOj8lUf7b0ZpJpdHS0HPBIqJFvbF9XX2aRGWV2ddrU
8KwXWBw+DvmAXH5wOZRMpQO33nqr1WqVBrXCjz/+WPYLpUqV+uSTT+QzWr9+
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
mQUO2wJIplLKysrSulIZvaRCuccFUkMyBRCdwybTH3/8sWXLluz+9ePHjxey
k8LQJNwF+vjq1Klz//59gRW06CbT7t27Uwnl2RIlSnAtlC1b9vjx4wWeEyAa
2jKZPXu2i4sL/4umJDJ27FjRL3gCtoKWip07d+r+rwXj7e09ceJEu7zOtpXu
Z5qQkDBo0CB2Pn7FihUvXrxopDJLjvPnz6fnWsn04cOHKs3JvPwDG44dO8a+
F3Yps86dO9PzXbt28dsMCgqiwvfff19tzi+zWcO2AJKplE6fPq37t4zLlDkg
JFMA0TlsMuVfLHf58uVC7sVgaJJKlSpRSd26dX/77be7d+/+8ssvrITq5+fn
C6mgRTeZcmcyVqlSZdOmTYGBge3atVNpTlZ68uSJSLMExPH333/XqVNHa6Ol
WrVq2G5xNM+fP1+0aJGvr6/eTEo/AqtWreJf5RWEOHXqFDcP33777WvXrhmq
efjwYZXmAGn2v4hayZR+e/38/FSaixGxI1hohdi1a1fWMjv5lF03SetqvUeO
HKHCVq1aqc35ZRY+bMsgmUqJHQelhf0HCDgUJFMA0dlTMg0LCztpwPXr17Uq
x8TExMbGrlmzhh2a26dPH5PtG5okNDR08+bNiYmJXE3a6nB1daU6ERERQipo
0U2mtWvXppIyZcpwx4nl5eVVrVqVCmfMmCF0BoFUaEN3+vTpbPc6x8nJyd/f
X+8NE8HOREVFffHFF4ZOJm3evPnPP/9sHyeTSi8jI+Phw4f0a0+JUqW5TLre
X9H4+Hj6wSxcuHB0dDQr0Uqmas0eUnZw9RtvvNGlS5eKFSu6uLj4+PhwabRj
x46qf/efcth1AyiBqs35ZRY4bIshmUrpnXfe0f271nsbOLBvSKYAorObZJqb
m6t3I5Dp0aOHoQkpNqo0d6ATfrylkEmaNWtGdQIDAy2ooJtM33//fSqZOXMm
vxq7nQGuqatY9JdVo0YNrUWxZs2a586dk3toYC3Hjx+njKP3ZFJKPX379lXO
760dYL+ic+bM0X2rT58+9Fbv3r2P/4vtzZw1axY9535d//zzT0qX9H05Ozs3
btw4ODi4bdu2qn+PzBwyZAg937lzJ7/l77//nlunWPbLbGTYFkMylQyt93Wv
d0eoEGdtOBokUwDR2U0yzc/PHz58+DAD2J1D8/LyYmNjtfafUiE73E7vRZCE
TJKenq57SC3bYtmxY4eQClp0kynbQFqwYAG/GgvI7KCygsD9TK0nMzNz0qRJ
WjmFtoFnzJihdQkssGn0bVJgqVu3rt7/GaO/r8mTJxf81sOOjH5FIyMjtQ5+
3rx5s8rA1YTYkbqGaJ0HSs2y31taj7DfdvaLTTFWpXNDkGXLlqn+vR6vyV9m
c4dtMSRTyfz++++Glit6S+7RgaSQTAFEZzfJVAjaQqD2S5QowT+Ojp4XL16c
yukXxoJJIiIi2H+WUoDlKmRlZZUtW5bKz507Z7KCbqe6yZTdOq1bt278at98
8w0VTpkyxaKZ8RruZ2ptp06dYgf48dWpU0f0q6CA9BISEiiYsCvb6KpSpcqa
NWu4u2GCxXr16kXzc9WqVfxCeqn7w8gsXrx4wn9Vr15dpbm7Bz2/desW1Rk/
fny/fv34386JEydUvHtP79q1i162adOG33Lr1q2p8IcfflAL+GU2d9gWQzKV
zPTp0w0lU9Gv9wUKh2QKIDqHSqb5+flsA3LFihVc4ezZs1WaE4W47Elp9OzZ
s0+fPhUySW5uLrsqI23kcBW+/PJLKnnzzTeFVNAdp24ypR80dpe9/fv3cyXs
MkoHDhwo4GzB/UwlkJ6ePmbMGK2dp66urnPmzBFy9S1QoOvXrw8fPrxQoUJ6
t1Fbtmz5yy+/0J+/3MOUjbj3M924caNKc0Iod0bno0eP2P/vUS+shP/TrUv3
PNOmTZuqeLtE6WeQlbDLH6k1u8KpC/qz5S5fFhYWRi8rVqzI8qzJX2YhwxYF
kqlkGjdubCiZ0ltyjw4khWQKIDqHSqZk3759rJeGDRtSPHz33XdVmkvTHDly
hKvD1jvr1q0TOMkPP/zAKtStW3fGjBkdOnSg556entyNLE1W0KKbTAm7C56H
h0efPn2mT59Omzr08pNPPtF7dV9Qpj/++INttfLVr1//8uXLcg8NzPD77793
6tRJ76api4tL//79z58/L/cY5Sfu/UwpJLIL4VIS/OyzzyZOnMj+x69Vq1bc
/+9p/XRr0U2mlEBVmgNaunXrRg2yA4Cpcf5UK1asUGnuVjlKg13V6tChQ1wF
47/MQoYtCiRTadB6WevSdnz0ltaKG+wbkimA6BwtmRLaMqlQoQK3KqlTp86p
U6f4FZo0aULlGzZsED7Jrl27ypcvz96l0NqgQQOtrGGyAh+7OKTu7SQo4bK3
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
7FlWk8ycOXOBPkFBQaxyREQEq1yjRg3aYMjMzHz06BEXVytVqmTymwIAABDI
TpJpSMh/kumRI3IPyPYoP5lmZhp7iGXt2rWlvN25c0Wz5rzalZll4Naluo/n
01VPp5oXSxNnqO5NfP2SuqYB0DBE+0ggH8dMptzezMGDBwucJCQkRKW5cJCL
iwutgIyEOCWg4VWoUIFbY1IS5J4XLVo0LCyMX7lp06bsrdjYWEMNmkym3P5Q
43OGYiY3Eg8N7uWMGTPy8vJYtY8//lh3va+F0jfX7KxZs7hy9n8OTOnSpa9d
uyZwpgEAAJhkJ8l04cL/JFOxL3nhCJScTLn4mWHgIVY+vXDhQiF319CB2snx
7kShMTN+miphuhmxlDJvlE7ypQHQMGgwYsw8kJNjJtNt27axVck333wjfCp2
kdjChQtHRERYb2xiSUxMHDVqlLOzM7fepEzN7ULla9GiBaug+xaH7YStW7eu
oQqtWrViSdDkwPbv31+tWjVuVE5OTjVr1tS6q0vjxo1NJtOOHTty9XNzc9ev
X8/OKmXog1O8vXPnjsnxAAAACGcnyfSjj17HUl9fuUdjk5SZTPmB9H8ZL9L+
9+qRynuwEnqLH1Etk5aWVrtG1SmtnHXz40P/V5FTSNJ8MvVVkhWeTO9PenUA
sG45DaN2jWq4VK+tc8xkaoH4+Hh2VVvubFObkJmZefny5eDg4CtXrijqoNYn
T56cOnXqr7/+SklJEavNrKysGzduHD9+/Pz580lJSWI1CwAAwLGTZFqp0utk
2qWL3KOxSUpLpvxMytJoSvqLxLQX/5f64nnqi/iUVw96Qi+pkN5iKbUg+XTZ
smVVS3u8mK0nJ+bM1bNn09AZo8n6kqbeB2VSSqZ636Jh0GBoSFaYtSAdJFMh
KN81b96cVj3sQj0UqeQeEQAAAMjAHpLp//3ffw7lNfOiiMAoKplysTQ941Xk
TEp7lUN/v5k174/c3rvzWm7Nr/uNmh70hF7O/SOX3qIKVI0qp2dYEk5jYmK8
C3uEfGowRT6fLuh2MA/9VemzBMXS3HmvzmB9aTjt0mBoSDQwq81msDokU5Py
8/P79u1L651+/fqx2262adNG7kEBAACADOwhmebmqi9fVu/YoR4/Xt26tfrQ
IbkHZJOUk0y5WJqmyaTPkl9sv5Dd/vv8WuvURh5UgapRZZqE7Tw1K5xOmezf
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
AABEQjIFRsFkWqULp6qKqr/LqlIK1AP/V99uNWdpWXGCO5XMXc7RLvTihb0W
a9JCTSUXqKlZlbkTpiQuLo4mvE0PGK1fpf2Gqem9j/hkamkVW1QfaL9ealMs
pe4R6qqEAw7yQDIFAAAAEAnJFBjFkym7CVJOiXptUG3b1ZwkCzVFDVq6/RGp
qKjwadv6/BwbciJFy5QFFtdGW0umdSut1zFaqHvUSeqqhAMO8kAyBQAAABAJ
yRQYZZMpqaisKv+nqqC0Ki5XPfzb+taruCYud2ysp6aowXLdpbyWPDJh7NoJ
NuTE3EXah7xYWhvzpjZ7CreQ/Lb29r/i90jdo05KO9ogDyRTAAAAAJGQTIFR
PJmyC3pLdHfo/SOqusPHnPdK+xfanBqhpqhBS5fyMp988sn4Aa3F58TYN7VP
lhFYW7vCSgt/v699DI34PVL3qJPSjjbIA8kUAAAAQCQkU2AUT6ZV10+b/l1W
lVqo/u7/1rRZxXmtsGehDWlzaoSaEj5hSi5fvnyDZwtLT4ExWso/0J7xFKgQ
/5ZQbmWLZqWoU6tsoY5R96iTko82yADJFAAAAEAkV02mwcFcUhJXX690P5oP
Z0im7Num7Ca9yQXqb85p79PbcrltC21CG9Lm7Ja8lr5hauiO2wZ8+6ionJj+
jpVnviTO91BbS6ac7rkzxeKeHUMdGz50oORDDfJw82QaHR3dVYQLFy4o3VMA
AABQnqsm027dOA8P7qabuIce4nbsULo3zYEzJNMqg2eb5pVUJeWr90dUD/66
/oblnMiFKtMmtCFtbukZpqY+//zzu261fkFv1TKPuLes3Lwo+W2PSgsPlDFc
KnVNiUmm1DHqniOGGmTg5sl0x44dpn9fTBUUFCjdUwAAAFCeSybTnBxtLOWX
jz5SukPNgZMk06rGZ05TC9VXMtUfHKvt+Vm95zJOYKEKVI0q0ybiz5Yyubm5
Pm29j8+yfqKz6H0rdVIWiH0GTdo71k+bUpeoY9Q9Bw01OJqbJ9PXX3+d/U15
+eWXV1jw2WefKd3Npqqvrx83bpynp+eBAwcs1QkPD3/jjTfuvffetm3b9urV
a9KkSYGBgfbtLjY2tmfPnl27dj1y5IjpWpVKtWrVqrFjx/bo0aNNmzbDhg2b
MWNGaGio2aaCg4OfffbZwYMHe3t79+/ff+bMmfSHwGzNysrKlStX0mF21Bk1
atSGDRsqKirsOwQAAACzXDKZHj3aKJma++sMtnKeZFplEE7/LqvKKlYn5qvD
M9Tf/9+a6b9qbvu6vsNH9V7LOVroBb2lQlpFFagaVaZNbIqlzMJ33xn3b2+B
kEh5M97aCVOWN1UfiEqmlcu0t0sS/rbpQ/29qWMOG2ZwODdPpiNHjqQ/KC1a
tCgtLVW6Lw5E+Zr96fz999/NVti+fTtFP9M/tfPnz7d1XzU1NSNGjGCb//bb
b0ZrL1261K1bN9MdUWpetGiRUeX333+fyk0rf/rpp0Y1IyIiBg0aZFqTClNT
U209BAAAAEtcMpl+/HGjZJqVpXSHmgOnSqZVBuG0RKU9eUqRM7lAHZOjjshS
h6WrL6VqF3pBb6mQVlEFqkaV7YilJC0tzaet9x/PWQyJifM9ypZaz5uZ74qq
xpashdpn0FhaS52hLlHHHDPAIAd3TqZ0+F5eXiy/KN0XR6mtrf3www/5P51m
kykVsrU333zzO++888cff3z55Zft27dnhXv27LFpj0uXLuV3Z5RMKf736dOH
rXriiSd2794dEBCwcuXKdu3ascJdu3bxlfkLrW+44YaFCxcePnx48+bN/fr1
Y4Xff/89X1OtVg8cOJCVDx8+fNu2bf7+/q+99horoT3izCkAAEjFJZPp0083
xNIuXZTuTTPhbMlUv7uKhnz6d5n2y6c5JerMInX639qFXtBbKqRVfCalxT6f
ffZZ387eVea+Jfr3+9qToWLCZvZCsbc24nQ36Y17y/wdk6gb1BnqkqTDCXJz
52QaEhLC/qC88MILSvfFIS5fvnznnXca/uk0m0wpzbEAePbsWb6QH5yxY8eK
3yO1YHiW0yiZrlu3jpUvXrzYsPzKlSvsjC3/l72kpKRTp04eunOpJ0+e5GtS
tr399tupvEOHDoWFhaxwzZo1rNnJkyfTlOYrb9++nZUvX75c/CEAAAAIcMlk
2qdPQzKdNEnp3jQTzplM9TvV5U2VLqKWqrRLiW5hr6lQVdGkTMqUl5cPGdB3
4f2epiFRzFNK2ZK7yKNQ3ANo2FK61CNhvpmLhKkbQwb0U6lUEg0hKMOdk+m3
337L/qBs2LBB6b5I75NPPmnZsiU7wFatWllKpgEBAWwV5TujVWPGjKHy1q1b
19TUiNkjxcbevXuzkGs2mU6ZMoUKfXx8KisrjbZ96aWX2CbsZlOBgYHs7bx5
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
8O5DX3/9NVvl4+Nz7NgxSx3Oysry9fUdM2bMwYMHjVbxjyj19/dnJRs2bJg0
aRLty6gmTW92RvjOO++0PDYAAAA2cKVkWlPDtWrFeXhoF09P+vSjdIeaFSRT
kejj7uJFC3t269S+rdczw7y2PO4R95aHxuDhMka386VVVIGqTRvmRZvQhrQ5
NaL0cYAc3DOZ8mczk5OTxdTv3Llz79692evAwEDacOLEiQ7sn9QEkmlYWBhb
RdHb8BRwcXHxzTffTOW333673bszCv4JCQne3t4euq/3hoSECLRQWVnJnmLz
6KOPGpbn5ub26tXLQ3f7I6rDClmCJpcuXTKs/Omnn7JyeR7NAwAA7sCVkunl
y/pYypYtW5TuULOCZGqTioqKY8eOLVq4cMSwwS1atPBq6TmkR5tHh7Sefker
l0e0oIVe0FsqpFVUgapRZdqENlS67yAf90ymlGs8dDduFVn/oYceon8jNFwa
jWbYsGGenp4REREO7aG0BJIpmTRpElv73HPPsTsV03+HDx/OCg2fqnP69Onu
OsJX0lpKpuxcM0u7qy3IyspiladOncoqL1iwIDY2trq6+uzZs4MGDWKFhpcB
X758mT2VdcCAAfSBgRJrZmYmH1cpyarV6qaMHgAAAM+VkumPPzZKpqGhSneo
WUEytVtxcfGlS5d++eWXzz77bNmyZW/r0At6S4W0Ct8kdVvumUxtNW/ePA/d
9a7btm2jF6+88orSPbKNcDJNTEy87bbb+D+vrVu35l9TvjOsyT/JZc6cOWJ2
Z5hMKV2a/ik3xd+smCJqly5d+HIvLy/+9euvv270rdgPPvjAbM3OnTtHRkba
PW4AAABGXCmZvvVWQyxt2ZKrqlK6Q80KkimA5JBMxfjuu+9YzurRo4ePjw+7
Q6wLobjH/nTu37/fbAX6bTl79mz2nFAP3XdL77rrrs8++8yoGruSmcydO1dg
d+fOnWPV6M83X3jkyBExydRwNsbFxRndRapXr16bN282vVmTRqPZsGED+1Yp
4+npOWPGDArdto0UAACAIFdKpvff35BMhw1TujfNDZIpgOSQTMU4deoU/d3p
1q0b/Xft2rVKd8dR6urqYmNjT548WVhYqHRfGuTn51OyDgoKSkhIEH74bHV1
dXR09PHjx0NCQoqLi2XrIQAAuA+XSaZ1dVy7dg3J9MUXle5Qc4NkCiA5JFMx
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
Ff9TkA2SqbMxnVri68vTQwCz7Ju0mLoA0Pw4NpmC62iuyZS0adNm6dKlR44c
OX/+PJVzujOq/fr189CdSVy1atXFixdDQkJWr17dsmVLKuzbty9/FpL6z07/
UeGpU6dqamrS09O/++47Fo4efPBBfo/i28zIyEhMTBw9ejSVU9xL1MnMzBQ+
ojVr1rDDueOOOzZv3kwpeN++fS+88AIrvO222/iaK1asYIV33333tm3b4uLi
/vzzz1deeYUVDh8+vKysjK/MEiUzY8aM48ePU0/++uuvoUOHssL169eL6bZh
OzQsP/zwwwUdtpYGrWfPnux3y3vvvUcjGRkZSWHz3//+N9tk586dfJdMk6n4
n4KckEydDZIpuCgkUwAABskUmOaaTNu2bXvu3DmjtW+++SZb+9NPPxmWb926
lZWvXLmSlRw+fJiV/P7774Y1N27cOH78+AkTJvDpSXybjE3fM83JyWGN3HLL
LXl5eYar/vvf/7JVFNkMa/bp04d+TIY1582bx1atW7eOL+QT5fTp0+sMHjqc
mpraqlUrKn/88cfFdJtvx9fX1/Q7qvzZ3i+//NKwPCEhgZ1I9fHx4fdumkzF
/xTkhGTqbGz90I6P9+Ak7Ju0mLoA0PwgmQLTXJPp1KlTTdfefffdtGrixImm
q+666y5aNWXKFPb2yJEjrJ0PP/xQeI/i22RsSqZ8NKMXRqtKSkpWrVpFsTc4
OJje/vHHH6xmYGCgUc3q6moKtrTqmWee4Qv5RHnp0iWj+g8++CCVDx48WEy3
+Xaumrvd2YgRI2jV6NGjTVd99913bEP+dkmmyVT8T0FOSKbOBskUXBSSKQAA
g2QKTHNNpkYn6ThdQGOrKC79ZYJddNqtWzdWuaioiJ06JGPGjPn+++/pQEzv
CmtTm4xNyXT58uWsfeqPcE2KqKwmJVbTtY899piH7ppYvoQlSjpGOgSjyjNn
zqRV1Hkx3Wbt3HjjjaaDo1arvby8aO2CBQtMuxQWFsY6/PPPP7MS02Qq8qcg
MyRTZ4NkCi4KyRQAgEEyBaa5JlNKMUarwsPDTee8KfaNVPLnn3/y94NlKGO+
++67kZGRdrfJ2ZhMJ0+e7GESEs2aMmWKh+6iX7NrlyxZwnrCJ1yWKLt06WJa
efbs2aY7FU6mZtsJDQ1lO926davp2oqKCna33rfffpuVmL0DkpifgsyQTJ2N
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
LU1dmsA0ja1ex4tkKj8kUyxIptCcqdWcjw/XqpWoZf16pbsLYA8Jk6m/vz/b
fMyYMWLqs2RKMXb48OH0YsqUKYZrTZNpfHz84sWLqdrjjz/+4Ycf0lt+VWRk
5HvvvRcUFLR58+ZHHnnkgw8+SEhIiI6OpsJz586FhIQsWrRo4sSJ9N9Lly5R
/ZiYGKpDJc8999yxY8cM90ufOb/66qtXXnll/Pjx06ZNo2qGOVRMMqUWnnrq
qakiHD58WMxAycPRydQwnObm5iYmJtIe6aN+VlYWFdbV1Sk9AADGaFrS5KQp
ShOVpiv9VqGpKz6WIpnKDMkUC5IpNGf0CVb8zG++Nxo148wZ7rnnuK1bLVZI
SuJ++ombP5975RXuiy+4uDgrDWo03J49nJ+f0JKY2FBfreZ++YV77z3uv//l
vvmGPlJzls7QRURw69ZxL79MAYw7eJCz9DhFanDfPm7ZMm7WLO7DD7nAQCsd
Ztau5d58k1uwgLP0CHtqhyq8/TZXXS2qQSVImEyXLVvGNqc2xdRnybRDhw5X
rlzx8vKi14Z3BDJKpj/88AOr46lDL9q0acPX379/P5UMHTqUP4R9+/ZR7qMX
FHvZhoyPj8/OnTtpp4bHS5matRMaGtqpUyd+ENgLys5UziqISaa4N6+AiooK
dllvYWFhZmYmfdSPiIgICQk5f/58cHDw6dOnT+kE6ZwEkBGbdWwG0lSkCUnT
kiYnTVGaqDRdadKyi3itfr0UyVQRtn5od72P94qnPFdcXIF9k9aVpi5I4ttv
Gya2t7eVhbKYm0hJ4Tp10o7J88+br7BhA+fl1ejXQsuW3KpVQm2WlFj/3UIJ
lwkJ4fr1M1778MOcStWozfp67o03OE/PRtVat+auZ5AGV65wt99u3OB991nM
m7w+ffSVKX6atXy5voLgrVyVJVkyDQl5+Oab2eZ7vvySE3EKjE+m9HrVqlX0
un379vTxj601TKZhYWGULqlX69atY9Fm7dq1lE+9vb3ZmVOWTD10p2t//PHH
BQsWqNVqlkzJ+PHjr127dvXq1QceeICVjB49+o8//qAOTJ8+nd4+TPNH57HH
HqO3vr6+1Gx1dTV9TB05ciSVzJo1i1UQk0yp2Q7ibNy40eZxdhh5kmnV9e+c
lpWVlZSU0Ef9vLy8rKwsivOpOikpKcnXJQHIiJ94NAnZbKRpSZOTpihNVJqu
NGnFfLcUyVQpSKZYzCyuAMkURHnxRf2sHjxY6a44jbw8btgw/bCYTaaUQNna
Nm0oWnAvvKANg6zEz89is2Vl1n+3fP+9tmZ2Nte9u76kRw9u2jSuY0f923vu
4WprG9pcsUJfTuF04kRt0mRvKXMdONBQraCAu/lm/apBg7Qneakye/v009p4
K4BPpi1acKdOmangTsm0/ptvOl7fPJkOOSbG6iaGybSmpoZd0zt58mS21jCZ
vvrqq/T65ZdfNtyc0iJfyJJp27Zt6QMkX4ElUyqkGMVKdu7cSSUtW7bMpomk
Q3GVSvr378/pnlFIyfSOO+4wfIrNjh07qMKECRPYW3zPtOnJlG+HqFQq+rRf
WlpKH/uLrvsbQFH8VKRpSZOTpihNVDZjbZ3nSKZyQjLFYmZxBUimIMqQIfpZ
ff10ibv7+eeGEOdhLpmWlHA33qhd1akTd/3Ml/aMZMuW2sLhw4Uap22LioyX
Xbv0+6JcyS6Ife89fcmSJforeNVqztdXXxgc3NBaq1baEupwRoa+MDRUGyGp
8HrK0HrpJf22s2c3XHP700/6wo8+Euozn0xp6dvX+KQt517JNPGpp9i2neh4
27Wz9Zwpp50p+mt62RNnDJPpkCFD6HUw//PVCQoKosJRo0Zx15PpnXfeaViB
JdNhw4bxJbQLKunXrx9fkp+fTyU9e/Y03FCj0cTHxx85cmTdunXjxo2jCvfR
DNRBMpUqmTLsDDiAkxN/+a4RJFM5uXsydVuuPyxIpmBdWZk+xdDiTFfcKaOq
ips82fgfu2ky/eQTbTmN259/NiqfPl1fbprdBFCiZEG4e3eOP4fFwqCPjzZ7
8ujvPuvSsmX6Ej5a8iXMf/6jLaTQyl+py065Uq6kYzT01FPacgpNAveYNUym
tMybZ1zBnZLpod692baT2f9JEMEomZLVq1dTyU033ZSRkWGYTDt27GiaBxMS
Eqiwa9eu3PVk+hT91AywZGr4sNRr165RyciRI/mSoqIiw2SalZX14osvtm7d
2mhAkEx5/0iaTAGaNyRTOSGZuinXHxYkU7Du1KmGWX3xotK9UVp+vn4oKCr6
++u/5vnCC8bVBg7Ull+/GrPB339rb4JE/xW+ONYIy4a0/P57Q+GxY9znn3MG
98nRysrS1/zwQ31Jejq3c6f2BGteXqOac+Y0Sqa5ufoNqaaR7dv1q3S3cjWP
JdMRI/QJmqJ3UFCjCpSLWSOGOdrJSJNM1Wr9mXG2WPribWOmybSmpubOO++k
wkmTJj3xxBN8Mu3fv7+HyTNSQ0NDPa6fAGXJ9NlnnzWswJKpr68vX0ItCCRT
+hh522230dtu3brNmjVrw4YN9JEyICAAydQQkimAeEimckIydVOuPyxIpmAd
xR82pb28jM+muaHCQq59e23OYt/Xs5RM2VdK16/XXsl59ar2XPPKldo74l7/
lp8NAgP142+ac43QvvhvBJ87J1QzPJy76SZttYkT9SXUSbbhV18ZV+bPuv76
q8UGWTKdMkVbh1Xu3bvReWH3SaZhYY3+EOgux7XKNJlyui9+Gt5KlyXTyZMn
0+tt27YZ1vzuu++ocNy4cZxEyZRdHty1a9e/DWbsxo0bqfDee+9lb5FMkUwB
xEMylROSqZty/WFBMgXr+K8ujhihdFecQ01Nw+u+fbUjY3Q1L32Y51PJqFGN
fi106qTNpza56y79WUiDZ1Yao8xC6bhLF/1epk83f+VtWhq3erW2S+w+vRRO
T57Uryov12/72mvGW338sX4Vu/OSWXwyJVOnmmnKfZLpli2NfuKXL4vZyGwy
JR999JFRMv3hhx/odZ8+ffKunwSnbf/1r39R4TfffMNJlEz37NnjoTthWn39
G8fp6em9evXy0D16hpUgmSKZAoiHZConJFM35frDgmQK1vXqpZ/SLVtqQ4fA
Ivw8FBlQvHrwQe03+8QspicH7WA2mUZENPpV4OWlfRQLfx9dWo4fF9s+fwLu
0UeFqnXr1tA4JQtLX2LdtKlRx4wew8p+0K1bcwkJDYUUJLt21df/5BOLHTBM
ppSY2MN0aDlxQl/BfZLp6683+tGLe36rpWRaW1t71113GSZTjUYzYsQIetu9
e/d33nlnwYIFXbt2pbfPPPOMRve/IyRJppRD2TdM77vvvrVr186dO5d2x56d
SnGV1UcyRTIFEA/JVE5Ipm7K9YcFyRSsoJQhPM8Nl8Y3XVEA/2VJMcucORLs
0Wwy5a+/pWX0aO2ZSmbjRv29pPr3FxlYuFdf1bdjdCclQ/X13Jgx2mt9+UeR
3nqrtg+mfvmFe+gh7b2P2rfX13zppYYYyz+1tnNn7dleyteHDum/MMuWzz+3
2AfDZEp279ZvQmm3vFxb4j7JtLJS+5zZH37g5s61+KBbE5aSKaeLkK1ateKT
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
zFVVad+yZMqeIwPgME1KpobXGIi7AD44ONjX13fo0KFt2rTp0aPH+PHj165d
W8XmfGMqlWrVqlVjx46lalR52LBhM2bMCA0NtfUAmdjY2J49e3bt2vWIuX9T
Nu2LDuHZZ58dPHiwt7d3//79Z86cSZnObM3KysqVK1eOGzeuo86oUaM2bNhQ
UVFh3yE4GpIpgOSQTOWEZOqmXH9YkExBYpaSaV2d9sGmRsmUPPKI9m3nztzF
i/qSCxf0V/wuWqQv6dFD+/bTT93qbjwgvyYl0zVrGv3+z84Wrj579mzTfZF+
/fpFRkYa1rx06VK3bt1Ma3p6ei7i/42IVlNTM2LECNbCb7/9ZrTWpn29//77
VG5a+VP6p9pYRETEoEGDTGtSYWpqqq2HIAMkUwDJIZnKydYP7eJrOgvXj2AO
4frDYt+kdaWpCzKzlExJfHzDMzf5ZBoXx/n4aEvo8/+oUdzgwfoK/fpx/PmU
kSP1hS1bau8rC+AYTUqmK1dyHTvqJyp/W2kLNmzYwBq/+eabP//882PHjvn5
+T344IOs8Pbbb6+6fua0tLS0T58+rPyJJ57YvXt3QEDAypUr27Vrxwp37dpl
0zEuXbqUPzSjZGrTvnbs2MGPD43b4cOHN2/eTLGaFX5v8ABctVo9cOBAVj58
+PBt27b5+/u/9tprrIT26IRnTpFMASSHZConJFM35frDgmQKEhNIpuR//9Ov
DQxsKExN1Z45pc///L+dhx7irl5tqHDmjPaCXoqlLVpwmzc7/BDAXTX1Dkic
bjIfPMj99JNAFY1Gc+ONN1LLHTp0yMzM5Mvr6+tnzJjBdvrjjz+ywnXr1rGS
xYsXGzZy5coVb29vKr/11lvF9+7s2bOGZzmNkqn4fZWUlHTq1MlDdy715MmT
fE3KthSr2aEVFhaywjVr1rBmJ0+eXGVwrfL27dtZ+fLly8UfgjyQTAEkh2Qq
JyRTN+X6w4JkCs5Crdam0dBQ7voH2kY0Gi4314ZbBAPYToJkKkJoaChr+eOP
PzZalZaWxla98cYbrGTKlCn01sfHp7Ky0qjySy+9xCoXFBSI2S/Fxt69e7Mj
MptMxe8rMDCQvZ03b55RTX7VjusPKR49ejS9bd26NR2dUeX77ruPVvXq1UtM
/+WEZAogOSRTOSGZuinXHxYkUwAARp5kevTo0Xvuuadnz55//fWX0Sr68MZ2
OnXqVFbi6+s7ePDgiRMnmrbDX5cbEREhZr8vvPACVW7fvv2uXbvMJlPx+/rq
q6/YW8MTpoxarWanZZ9//nlWQnukt2PGjDFtdtmyZaydxMREMYcgGyRTAMkh
mcoJydRNuf6wIJkCADDyJFMBFPTYTletWmW1MmU9qtmqVavq6mqrlffs2cNa
9vPzO3PmjNlkKn5f/EAlJCSYVm7Tpg2tuuuuuzjt1f3lrObMmTNNa/LXDx8+
fFhkT+SBZAogOSRTOSGZuinXHxYkUwAARtlkWldXd++997KdHj9+XLjy0aNH
Wc3777/fassZGRkdOnSgys888wyn/d62bcnUdF8bN25kJSdOnDCqXFJSwlb1
7duXlbBvpD7wwAOmLS9YsIBV/vnnn8X0RDZIpgCSQzKVE5Kpm3L9YUEyBQBg
lE2m8+fPZ3t87LHHhGvGx8d37tyZ9e0i/7glCyjwjh8/nirfcsstRUVFnI3J
1Oy++HO7vr6+RvXXr1/PVlEWZiXsfGvLli2vXLliWLO8vLx79+6s8jfffGO1
J3JCMgWQHJKpnJBM3ZTrDwuSKQAAo2AyXbVqFR/osgWfhZqWlsZuZETee+89
qy3zUTHw+g2xxSdTS/uqrKzs27cvK1+xYkVtbS0r9/f39/HxYeXt2rVjhZs2
bWIlgwYNunbtGissKSl58skn+UGmTlo9EDkhmQJIDslUTkimbsr1hwXJFACA
sTOZpqVxf/zBGTz/xSYajWbevHlsXxTrzp07J1A5PDycP8/o6+vLR0JLrl69
2qpVK6r85ptv8oUik6nwvvhLfEnPnj0nT548bNgwet2iRQv2TJxbbrmF1ayr
qxs1ahSr6eXlRa8nTpzIri5mF/qSrVu3WhkmeSGZAkgOyVROSKZuyvWHBckU
AICxM5l++63+d37nzton85p97JEFlGieeOIJtqOOHTueN/sU4OsCAgL4M5Iz
Z860Gkvpo+DQoUOp8sCBAysqKvhyMclUzL52797NAqbhWP3yyy8TJkyg10OG
DOFr5ufnP/7440YDSxHV39+fvf7999+Fj0VmSKYAkkMylROSqZty/WFBMgUA
YOxMprNnN/zab9NG++xdcfLy8u6++262l969e8fExAhU3rJlC/8c0iVLltTX
11tt/9ChQ6y+l5fXAAM9evRg5V26dKG3kydPtntfWVlZmzZtmjt37pw5c/z8
/HJzc6mwX79+tOHYsWONKlPaXbly5fTp09esWXPhwgVKuxRj2V5OnTpl9XDk
hGQKIDkkUzkhmbop1x8WJFMAAMbOZHrnnQ2/9keNErmv9PR0/quaI0eOZJnO
EopyfGcoCYrcxYEDB0wPxxSF06bvi0dxm6XaxYsXW6381ltvUU1PT8+ysjJb
d+RQSKYAkkMylROSqZty/WFBMgUAYOxJptXVnJdXw6/9efPE7KiwsLB///6s
/SeffNLwUltTX3/9Navp4+Nz7Ngx8YcTExOz2Jxp06axBqdMmUJvDe8+JHJf
WVlZvr6+Y8aMOXjwoNEq/hGl/v7+rGTDhg2TJk2ifRnVpE+qHTt2pJp3UrR3
MkimAJJDMpUTkqmbcv1hQTIFAGDsSabh4Y1+7Yu7k8/s2bNZ4zNmzNAIXv2b
kJDg7e3tobvVbUhIiE2HY4ml75mK31dlZWWbNm2o5qOPPmpYnpub26tXLw/d
7Y+oDivkbzt86dIlw8qffvopK6foKslxSQjJFEBySKZyQjJ1U64/LEimAACM
Pcl0+/ZGv/bDwqzu5fz58y1atGCNL1myZLU5fn5+rPIjjzzCat5+++1ma5Ks
rCxW+fTp0911hK+ktZRMbdrX1KlTWeUFCxbExsZWV1efPXt20KBBrNDwMuDL
ly+z4x0wYMC+ffsosWZmZvJxlZKsWq22OmgyQzIFkBySqZyQTN2U6w8LkikA
AGNPMn3jjYbf+S1bciJC1owZM0z3YmTChAlUkxKf1ZokODiYtcw/yWXOnDkC
HTCbTG3dF0XULl268OVeXl7869dff93opkkffPCB2ZqdO3eOjIy0OmLyQzIF
kBySqZxMf3uLry9PD5vK9SOYQ7j+sNg3aV1p6gIAiGNPMt29m3vuOW7wYM7T
k7vjDjF7GTlypNUA+PDDD1PNI0eOWK1J+A97gYGBrGTu3LkCHTh37hyrtm/f
Pr7Q1n2RuLi4yZMnG67t1avX5s2bTe/lq9FoNmzYwL5Vynh6elJCT0xMFDNi
8kMyBZAckqmcTH97i68vTw+byvUjmEO4/rDYN2ldaeoCAIhj5715mX/+4ZKS
HNxBZ5Sfnx8cHBwUFJSQkCD8ndnq6uro6Ojjx4+HhIQUFxfL1kM7IJkCSA7J
VE5Ipm7K9YcFyRQAgGlSMoVmBMkUQHJIpnJCMnVTrj8sSKYAAAySKTBIpgCS
QzKVE5Kpm3L9YUEyBTtVVmpvQ7p/P3f5svaRjgCuD8kUGCRTAMkhmcoJydRN
uf6wIJmCzUJDufvv5+jjOj/Vvby4OXPE3JUUwJkhmQKDZAogOSRTOSGZuinX
HxYkU7DNe+9p70FqdsKPGcOZ3JMTwIUgmQKDZAogOSRTOSGZuinXHxYkU7DB
2rUN0/vuu7mVK7XLwIENhUePKt1FJUREcH5+QsuBA43qq9Xcvn3csmXcrFnc
hx9ygYG27Y7q07Yvvsh9/DEXFMRVVZmvRns5fpz79FNtzfff1z7cpLZWqNkz
Z7RPP9m6tVGhRsPt2WPl6PgHfxw8yD311P9v7z7AoyjzB45vYuhFqgbwQIqo
oCIgzVOaShMVREWxHN1yeIqIqCAgUhQODqQIFk4QUFEpYgGEo/5B4TyatIBI
CQTCBQK5RJKQzP+3edfZzdbZZHYn2Xw/Tx6fZNq+M1lhv8zujNaqlf0WnydP
BrdTBQNlCoUyBUxHmYYTZVpEFf7DQpnCqBUrtKgox3N7xAgtK8sx/exZrU4d
x/QHH7R0iBZ54YUAfxSULu1ceMcO7aab3BeQmvvf/wI/kCxz993u6zZvriUl
uS957JjWrJn7kg0aaHFx3rd85IhWubJ9mccfzzX9/PkAuyZfEyfal3z3XceP
xYvb/1u1qnb6dBDHsGAIrkzXrdOefdbe8v/+N29ljzCUKWA6yjScKNMiqvAf
FsoUhmRmOs+NPvWU+9y333bMuvVWKwZntZdeCvBHgWSakpioVarkmHj99Vr/
/tpddzmjPuB7oR94wLHwDTfYP9jbuLHjR0ld14tQnT2rVamS61Hk96J+vPlm
L+dYJSFlulrArUwvXAhcpjNn2kd+5ZVa2bL2zyBfvqwNGWKf/sor+Tyu4Rdc
mQ4f7jwIxYppycnhHSxCiDIFTEeZhhNlWkQV/sNCmcKQ2bMdz2oJq4sX3eeu
XeuYe/XVVgzOapcu2c9aun2dOWM/RynHJCpKW77csWTv3o4D1aePsyU//tgx
8c03/T3K5s2Oxbp2dZyhkx58/nnHxAULnEu+8YZj4rBhjilSi4884pi4dGmu
zc6b54xlzzLVck6beu7dJ584lm/Vyr4jx47Zv3/iCecBsRXKE+jBlWmXLs7j
9qc/hXekCC3KFDAdZRpOlGkRVfgPC2UKQ/RzaqNHe5m7apVj7jXXhH1kBdXQ
oY5jMnKkc2LFivYptWu7n7js3t0+vUIFe0L68tRTjg3+8otzYkaG4124UohK
SorjUWSK6wdL9+51vBn75ZcdU2QMnTq5/6nlWaaejh93xGxsrHbqlH2KpGix
Ylq9eo73JK9YYZ/bv3/gTRUwwZWp7L5+3B54ILwjRWhRpoDpKNNwokyLqMJ/
WChTBPaf/zie0pI2J054WUAv01q1wj22gkmOmLqC8S23OPMwIcFxlCRa3Xz4
oWPWTz/53OZ119kXaNzYffozzzjWTUy0/7hokePHH390X3LfPntU6lF85ozz
PPiyZY4PC+vnPf1QHS1fn3/unPiXv9in1K1rP1VavLh99wvhK5AgylT/bfr5
FxsUWpQpYDrKNJwo0yKq8B8WyhSBDRvmeErffrv3BfT3+jZpEt6RFUjZ2fbz
lSrkt2xxTt+503GUpkxxX0V/Q+/Chd63+b//ORZ4+mn3WXPnOmZt2GD/ccIE
+/fly9tPv547Z38j8YgR2owZXpr37Fn7h0OHD9f++1/7jwbLdOVKx8N16pRr
ekqK1q+fVqqUfdaf/qQtXhxgOwVSEGX63Xe5/rT/+uuwDxYhRJkCpqNMw4ky
LaIK/2GhTBHYbbc5ntJ33GG/M4jnl35lnocftnioFy9qd95pD0MjX56FaAqJ
QZu3d8bK2HzV5VtvOWbNnOl9mydOOBaQkHSzbJlj1hdf2H8cNMj+faNG9tqN
icn1J1KPHu5X8c3IcH5fu7aXMXtSl12S6D540MvczExH5xZOQZSp6x2U5Mvr
ewlQaFGmgOko03CiTIuown9YKFMEkJysyStz/091/WvMGItH6/YeS/9fffuG
ZAz33uvYvudpypo17dNLlsx195bz57WrrnKsMm6c923u3evzfOvGjY5ZkqKa
y1tt1adKY2PtV+4tVsz5bwu+rgBspEy3b3dsp3Nnf4sVWkGUqWS+/kTSr72M
SEGZAqajTMOJMi2iCv9hoUwRwIYNQbTe0qXawIH2r88+8761Z5+1z925M+hh
+LoRp5vTp4MYbb9+QQ8joBMnHCF/221e5k6f7njoKlXsny3dtct+xPTb8cjX
22973+zBg44F/vEP91l6LX7wgf3Hli0dP8owZs1yLPPbb1rTpo7pH33k/SGM
lKn87tRGvvnG32KFVhBlKr+R+fO1F1/U2rTRHnoo7CNFaFGmgOko03CiTIuo
wn9YKFMEMGOG4/lco4b26adevuTFuVogJkY7edLxfenS2qFDXrZWvLh97rJl
QQzg+HHt/vu15s2NLr9nj718jXypSwaZ6803HUfgn//0MjcrS2vf3sufFXo2
zp7tfbP6gZ040X3WmjWOWepfA/TtDxmSazH5daiDLwfTq4Bl+r//aeXK2ZeR
JWVHIlFw1+ZF5KJMAdNRpuFEmYZCWlpaQkJCXFzczz//vH79+m+++ebLL79c
uHDhRx99NHPmzGnTpk2ZMuXvf//7O++8M2HCBPmvfC9TZLrMlWVkSVle1pJ1
ZQuyHdmabNPMIVKmiHh6eHbt6n0B/TOSLVs6P0ppy3njqGe/5KFM333Xvorx
MrWQ7K96v27lyu73hdFdvmyvV/2GI9ddZ0/IrVsdP0rp+1pLnYp99VX3WYsX
O9b97jv7j/rNZXbtcl/yz3+2T69Xz/tDBCxT/QLCnnUcKShTKJQpYDrKNJwo
0zzIzMw8evSoZOMnn3wyceLEwYMHP/bYY+3atbvllltq1KhRsmRJz6NqCtmy
bF8eRR5LHlEeVx5dxiAjkfFkut4B0IrDEmZ5e9IWpqcu8unJJx3P50GDvC+g
3+p0ypRcZWrz9qHIyC5T/e45nveF8XTqlBYf7/hev9XLv//tc/lq1ewL9Onj
Pl1/h7B6j/Trrzt+3L/ffclu3ezTr77a+/YDlqm64HDJkoX6Gkf+UaZQKFPA
dJRpOAX7or3wvbzPd4IlJCSsWrVq2rRpzz333F133VWrVi356z5/iRkSMioZ
m4xQximjlTHLyEN3WCznuu/GlzSyPCJE166O57Mkj6dt2xxz5dW7/J/iVqal
SrlfwdVrmR46ZL8m7dNP2+P3ww/t99nU/etfWseO9lWuvVabM0f74YfAA5a/
+DZuNPR1/Hgejoc/r7ySKxI9ffml/caX6lJFrtRFk8qWtZ8b9aVFC/sy0qdu
Z6I7dbJPL13aceNU/Q4+njegadTIPj1v7+ZNSXGctJW8jVyUKRTKFDAdZRpO
wb5oL3wv74NPsDNnzixduvTVV1/t0KHDVVddlb9etJiMX/ZC9kX26Izry2bK
FBHvwQcdz+fBg73M1e8Xoy4Co5fp++/bT67Zcm6B6lpSnmU6bZpjSf2ralVt
xQrH3CZNcs0KeKkZa6/N27q1fbMxMVp6uvcF2rRxVOTZs86Ju3c7ou+RR/xt
fNYsx7C//945MT7ecWsY/WK5suUyZexTpGRd31GsX8nqnXe8b99/mf7rX47V
R470N8hCjjKFQpkCpqNMwynYF+2F7+W9sQRLSUlZsmTJM888U79+/fy1YIEm
eyf7KHuaQpki4j3/vOP5fOed7rP0TzhKHKlzo3qZbt5sLyD1/d//7lzFrUyX
LnUsI8k2f769Z9V5vRIltF9/tS/wxRf2XlPnTCXNVq0KMFpry1RdIKhBA58L
TJzoeOjHHrNfbTgjw34WWEpcpkRH228No5NDIVUuX9u3O6akpto/vipLVqqk
rVtnv/nLgQPajTc6NrhmjXPdIUMcE7t3d1zTWLK0Rg1HFO/b531s/st08mTH
NuWXHrkoUyiUKWA6yjScgn3RXvhe3vt9gfe7zbbQZrvXZiuev+IrdGR/u+bs
+++UKSLVlCmO53NUlLZli3P6ypVa+fKOWS+84JjoWqaXLzvuYFKypL2hFNcy
zczU6tSx/yj9pd9kMy3NcRcV/QRiUJ8zTUmxvzO2UydDX++9l++j40Lfdz+n
PqUub7rJ+UeEfptR+Zo5M9eS+sdFXc+QzpjhuEupOqr6uv3751o3MVFr3Ng5
t1QpxzdSWPrJaE/+y/Sllxwb8RW2EYEyhUKZAqajTMMp2Bfthe/lvY8mPW2z
vWKzVchf30WACjnH4TRlishz+rT9DKZ6SleoYP8opbSqxJeeSHfdZT/3p7iW
qdi/3xFQrVo53tPrWqZxcY6F587N9YijRtkn6hfqKSxXQNJv7DJmjL/F4uMd
Z4H1rxtv1JYscV9s9GgvJ0O1nLPM6lJI6qtMGfvbaz2v2/b779pzzznO4aom
lV/B55/7G9j119uX9LzCkjJggH2u/PqCukZcYWOoTGfNsp/Bf/BB+1Wpv/02
sg9IkUWZAqajTMMp2Bfthe/lvUeTZthsY222MvkLOj+ibbbKNls9m62xzdY6
54RsT5utt832jM32gs02zGYbYbONstnezBnG+Jz/vpkzZUTO3Bdyluyds9a9
OVuQ7dTN2WZ0yMZcJmcYGZQpIox+vszzq3VrLTnZuaRbmYpJkxxT5Bstd5nK
q3o1S8pXmlf/0s8kyta0wlOmQUlKsp+Alur87Tfn+WLjTpywv7F5xw77SVg/
srLs/zggj+L6O4Jvhsq0f3/n879kSco0IlGmgOko03AK9kV74Xt5n/vlaILN
1iJ/ESdibLZrbbY2NttfbLbhNtt0m+1Lm+3/bLY4my3JZsvy9Uo4319ZOduP
y3msL3Med3jOGNrkjCcm3/vVIuf4UKaIKO+84zxzqr6qV7ef63SrKs8ylTjS
7zYileRaprK6fuLP69eRI/bFIrJMUSAZKlPXq3I1a2bRSBFalClgOso0nIJ9
0V74Xt67vCI9Z7NdH3yvlbHZWtpsA222f9hs39lsh222yyFrz/x8Xc4Z23c5
4xyYM+Y8nBe+PucoWf07MyRvT9rC9NSFWTIz7TdDWbTI/glTX7dS8ixTceCA
4z29LVrYr/Ojl+natY6Fz53z97iUKcIlcJlmZDj+dUV9DRxo3WARQpQpYDrK
NJyCfdFe+F7e//EX8UTD74aNstluznlL7Tyb7UAoz4GG+isrZ/zzcvbl5pz9
MkKO0sSJE63+tQWWtydtYXrqIpy8lqn4+99z/W+lyvTECcePH37ovvB112n3
3OO46Ykq06ZNw7UPKLoCl+mOHbmeybNnWzdYhBBlCpiOMg2nYF+0F76X93/8
RTw0UJGVionpHhv7z0qVEqwuylB8Zdtsx6tXf/+WW+6vX79k8QCXIh46dKjV
v7bAKFOYyVeZZmXZb2zqVqaiQwf7j1WqaFu3OqZs2eI4JzVkiGPKnDn2H6tW
tX9YMg8fyQQMC1ym+lvQ1ddPP1k3WIQQZQqYjjINp6JTpg/5DrFGjRpNmjRp
586dB3Mc+ve/j8+ff2bYsAv33Zdep062fiXPQvUlw5bByy7IjsjuyE4d/IPs
qeyv7LWvA/LQQw9Z/WsLjDKFmXyVqTh40Hn7Er1MDxzQypa1T5EX/y1aaDfc
4FigTh3ntX1WrHD+L3n33eHbFxQ9gct00CDns1Gmq9P6iDiUKWA6yjScik6Z
dvZRYSVKlJAQe//99/UydRO3Y8exRYvOjBiR3L37peuvz5a/062uTu8pesUV
MjwZpAxVBizD9ro7qkxlf2WvZd+9HpPOnTtb/WsLjDKFmfyUqZg82TF35Urn
xN9+s585df0DoU0b+wdadZmZjpvUFCumxcaGfBdQhAUu027dnE/Um26ybqQI
LcoUMB1lGk5Fp0wf9lGmumLFijVr1uzpp5+eNWvWpk2bfGVd3J49R7/44vSb
b55/5JHfb7opy/WO8+H9koeWAcgwZDAyJBmYrzEL2SPZL9k72UfZU/+H4uGH
H7b61xYYZYoC4dIle41u26adPet9gaQk+51VOUWFUDJ0bd7ERPsteyZM0GbO
tGiYCDnKFDAdZRpOkV+mf3jttdcCtWkuFStWbNGixeOPPz58+PAPPvhg9erV
e3yk39GjRxMSEs6dO5eWlpaVlRW6XZCNy0PIA8nDyYP6ilAZp4xWxiwjl/HL
Xsi+BLXvcqxCtxdmyduTtjA+dQHAP0NliiKAMgVMR5mGU7Av2oMKnMhTtWrV
Ro0adezY8Yknnhg8ePD48ePnzJnz+eefSwlu27Ztf45vv/124sSJvXv3btas
WdmyZfPzcLK6bEQ2JRuUzcrGJTzlv/JY8ojyuPLoMgYZiYxHRiVjkxGatbOF
iLlPcgAoXChTKJQpYDrKNJzy/yIfrsqUKRMbG3vdddfdeuutrVq1ateuXdu2
bZs3b37jjTdWq1bN1+c6dbJA9erVGzZsePvtt0tpdunSRbYg25GtyTZly7L9
8OxI4WLukxwAChfKFAplCpiOMg2n/L/IByxn7pMcAAoXyhQKZQqYjjINp/y/
yC+8YmJirB4CzGHukxwAChfKFAplCpiOMg2nIv6ifevWrW+88Ua7du3y+YHQ
Qkf2V/Z6/Pjxx48ft/qXEHKeu2/1iADATJQpFMoUMB1lGk5F/EV7UlKSup7t
/v37ly9f/tZbbz3yyCM333xzyZIlza9BS8keyX7J3sk+yp6qiynJX0lW/wbC
wfNoWD0iADCTvzI9cUI7cEAL5XXjUXBQpoDpKNNwKuIv2tPT073eeEXCbc2a
NXPmzHn11Vcfe+yxVq1a1axZM+BtQAsIGaeMVsYsI5fxy17IvqgUdXXo0KHs
7GyrfwPh4HmIrB4RAJjJX5m+8Yb9Fthlymi3364NGqRlZlo9WIQQZQqYjjIN
J160HzlyxNeNQd0cOHBg8+bNX3zxxaxZs958881BgwY9+uijHTt2bN68ef36
9a+66qpSpUqZ35ke5FHkseQR5XHl0WUMMhIZj4xKxiYjlHEa2Z1Tp05ZfezD
hCc5gMjmr0y7drWXqfqqUcPqkSK0KFPAdJRpOPGiPTEx0WCZGrF3796ffvpp
zZo1K1asWLx48bx58+bMmTNt2rRJkyaNHz9e+nHEiBGvvvrqsGHDhg4dOmTI
EHk5If+V72WKTJe5sowsKcvLWrKubEG2I1uTbcqW9+3bZ9ZQU1JSrD72YcKT
HEBk81emUqN6mUqlIqJRpoDpKNNw4kV7WlqaWa1XiMTFxWUVmY8d8SQHENl8
lumZM84sla+RI60eKUKLMgVMR5mGEy/as7OzDx8+bHUphtvJkyetPvDhw5Mc
QGTzWaYrV+Yq06VLrR4pQosyBUxHmYYTL9pFQkKC1aUYbhcvXrT6qIcPT3IA
kc1nmY4fn6tMjx2zeqQILcoUMB1lGk68aBcpKSlWl2JYFam38mo8yQFEOp9l
+vDDziytXNnqYSLkKFPAdJRpOPGiXUimSaxZ3YvhEx8fb/UhDyue5AAim88y
feMNrWlTrUQJe5nefbfVw0TIUaaA6SjTcOJFuyKxZnUvhk9ycrLVxzuseJID
iGz+rs0rMjK0nTu17dstHSPCgTIFTEeZhpPn32VF04MPPmh1L4bJ3r17r7zy
SquPt8Ws/t8OAMwUoExRZFCmgOko03AKfxQUTBUrVty/f7/V1RgOc+fOtfpg
W8/q/+0AwEyUKRTKFDAdZRpO4Y+CAmvRokVWV2M49OzZ0+ojbT2r/7cDADNR
plAoU8B0lGk4hT8KCqx+/fpZXY0ht3///sqVK1t9pK1n9f92AGAmyhQKZQqY
jjINp/BHQYFVu3Ztq8Mx5BYuXGj1YS4QrP7fDgDMRJlCoUwB01Gm4RT+KCjI
vvvuO6vbMbSeeuopq49xgWD1/3YAYCbKFAplCpiOMoVVEhMTrW7H0MrIyLD6
GAMATOa9TKOitPXrtQsXrB4dwocyBUxHmcIqaWlpVrdjCB09etTqAwwAMJ/3
MrXZNPmSPm3QQMvOtnqMCAfKFDAdZQqrZGdnHz582OqCDJWkpCSrDzAAwHz+
ylS+mja1eoAIE8oUMB1lCgslJCRYXZChkp6ebvXRBQCYL0CZ9u9v9QARJpQp
YDrKFBZKSUmxuiBD4rfffrP60AIAQiJAmc6aZfUAESaUKWA6yhQWysrKiouL
s7ojzSd/AVl9aAEAIRGgTLdutXqACBPKFDAdZQprxcfHW92R5rt06ZLVxxUA
EBL+yvSKK7TUVKsHiDChTAHTUaawVnJystUdabIjR45YfVABAKHir0wbNLB6
dAgfyhQwHWUKa2VmZlqdkiZLTEy0+qACAELFZ5lWq6Y9/rjVo0P4UKaA6ShT
WO7YsWNW16SZ5H8rq48oACBUvJfpFVfY53FV9qKEMgVMR5nCcklJSVbXpGl+
/fVXqw8nACCE/JUpihLKFDAdZQrLpaenWx2Upjlz5ozVhxMAEEKUKRTKFDAd
ZYqC4MiRI1Y3pTnS0tKsPpYAgBCiTKFQpoDpKFMUBImJiVY3pQkOHz6cnZ1t
9bEEAIQQZQqFMgVMR5miIEhLS7M6K01w+vRpqw8kACC0KFMolClgOsoUBUF2
dvbhw4etLsv8kr90rD6QAIDQokyhUKaA6ShTFBAJCQlWl2W+HDp0iLfyAkDE
816m0dFWjwvhRpkCpqNMUUCkpKRYHZf5ImVt9SEEAISc9zK12aweVy7z5s0b
MGDAp59+ysdMQocyBUxHmaKAyMrKiouLs7ov807K2upDCAAIuUJRpqJNmzZq
bA0bNvzb3/62bNmy8+fPWz2oiEKZAqajTFFwxMfHW92XeSRNLWVt9fEDAISc
9zKNirJ6XO7WrVvnNsjo6OhmzZoNGzZs1apVqampVg+w0KNMAdNRpig4kpOT
rU7MPDp16pTVBw8AEA59+vTxLFMx21QfffTR/+Wb13EqxYsXb9269ejRozdt
2pSRkWH1QS2UKFPAdJQpCo7MzEyrEzOPLl68aPXBAwCEQ5MmTfwUX2FUpkyZ
jh07Tpw4UVKL9/8YR5kCpqNMUaAcO3bM6soMGm/lBYCiI/LK1FXFihW7des2
ffr0vXv3Wn2kCzrKFDAdZYoCJSkpyerQDNrJkyetPmyITF999VUJAAWM1e0Y
VtHR0TExMcWLF7f6qOdXKP6IpkwB01GmKFDS09OtDs2gXbhwwerDhsi0ePFi
q1+WAkAkCMUf0ZQpYDrKFAXNkSNHrG7N4Fy+fNnqY4bItGHDhrsBFDDlypWz
OrNCKCYmpmrVqvXr12/ZsqXVR9pMofgjmjIFTEeZoqBJTEy0ujWDcOLECasP
GAAgfCLvc6alS5fu0KHD22+/vW3bNi6bYBxlCpiOMkVBk5aWZnVuBiE5Odnq
AwYACJ+wlWl0vvnZeLFixe64445Ro0Zt2LAhPT3d6oNaKFGmgOkoUxQ02dnZ
hw8ftro4jcrMzLT6gAEAwuell17yDL0rrrjC6nG5W7dunWfqNm3adOjQoStX
rpRKsnqAhR5lCpiOMkUBlJCQYHVxGnL8+HGrDxUAIKwKS5m2adNGja1BgwaD
Bg1aunTpuXPnrB5URKFMAdNRpiiAUlJSrI5OQ/hbHgCKmkJRpvPmzevXr9/C
hQsTEhKsHkvEokwB01GmKICysrLi4uKs7s7AMjIyrD5UAICwKhRlijCgTAHT
UaYomOLj463uzgCOHTtm9UECAIQbZQqFMgVMR5miYEpOTrY6PQNISkqy+iAB
AMKNMoVCmQKmo0xRMGVmZlqdngHwVl4AKIIoUyiUKWA6yhQF1rFjx6yuT5+O
Hj1q9eEBAFiAMoVCmQKmo0xRYCUlJVkdoD7JXzFWHx4AgAUoUyiUKWA6yhQF
Vnp6utUB6tOlS5esPjwAAAtQplAoU8B0lCkAAIBBlCkUyhQwHWUKAABgEGUK
hTIFTEeZAgAAGESZQqFMAdNRpgAAAAZRplAoU8B0lCkAAIBBlCkUyhQwHWUK
AIg8p0+fnmcMl9pGUChTKJQpYDrKFAAQeT744APPfPAaFPJy0erBojChTKFQ
poDpKFMAQOQZOHCgkTK9+eabrR4pChnKFAplCpiOMgUARJ7GjRurZJg+ffpG
3/bu3Wv1SFHIUKZQKFPAdJQpACDCpKWlxcTESC9ERUUlJydbPRxEFMoUCmUK
mI4yBQBEmC1btqheqF+/vtVjQaShTKFQpoDpKFMAQISZNm2a6oXHH3/c6rEg
0lCmUChTwHSUKQAgwkiQql6YOnWq1WNBpKFMoVCmgOkoUwBAhKlfv77qBf6C
g+koUyiUKWA6yhQAEEnOnz8fFRWleuGuu+7q6tvixYutHmxonT17tmXLli0M
WLhwodWDLTQoUyiUKWA6yhQAEEl++OEHz3DwatGiRVYPNrSOHTtm8FBMmDDB
6sEWGpQpFMoUMB1lCgCIJOPHj1exUKZMmav9+vXXX2X5SZMmvePDhx9+6OtR
ZF1ZYOnSpcYHlp6enud18+bMmTM3GjN37txQDyZiUKZQKFPAdJQpACCSdOvW
TcWCn650JU3h60zi9ddf72utb775Rhbo3r27kYc4fvy4jGrcuHF5WBcFDWUK
hTIFTEeZAgAiSY0aNVQs7Nq1y8jyqkxff/31yR78nEmUvzpbtmw5fPhwIw/x
1ltvyUOMHTs2D+uioKFMoVCmgOkoUwBAxDh58qQqhdKlS1++fNnIKqpMjxw5
ErpRuZUpCjXKFAplCpiOMgUARIxly5apUrjjjjsMrmKkTKdMmfLqq6/KMr17
9+7Ro8e8efP2798/dOhQ+UZfJj09fcWKFZIt7dq169Wr14IFC7KysmT6rFmz
ZDDyEM2bN5dVpJ0915WI/vDDD5966qm2bdv269dv7ty5al1l6tSpI0aMyMjI
mDlz5mOPPdaxY8dhw4YdPXo04K6dO3eue/fu3QxYvny5wcMFyhQKZQqYjjIF
AESM4cOHq1KQfDC4ipEyvemmm2SZRo0aqY03bNjQ7bOiEpIPPfSQmhsTE6O+
ef7552XWn//8Z9eE2bhxo9u6SUlJt9xyi5pbrFgx9Y2sdfbsWbVA48aNZUqH
Dh1ct1OxYsW9e/f63zWuzRsKlCkUyhQwHWUKAIgY99xzjyqFTz/91OAqqkzH
jRv3cW7ffvutvowqU8lGWWzy5MmLFy92q0tVK7LYrl27Ll++vGrVqnLlykmi
7tu3Ly0t7fXXX5e5b7zxRkpKisx1W1ddsunWW2/dvXt3dnb2jh071MP17t1b
LaDKtGTJkmPGjPn1119lgfr168uUp59+2v+unTp1qoIx7777bnAHugijTKFQ
poDpKFMAQGSQrKtYsaIqBXVHGCN8XZtXelBfRqXi0KFD9SludVmpUqWoqKid
O3fqC7z11luxsbHqerxunzN1XVfiUTWv64APHjwoVSsbPHbsmPZHmbpeMenz
zz+XKW3btg3yCMEElCkUyhQwHWUKAIgMhw4dUplQuXJl42upMn366aeH5TZj
xgx9GVWmy5Yt06e41qV606yfW8z4KVPVmO3bt3db5c4775Tp33//vfZHma5c
uVKfu23bNpnStGlT47sJs1CmUChTwHSUKQAgMixdulRlQqdOnYyvZfxzprt3
79anuNblihUr5Pu77rrL1+p+ynTq1Kny/RNPPOG2Sq9evWT6rFmztD/K1PUm
OHv27JEpTZo0Mb6bMAtlCoUyBUxHmQIAijLjZXrgwAF9imtdrlu3zpZz6V1f
q/sp008++cT1XcG6Ll26yPT58+drf5Sp1Kg+lzK1EGUKhTIFTEeZAgCKsvyX
6YkTJ2w5F8uVv1X1Bb7++uuyZcuqBVSZyn891/3xxx/l+1q1amVmZurrpqen
V69eXaavX79eo0wLGMoUCmUKmI4yBQAUZfkv0+zsbHVDGf2sqGjdurVMeeWV
V+T7d955R75/8cUXPdeVv4glS+VHWUZfd8yYMTKlSpUqKlcp0wKFMoVCmQKm
o0wBAEVZ/stUy3lDb3R0tEy57777Bg0aVLduXfk+Njb21KlTMnfu3LnyY4kS
JVq1aiV/57qtu2TJkqioKJnSpUuXESNGdOrUSb4vW7as/rczZVqgUKZQKFPA
dJQpAKAoM1Kmt956q9cyfeihh/QpGzZsULcZVf785z/rLXnx4sW2bduq/Jw8
ebLnuj/88EO9evXUihKwrVu33rhxoz63WbNmMn3fvn36FFWmMj3/u49gUaZQ
KFPAdJQpAABmOXv27LZt2xITEz1nSZ8mJCRkZ2f7Wldeu8pr3bS0tFAOEPlF
mUKhTAHTUaYAAAAGUaZQKFPAdJQpAACAQZQpFMoUMB1lCgAAYFCIynTVqlXz
DPjpp59M2QvkH2UKmI4yBQAAMChEZVqjRg3PzXoaNmyYKXuB/KNMAdNRpgAA
AAaFokxPnjxpJEvFV199ZdaOIJ8oU8B0lCkAAIBBoSjT5cuXq+00adJko19S
N2btCPKJMgVMR5kCAAAYFIoyHT58uNrO4MGDzRonQo0yBUxHmQIAABgUijLt
0KGD2s6iRYvMGidCjTIFTEeZAgAAGGR6mWZnZ1esWFFt59ChQyYOFSFFmQKm
o0wBAAAMMr1MpUbVRqRPTRwnQo0yBUxHmQIAABhkepkuWrRIbeSee+4xcZwI
NcoUMB1lCgAosi5cuPD66683a9asfPny11xzzaOPPjpjxoz09PS8bW3NmjVS
KLfccovb9NWrVz8USN++fV1X6devX08fJk+e7Lb9jRs39ujRo2HDhqVKlapW
rVq7du3Gjh0rf8V7jlCWlH284YYbSpQoUbdu3V69esmr67ztbJFlepm++OKL
aiNVq1bt6tuDDz5o4l4UKBMmTGhhgDyxrR5pLpQpYDrKFABQNO3bt++qq67y
rIz27dtfvHgx2K0dPXpU2lZWv/HGG91mSe16Poob13dyJiYm+lny/vvvd914
nz59vC5Wp06dPXv2uC75yiuvREdHey45fvz4YHe2KDO9TP/85z8HfHqI+vXr
m7gXBYqv57CbEiVKWD3SXChTwHSUKQCgCEpJSZGX+uoV76OPPvr1118vX778
gQceUFNuv/32oLa2e/fuunXrqnU9y3Tx4sU3+aCnYvPmzfXlV69erSbWrl3b
c5UXX3xRX3LatGlqyUqVKr399tvff//9ggUL7rzzTjVRFv79jzOnc+fO1RtK
2kp2dvbs2VKvauLMmTPzeiCLHHPLNDMzs3Tp0mojV/v1zDPPuK6YlZW1atWq
YcOGPf744z179hwzZsyyZcvkWW3GLvozf/78d955JzExUZ+S5/cY6EaOHHmj
AU2bNs3nA5mLMgVMR5kCAIogvdSef/551+lSqWr6r7/+amQ78rJ81KhRxYoV
0yPFs0x9OXr0qBSlrFK5cuXffvtNnz5x4kS1qSNHjvhZ/fLly+XKlZPFKlSo
cOLECX16dna2pIrawkcffSRTzp8/Lw8hP0oIr1mzRl8yOTlZ6lVt4ezZswaH
XcSZW6Y7d+5UW7jmmmuMryWv3K699lrPYdStW/fHH3/M20gMuu222+SBdu3a
pX6UJ1i1atVC+ogFFmUKmI4yBQAUQZ07d1ZBIdXmOn39+vXGTyNKvaqyEzEx
MVFRUcbLNCMjo1mzZrK8rPXDDz+4zurVq5c6Dep/C9u2bVMP/dZbb7nNkuZV
s5577jn5ceXKlerHZ5991m1JfZakupFhw9wy/eCDD9QWunfvbnAV+ZWpfwmR
OJ04caL8KC/k3nvvvVtuuUU9D3fs2JG3wRjRp0+fli1b6v9mIjsujxi6hyvI
KFPAdJQpAKAI2rNnz8cffzx16lS36d9//70qBXmpH3AjS5YsUQtLI2zdurVt
27bGy3TSpElq3f79+7vNatCggUy/++67/W/h22+/lbatUaPGqlWr3GbJ3+9q
4926dZMfp0yZon50PWGqXLp0Sb2j+PHHHzcybJhbpgMHDlRbmDBhgpHlk5OT
5TeuStbt09DyS1dvR3/sscfyNpg8oEwDvtKmTAHjKFMAAJTMzEx1LlUcO3Ys
4PJSprGxsZMnT05NTZUfjZfpyZMn1Rtxq1atmpSU5DorLS1NXu3LrFdffXXj
xo1jx47t06fPyJEj5bHUoxghBar2YtSoUZpLTMXFxXkuXKpUKZnVuHFjgxsv
4swt01tvvdXXPxp4NXPmTFm4WrVqkqiecw8ePBgdHS1zJYK0nH9+GTp06Nq1
a2fPnt2hQ4fXXntNPQHOnTs3ZcqU/v37t2vX7qGHHpLp+nvX5cksq+zdu9d1
s/v27ZOJc+bMke/fffdd+f7UqVOHDh2Sb9T7BOSbjz/+eNasWfLNli1bXNeN
j4+XidOmTfOzU++99143A8JZ3EZQpoDpKFMAQBEnMSgvp6X+1PshRc+ePY2s
KKn4u8vNWYyXab9+/dQDqVf7rn766SfP8FHq1au3efPmgBvPyspq3ry5WmX1
6tVaTk2oH93eNqzlfARVzapdu3bgHYapZSpPvJiYGFvOO7q9lqan1q1by/KD
Bw/2tcDhw4ezs7PV919++aUs3LBhQ32cX3zxxbZt29SHjtWw1TelS5eW6bKK
bNn2x5vAdfKjTBw+fLjm8jlT/X3vSvv27ceMGWPzuHb0uHHjZOKgQYP87BTX
5gWgUKYAgCLun//8p+sL4Mcee0x/bR8Ug2UqDaJOU1aqVOl3j7uOSqu6DqZ+
/frSAvrlWyUltm/f7n/7zz//vFr43nvvVVP0U6g9evRwW1h/U3GFChWC2dei
65VXXvGMpmLFiuVhU/ICTK1+/fXXG1xFReW8efOMLKzKVNxxxx0fffTRCy+8
cOnSJXlWqGfCwYMH09PT165d27RpU5ny5JNPajmnWW05l+TKyMhQG5Fv1IMe
OnRIy30FpJSUlCtyyDdS2ceOHYuOjpZDIRWmj0F2TZb3/6SVgVUwoHr16gaP
UnhQpoDpKFMAQBE3evRo1/NH4sEHHzT+1lmdwTJVb8gUL7/8sufcZ599Vs29
/fbb9SvuJiUlPfLII2r6LbfcoleDp1GjRumlefLkSTVRqqF27dpq+htvvJGZ
mammL1u2rGzZsmp6mTJlgt3foumLL77wLNM//elPedjU1KlT1eqqCgOSrlTL
//zzz67TJ0+ePHbs2LdyjMlx+PBh7Y8yLV26tH7hZXnhJ2UqT6FTp07pq6vr
VLdv3179qNrz66+/Vj/Kk0R+vPPOO13n6tfmdfuc6d133y1zZ82apX5UbwBo
2LBhkAemcKBMAdNRpgCACJCYmPhrIK63VnGVnJx84cIFedm/fv36m2++Wb34
N/iGXlcGy1R9tDA6OtrrjWn27du3cOHCKVOmuKXx5cuXGzVqpMa2ceNGzxVl
Ab1qpTc3bdrkOvfbb7/VM6pGjRqdOnVSexoVFaU+8VrQTkgVWCaW6eOPP65W
f/fdd40sL79i9e8nK1ascJ2uvztX9/nnn2t/lKk837xu6uDBg7Kdd955Rz1v
W7VqpWapfznRn/89evSwuVy62X+ZylPX5nI74L/+9a/y46RJk4wfk0KEMgVM
R5kCACKApJZnL7gxcuPFc+fOSaOpZPN6vSA/jJTp9u3b1WD0t9oap9+D1fOO
NvKi97777lNzK1as6PXjqIsWLapQoYLrAZGsmD9/fvv27Y0ENRQTy1T/pwbj
NyG95pprZPmRI0e6Tvz4449n/OG6665zK1O3+9HEx8c/9dRTJUuWdNsFvUzP
nz8vc0uVKnXx4kX536FEiRJlypRJSUlRc/2XaVpa2pVXXmnLuRWvehuwLJCQ
kJCHg1PwUaaA6ShTAEAEMKtMhbqQi1i8eHFQYzBSpvpdQr777rugNi6kN9W6
Q4YMcZ1++vRp1QuiVq1a+/bt87UFqZL33ntvwIABffv2XbBggUqGOnXqyIqt
W7cOdjxFk4llmgdPPPGEPNw999zjawH17wyuZfroo4/qc+WFn7on0dVXX/3k
k09OmzZNXgTKU9G1TIWsIlMkeGfPni3f9O7dW5/lv0zF008/LQuMHTv266+/
lm+6dOli1r4XNJQpYDrKFAAQAbZv374ikLVr1+rLf//999OnT1+6dKnnpvQL
Is2YMSOoMQQs08zMTPXWWYlBXxdZ2rp167Jly/71r395zpJdUAObMmWKPvHY
sWP6Z0ibNm0a7PkpqVr1BlGvH3qFJ2vLVL+YlaSf1wXuuOMOP2Uq/wvIlKuu
usr1IkXq0s3NmzfXp6xevVqmdO3atV27dvLNhg0b9FmeZep2XeIff/xRPRX7
9u2bh3/eKUQoU8B0lCkAoKjJysqqWLGivGy+7rrrPOfqF19dt25dUJsNWKY/
//yz2vKAAQO8LnD58mWVrjVr1vScO3z4cLfzrWfPnq1bt66aeP/99/u6alN8
fHyPHj2kWZYsWeI265133lGrSw4b2skiz9oy1f44bSpee+2148ePq4nylN6+
ffs999yjZvkq008//VSdME1PT1dTjh07Jk82mdioUSN9Mdma7JHalDzBXP8V
xa1M1VWm3W55I/8LyMSYmBj5v+zSpUuhOQzWo0wB01GmAIAiSF3XRbidNpWX
+uXLl7fl3Ack2MvzBizTWbNmqQedNm2ar2W6du2qlpGscBtYmTJlZHpsbKy8
xFUT9RtB9uzZU6rW1zbT0tJUQXTu3Nl1ekJCgqqS6tWryzJG97Nos7xML168
2L17d/2h5TfYsmVL/RrL8oseOXKkeup6lql0qPqEaatWrcaOHTtgwAB5OkVH
R6tcdX2UESNGqA2OGTPGdbpbmarnj9Rrv3799GUmTpyo1nW7L2qEoUwB01Gm
AIAiaN26deoFeaVKlRYvXpyVlSVlt3r1av2dsePHj3ddODaH/7e8BixT/UOm
ru8rdvPtt99GRUXJMldeeeXChQtlVJmZmatWrVKXvhGzZ89WS27evFktKYYN
GzbamwULFqiFu3XrppZ84YUX9u/fn56evmHDBnWvSfHee+8Fd/iKMMvLVJHn
Rps2bfQngHxTp06d3r17Hz16VF9G3fDFtUzFV199Jc9ktZb8L9C+fft9+/ap
zxpv27ZNX+zw4cOyTVlAYtZ1dVWmv/zyiz4MdbPdcuXK6cskJCSogf30008h
2fmCgTIFTEeZAgCKprfeeksvi5IlS5YoUUL/UTpOWlVfUr/lSt++ff1sMGCZ
6udDT58+7Wc7kpn6SErk0H985ZVX9IH17NnTM5Hc6DepjI+Pr1q1qj69WLFi
+vfPPPOMrw+9wlMBKVMlJSVFulIC8OLFi8bXysjIiIuL+/nnn/Nw015Ply5d
khx23dT+/fttkXsbUx1lCpiOMgUAFFkrVqzQP6epVKtWbf78+W6LrVy5Us31
9flQRV0W9aabbvK1wO233y4LVKlSJeDAvvrqK3UaS4mKiqpfv7768KCuadOm
AcvU9SKuBw4ccLuCcc2aNWfPnk2WBqVAlWnBpD4JO3XqVKsHElqUKWA6yhQA
UMTFx8evznHq1Cmrx5KLjGf9+vWbNm1yu8JMfpw5c2bjxo1r166Ni4vz89FU
+EKZ+nLp0qUGDRpce+21ckCuueYa/RaokYoyBUxHmQIAABhEmfpRoUIFlaX/
+c9/rB5LyFGmgOkoUwAAAIMoUz9SUlIOHz5s9SjChDIFTEeZAgAAGESZQqFM
AdNRpgAAAAZRplAoU8B0lCkAAIBBlCkUyhQwHWUKAABgEGUKhTIFTEeZAgAA
GESZQqFMAdNRpgAAAAZRplAoU8B0lCkAAIBBlCkUyhQwHWUKAABgEGUKhTIF
TEeZAgAAGESZQqFMAdNRpgAAAAZFcJlmZmZOnjy5W7du11xzTdmyZRs3bjxk
yJBz585ZPa4CijIFTEeZAgAAGBSpZZqQkHDHHXd47lqVKlUOHDhg9egKIsoU
MB1lCgAAYFBElml2dnaDBg3UvrRt23b27NlLlizp0qWLmnLTTTdlZGRYPcYC
hzIFTEeZAgAAGBSRZSodqnakQ4cOUqn69E6dOqnp//rXvywcXsFEmQKmo0wB
AAAMisgybdGihexFbGzsmTNnXKevWbNG7eBbb71l1dgKLMoUMB1lCgAAYFDk
lemePXvUXkyePNlzbnx8vLxcDP+oCj7KFDAdZQoAAGBQ5JXpihUr1F7s3LlT
fszIyNiyZctnn322b9++rKwsq0dXcFGmgOkoU6scPXo0Li4uLS3N6oGgMMjM
1JKTtf/9z+jyv/9uX8USKSkhXyU9Xbt0KehHAQAzRF6Zvvfee2ovLly40L9/
/9KlS+v7Vb169VWrVlk9wAKKMgVMFzFl2qlTp5tzDBs2zP+SgwcPVkt+8803
+X9cCcxkSQbDEhISevbsWaNGDf2P/TfffDP/wyji9u/fr36nvXv3DtFD/Oc/
/1EP8dxzz/mfGBKPP67ZbNrVVwdYbMEC7YkntBtu0KKjtWLF7N/076/Fxxt9
lJdf1u6/39DX/Pm5VpQQnjBBa9ZMK1/ePs6aNbXHHtNmztRSU30+Vh5W2bXL
vnc33aTFxGhRUZq8Dnz0UXllYHTvxIwZWvHi9q8SJbQffvC35ObNjiWrVw9i
+wCKgMgr0xEjRqi96Ny5s+euRUVFzZkzx+oxFkSUKWC6iCnTa665Rv8jdM2a
NX6WvP/++9WS//znP/PziJcuXRozZkypUqWMX7AuPT399ttvd/szf77bi3wE
76efflIHs1WrViF6CPktq4e45557/E80nzxDpN3kq1Iln8ukpWlPPulYzO2r
TBntq68MPVDDht634Pn1/PPOtfbt06691vtiLVpo//2vlwcKdpWsLO3tt+2d
6HWVl17SXK4k6c877zjXkha+eNHnktKtarGyZQ1tGUCREXll2rt3b31Hatas
uWLFCmmo+Pj44cOHR0dHy8Ry5crFG/9HziKDMgVMF3llKmrVqnXR92tOs8r0
4YcfVtsxXqbz5s3TBxkbG9uzZ08ZDDewzr9ILtPPP9euuCJAmV66pDVt6myu
mBjt9tu1m292TpG82r8/8GMZL9MXXnCskpys1a/vnH7ddVrXrrm2c+ON2unT
uR4lD6tMm5br0WWVtm21ypWdU55+2tDBdC1T+RowwOeSlCkAHyKvTHv16qX2
Qgr0xIkTrrPGjBmjZg0ZMsSq4RVYlClguogsU/G071eqZpWp/qYX42U6fPhw
tcq9996bbfAsDwyIzDI9f17r2zdXSfkq01GjnMvIi4ekJMd0qdrSpR3Te/YM
/Ijr19tX8fqln7eVL0nC335zrPLyy87p06c7z11+8okzqKdMyfUowa4iL5PK
lXNMr1BBW77cMf333+1Bqm9KBh+QW5nKl6/PT1GmAHyIvDIdOnSo2ovXXnvN
bZa8UCxTpowt5z6nloytIKNMAdNFapmKH3x8jszCMn3xxRfVKhMnTszPQ8NN
BJbpsmX2Tzi6ZZTXMk1NtdeTr1OHY8c6ZlWsqF2+nPfx/PWvju1IPOrvlpeo
lBdjavozz7iv8uKLjlmuBycPq7z0kr/8vPdex6w77wy8F55lKoO5cMHLkpQp
AB8ir0ynTZum9mLevHmecxs1amTLeZdv+AdWwFGmgOkiuEzlT1Gv7+k1Uqby
p4fEzi+//HLZ94v5PJTp3/72N7XK7NmzfS2TmZm5f/9++aUk6We+ApFBymgP
HDjgdbTJyck7d+7cvHlzfHy8kRO1v/32myz8X68fDwxGHnZEy/n0rtqXoK5U
71mm6enp27dvlwEYPDctv/Gff/55w4YNu3btknU9Fwhrmc6Zk6ueSpb0V6af
fupsz3Pn3OeePGm/FFLVqlqDBlowv4hclixxDmbcOOf0Xbuc0+V7N8uXO2aV
KKHpv808rCLHVk186CEvY9u92zE3Jsbf50YVzzKVr379vCy5erVjbpkyAbYJ
oIiJvDL98ssv1V784x//8Jx78803y6xmzZqFf2AFHGUKmC7yynTq1KlRUVHq
+wHePkfmp0wzMjJGjBhRv3599ZF/UbJkSfnT+LvvvnNdTAIzNjb2iiuuUMuU
L19efmzcuLGf4d12222yTPHixdUqpUuXjs0xd+5cfZnVq1fLYxUrVkz/m052
qm/fvp5lt2PHDrX6tGnT3n///cqVK+t/My5btkxfbPHixXfeeafrX51ly5Yd
OnSo1+qULmvfvv2VV17p+ugDBw684PWMkl/Gd0Qmyl7UqFFDMnbhwoUtW7bU
D5EMtUuXLseOHTPyiK5leuTIEdkR+cWpKbJHnTt39vVh3h9//PHee++V46Y/
Z0SJEiU6duzotkpYy1Q/0XnFFdro0drWrc630Xrq08cxt39/M8egS011nuW8
6aZcN6OR6v/1V/vpXbf36yqzZjnWuvbafK1So4Zjotd/z5ENlirlWGDFigD7
opdpq1ZakybOOP3+e/clKVMAPkReme7fv1/txcMPP+w2KzU1tVSpUjLrxRdf
tGRsBRllCpgu8sp0586dgwYN0v+y8LwPl68ylT+ZmzRp4vnXjfLXv/710h+3
UNSvFeDqar939KhevbrXzUpHazknPfXrKXmqVq2aWxpv2bJFzWrXrp1rUtn+
uNJvenp6nz59fG1Q/gI9deqUvrWsrKzx48e7hqSra6+9dvPmzQZ/C8HuyH33
3admyQDcdkSpVKmSxGPAx9XLVPaiSpUqntspV66cdLrbWvI79fqgivSp632F
wl2m0dH2u6js3Wv/cds2f2V6222OuYsWOaYcOWL/WOi8edqePfl6B6/y2muO
7UdFacb/rDh71nmZo7/+NV+ryKFQE33d5kkv02nTAjyEXqZ33mk/2apf7Pea
azS3ez9RpgB8iLwy1ewfjLhX9iImJsbt7gajR49WO/jll19aNbYCizIFTBeR
ZSr/79epU0f/y8LtrJ/XMpXq1FeRunnuuec+/vjj6dOn6wuLUaNGqYWXL1/+
5ptv1q5dW01/4okn5EfVmL68++67ssxtt92mVuncufObOf6dczfGcePG6Y/S
okWLCRMmyNheeOEF6Sk1sWTJkocPH9a3ppepTl2goGzZsrLvmsullmw578B5
++23Z8+e3bFjR/08r0zU3+b6/vvv6wvfeuutkyZNWrhw4auvvhobG6smSh4a
fEdusDuil6ly4403Dhs2bOTIkW3atNEndurUKeDj6mWqFC9e/Pnnn583b578
lar/m0B0dPR+l+vT6lEpWrduPWPGDPlrV45Sr1699DPmTZo08Vw+HGV67Jh2
8KDzR/9lKumk5v7yi/2co0SW61tVK1bUPvss7yORyNXzzeu7Xj0lJGgffaTV
q+d8k+2mTflaRb+/zHvveVn399+d6Tp6dIAHci1TzeXctHz16ZNrScoUgA8R
WaZbt25VO1KhQoXPP//84sWLqamp8uJBvWxo0KCB68ejunbtqt64ddrtOupF
DGUKmC4iy1SzX2R0vX46rF/uV9Rey1RPqqpVq+7evdt1+Tlz5qhUKVWqlOub
S836nKkMWH8Lq3SZ62dFDx48eMMNN3gGmmuZSvTJzkpmxsXFrZaX05om6aef
AB00aFCmy9svlyxZoq+ozoQmJyfLLqspUnOuC586dap58+ZqlqR6wL3Lw464
lqkcHNdHf+WVV9R0+T0GvI2aa5lKR8vxcd0LyW01q6fL9WkfeOABNbGPW5Lk
/MuDvrVDhw6pifkv02XLlvU2pm/fvq6Hwlmmnp8zTU93tpXrhWrdvjyvNWSQ
fuGjYsW0gO+svnDBGYl6F2/YkN9VOnd2zGrXzssWFi1yrhvwzWZuZSoH2fVu
O64n9ClTAD5EZJlqOTeI0f9hNiYmRv+nbHl9dfz4cdclmzVrpma5TS9qKFPA
dJFapkI6S/8r43uXz5F5lumFCxfUOUfx1VdfeW78qaeeUnOfcXmFb1aZPvnk
k2qiZKDnKvLbcWtJLXeZSji7rfL222+rWbVr187IyHCbe8cdd+glKD++8cYb
6scmTZrkqqEcUrvy15PMlb+hTp486X/v8rAjepnWq1dPf7O0Iq191VVXqbkb
/NdN7jKd5vGWzk2bNqlZErm/5dzuJCkpqWzZsuovX6//5FuzZk21ih65+S9T
1xPZAaWlpTnX9FOmSUnuEVq2rDxf5feqPfKI/eSjPt3bEzuAs2edb5Q18iFW
16sb6V+vvKLl/s0GvYrrPXHcfrnynHQ9RxzwrK5bmYo9e5wnhWvUsN+pR6FM
AfgQqWWq5Vwm4oYbbtD/Yb9ixYo9evTYqz5X4qJly5ZqgYAvDCIbZQqYLoLL
NDU1tW7dumqizE3+43NknmWqd03VqlW9bnzt2rVqAdebkphVpk2bNlUTv/Hx
MboOHTqoBWbNmqWmuJZpQkKC2/L6W2Hfffddz60dOHDg008/3bFjhxwf172Y
OXOm10fXr6Hk+YldN3nYEb1Mhw0b5rl827Zt1dyVK1f6f2j9N1ilSpVL3jqo
RYsWagH9ClFSvvJX6i7Py8Nq2sWLF2+55Ra1vB7FBbRMjx/P1XSNGmkub5aW
46LFxjqzy3WbRowc6Vj3iitybdaXI0e01q3tb4u99177jUf1UbVr5zNOjaxy
4UKuG+hIca9YYf/E6/Tp9rc3u+7+oEEBRuhZppr9DRPOLfTu7ZhImQLwIYLL
VJHXS5s2bZLsCuoi+UUQZQqYLoLLVEhW6P/0p79p07NMFyxYoKaUKFGijzfd
unXTw0ffuCllKn2kn671bEzltddeUwuos5yaS5mW9XazxVq1ahkfWL169dTC
Et1e971atWpqgRkzZvjZTt52RC9TvVVdde3aVc31lbo6vUxbS+Z4069fP7WA
551kL1++vH//filWmdW/f39pWHWaWFn/xw0081+mZ8+e3WmM2/vJ/ZVpcrKz
qooX1/btc1/gs8+cC2zdGnCQudSs6VjR42qNgSUmym/X+dBSkflZ5csv7ddf
8vpG5ZgY+xuA1fcjRgR4CK9lmpnpvIqU7Y/rLFGmAHyI+DKFQZQpYLrILlPN
JQaFujCsZ5mOGjXK828ZX/Rzr6aU6YkTJ9SU4sWL+7rzpn6FInlENUUv01tv
vdVzeXWBd3E40HmuzMxM1wrzz/8V4/O2I3qZfv31157L678p42Xq+klSV/rV
BQcOHKhPPHDgwIABA0qXLu1nr00s07zzU6aibFnHXK+3+9Q05wnHjz4K4kF/
+skZa8uX52XYaWnaddc5ttCwYX5XWbvW/eJOtpw7vcrY9J6dNCnA9r2Wqfjl
F/sdVNUsOVznz1OmAHyhTKFQpoDpIr5MU1NT9dOCNWrUOH/+vGeZvvzyy/pf
LtUD0U8ImlumUoi+1pozZ45a5t5771VT9DK90+0Fdg69TI8cOeJ/PPKHpL7j
VatW9b/jcpT8bCpvO6KXqdvdZJQ8lKnn5YyUN998Uy0wePBgNWXjxo36PU91
JUqUaNOmzdixY/WnUyEo0+uvd8z1dZWqtm0dC3h7y7RPQ4c61qpY0X6dpbyZ
MsWxEek+g+8K87OKBOOCBdpLL9nf+jtkiP0mpDlXotZuvtmxyscfB9i4rzIV
48c7g/eppyhTAL5QplAoU8B0EV+mWk6D6Jeb6927t2eZSieqKd27dzf+iKaU
6eXLl/Xr6CYmJnpd6/XXX3fLLv9l2rBhQzV3k4+7dbh+ckS/NYzXT1wal7cd
Mb1MZRWvC/Tt21ctoD5OK39BVKxYUU0pX7685Kq80jhw4IB+PeFGjRq5/XLz
X6ZpaWmnjXE/gP7L9K673D8j6aZ1a8cCI0cGHKSTfmvRAQN8LiPjXLHCflWi
3LcGdvryS2funTuXx1X8S0pynu70fDOzGz9lKr/6Zs2cD/23v1GmALyiTKFQ
poDpikKZihdffFH/60OvVL1M9b6oVauW142npKSsWLFi27ZtZ86c0SeadQWk
+vXrq4lr1671upa6/7V47bXX1BT/ZarfD+Ujb+/e/M9//iMJWaNGjYdzPjzY
unVrtfDcuXO9Prosv3r16ri4OK9XFnKVhx0xvUzr1q3rdQH9EvfqYkr66wrJ
Us+rDmZnZ1euXFkt8MMPP6iJBfQKSJq9uh1zb7jBy9zsbO3qqx0LfPBBwEE6
/Pe/zkbzc3d1ec6oZcqX935edeJE58jVe7zzsMqmTdoLL2g9e2rz5nlZXiJX
LV+5subjbeROfspUyDNBj1z9izIFkBtlCoUyBUxXRMo0NTX1uuuuc/t7RC/T
U6dO6RdKWrhwoefq+n1YqlSpop9w1DtLj5eAvJapfnmlu+66y3MV2R19bOvW
rVMT/ZfpsGHD1NzGjRt7zh0zZoya2zvnFNszzzyjfmzQoIHnLWbkT1HZZbWA
1yv9usrDjphepjaX+7zo5OHUrCuuuELdGvWll15SU+6++27Prbnez1S/31DB
LVP5/1fNjYqyn450I89nPbIOHgw4SIdvv3WudeCAz8V++cW52IIF7nNTU7V6
9Rxz/3j/dl5W0d9ne9tt7stL2zZs6Jj7xBOB98t/mYoJEyhTAP5RplAoU8B0
RaRMtZybWupnS5V/uryfUH+3Z2xs7J49e1xX/Pnnn8uXL6/mSlzo0x966CE1
8QPDp6K8lum2bdv0ZHO7F+eZM2f0253UqFFDj2L/ZXrixAn9qj7/+Mc/XGfF
xcWp+3iK5TmXtTl06FCJEiXUlBdeeEF/O6uWc+pQv0VpmTJlzuu3evQhDzsS
ijK99tprXe/9ferUKf0WMM8++6yaOH78eDVFDpT8ZeG6KXmeuF4TacmSJWp6
/st0wYIFnYzp0qVLrn8l8F+mon17xwJly2quz//du52XP2rZ0jk9O9uee6NG
2b9k4570+8WUKKG5PCW80K/fK2NzLd+UFPtZTr3vXM/IB7vKjh3Oia6fJL10
yV6vtj/ua+OnoHUBy1R2tnlzyhSAH5QpFMoUMF3RKVMxePBgX2WamJhYoUIF
NV1KbdiwYV9//fW8efMkP/WboVx11VWu90MZOHCgml6uXLkHH3zwCQOnbLyW
qeZyTxPRrVu3Tz755Icffpg0aVL16tX16a7t5r9MNZdL0YqHH374008/lYaa
MGHClVdeqSa2adMmMzNTLax//FO0bNlSQnvVqlXS4PrnVcUbb7wRcO/ysCOh
KFNRu3btsWPHrly5curUqRLCamL58uX1z2/qZ1HVLk+fPn3Hjh2fffaZpKv8
Nl03pf+mCu4VkHLG4Syp0qW1bt20yZPtn5QsVcoZbj/+6Fw+Pd25/LhxXjb4
1FOOud4u/pzLqlVadLRj4ZIl7W+7nTNHGz5cq13b+RAPPJCvVaSjJav188JP
Pqm99559Lf2TsPL1/POGjmTAMtU83tNLmQLIjTKFQpkCpitSZZqWlub6nt5/
5r4Gi+SYfu9OT9J0Ei+uyy9evNhtGfVOUT98lWlSUpL+3mBPxYoVU9ft0QUs
U9nTRx991NcGa9asefr0aX3h1NRU/dyoV3/5y1983QjGTbA7YnqZSofqp4Bd
Va5cWX3CVNerVy9f46xbt67+Wd0ePXqo5Qt0mWo579qVhnJ7J6qepbkPe+Ay
ld0x/hbZCRN83mxUvtq00XKflc7LKseO2T9G6mt5GaTBC/8aKVPXxShTAB4o
UyiUKWC6iCnTa6+9Vv3t8Msvv/hZbPPmzfp7eufPn+8299y5c1JhbmfNpKcG
Dhx49OhRz62NGzfu6quv1pcMeCkk/eONH374oefcuXPnSjO6PnRMTEy3bt22
b9/utuS2bdvUAu3atfPzcIsWLapVq5brBosXLz5kyJALFy54Lrx8+fLrr79e
fzuucuONN8pGsgy+7A9+R7p3764WWLVqled2HnzwQTXXLSo9/fzzz2pJaX/5
LdSpU8f11yfZeOLECbdVJN5Hjx6tnxBXJGCHDx8u/18cOHBATSlVqpQ6ubxx
40Y1Rb8Zq6+J5tu921FJ1av7W2zfPntwuV3Dp2VLbc0a9yVlj4oXdywwebKX
TUkbqrlvv21ohD/+aP8QqFswxsba76Dq6980gl3l+HHtscfcl69Xz/7+XuPP
T/1ySf7/JeHyZa1FC8eSUsQA4IIyhUKZAqaLmDI1UXZ2tnTot99+K7G2e/fu
/6l7Jvom1SOLBfwYpkFSx9I7ixcv3rJly389TzblaYPr16//6quvZJABr68r
OyvZK4++YcMG2S+Dp0p9Pa65OxKUkydPLl26VB5anuR+FktNTd21a5csKWl8
6tSpsA0vhDIyJNTtp1C//147fDisD332rLZhg/0Kuj/8oLm8793MVZKStC1b
nHsX5L+ZAED+UaZQKFPAdJQpAACAQZQpFMoUMB1lCgAAYBBlCoUyBUxHmQIA
APixaNEi/Xv/Zep5CQtEKsoUMB1lCgAA4MdLL73Upk2bdevWab7LVObKMgMG
DLB6sAgTyhQwHWUKAADgh36PsIA+/fRTqweLMKFMAdNRpgAAAH5kZGRceeWV
RsrU9XbhiGyUKWA6yhQAAMC/Rx55JGCWNmzY0OphInwoU8B0lCkAAIB/8+fP
D1imf/vb36weJsKHMgVMR5kCAAD4l5iYGB0d7b9Mly1bZvUwET6UKWA6yhQA
ACCgVq1a+clS6dbz589bPUaED2UKmI4yBQAACGjcuHF+yrRZs2ZWDxBhRZkC
pqNMAQAAAtq1a5efMh02bJjVA0RYUaaA6ShTAAAAI/70pz/5KtNVq1ZZPTqE
FWUKmI4yBQAAMOKZZ57xmqXFixdPTU21enQIK8oUMB1lCgAAYMQ333zjtUxb
t25t9dAQbpQpYDrKFAAAwIi0tLRSpUp5luno0aOtHhrCjTIFTEeZAgAAGNS1
a1fPMt20aZPV40K4UaaA6ShTAAAAg2bPnu2WpWXKlMnIyLB6XAg3yhQwHWUK
AABg0IkTJ9zKtGPHjlYPChagTAHTUaYAAADGNWrUyLVMJ06caPWIYAHKFDAd
ZQoAAGDc8OHDXctUCsXqEcEClClgOsoUAADAuK1bt+pZWrFixaysLKtHBAtQ
poDpKFMAAADjJEWrVq2qyrRbt25WDwfWoEwB01GmAAAAQfnLX/6iynT69OlW
jwXWoEwB01GmAAAAQVm8eLEq071791o9FliDMgVMR5kCAAAE5cKFC8WKFYuN
jbV6ILAMZQqYjjIFAAAIVvv27Xv16mX1KGAZyhQwHWUKAAAQrClTpnz44YdW
jwKWoUwB01GmAAAAwYqLizty5IjVo4BlKFPAdJQpAAAAEBTKFDAdZQoAAAAE
hTIFTEeZAgAAAEGhTAHTUaYAAABAUChTwHSUKQAAABAUyhQwHWUKAAAABIUy
BUxHmQIAAABBoUwB01GmAAAAQFAoU8B0lCkAAAAQFMoUMB1lCgAAAASFMgVM
R5kCAAAAQaFMAdNRpgAAAEBQKFPAdJQpAAAAEBTKFDAdZQoAAAAEhTIFTEeZ
AgAAAEGhTAHTUaYAAABAUChTwHSUKQAAABAUyhQwHWUKAAAABIUyBUxHmQIA
AABBoUwB01GmAAAAQFAoU8B0lCkAAAAQFMoUMB1lCgAAAASFMgVMR5kCAAAA
QaFMAdNRpgAAAEBQKFPAdJQpAAAAEBTKFDAdZQoAAAAEhTIFTEeZAgAAAEGh
TAHTUaYAAABAUChTwHSUKQAAABAUyhQwnSrTfwMAAAAwjDIFzPV/AAAAAIIX
8JU2ZQoAAAAAsBZlCgAAAACwFmUKAAAAALCWKtOLFy9euHAhLS3N6uEAAAAA
AIoWSVEJUsnSS5cunT9/PjU11eoRAQAAAACKFklRCVLJUk3Tzp07J4lKnAIA
AAAAwkYiVFJUgjQ7O1vKND09XSqVT5sCAAAAAMJGIlRSVIJU+4M6hSrT+cAp
AAAAACCkpEBVlso3Wm5qunpbL30KAAAAADCdxKZ6E686N6p5o97WKy5cuPA/
AAAAAABMJbGpqtP1TbxeXbp0SQL2vwAAAAAAmErdIMZ/kwIAAAAAAAAAAABA
UfP/jS9UPw==
     "], {{0, 502.5}, {623., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{623., 502.5},
   PlotRange->{{0, 623.}, {0, 502.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`vInitial = 
     6, $CellContext`\[CapitalTheta]Initial = 
     34, $CellContext`\[CapitalTheta]Final = 
     29, $CellContext`t = -3, $CellContext`ball = {{
        RGBColor[1, 0.5, 0], 
        EdgeForm[{
          GrayLevel[0], 
          Thickness[0.02]}], 
        Disk[{0, 0}, 3]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{0, 3}, {-0.3, 0}, {0, -3}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-3, 0}, {0, -0.3}, {3, 0}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-2, 2.2}, {-0.1, 0}, {-2, -2.2}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{2, 2.2}, {0.1, 0}, {2, -2.2}}]}}}},
 CellTags->"Snapshot",
 CellID->428436850,ExpressionUUID->"b8f14550-3d46-4700-81dc-9ae0632dc5a4"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Xl8DWfDP/4sxFI7DdoSW6niaamWWlrUroLe1NIQWrS3vYLWUlvtSvVu
1VpFJUUECYpo7T9BHpIiEUkkssryZL8Te/v9/M71Mq/pWSbnJHPm5MTn/YfX
mWuuueaac07OzMfMXNPw46kfjHdycHDwKo9/PhjzRdfp08fM/lc1TAyZ4vXv
T6eMG9tnyoxxn46b3v5jZxRm4J+YMg4O///rvw08ePAgLy/v/4iIiIiIiIhU
hbCJyGmYQ/UyaZZOTk7Of4mIiIiIiIhUhbApUqepfJqfn4+5ubm5+Tr3iIiI
iIiIiFQl8iaCJ+InXhiNpQiwBQUFtu4pERERERERlWYInoifeuFUXMTLWEpE
RERERETakMKpdFlvZmamuIjX1l0jIiIiIiKiZ4W4rBeBFLH0/v374hSqrTtF
REREREREzxZxYyliKSJqTk4Or+MlIiIiIiIijSGKIpAilv7f//3ff//7X1t3
h4iIiIiIiJ5FCKTiUadMpkRERERERGQTTKZERERERERkW0ymREREREREZFtM
pkRERERERGRbTKZERERERERkW0ymREREREREZFtMpkRERERERGRbTKZERERE
RERkW0ymREREREREZFtMpkRERERERGSRGJ3LOoH/JApFBfMbZDIlIiIiIiIi
izCZEhERERERka2E6Rw2j6hsTrNMpkRERERERGQmJlMiIiIiIiKyFXGBrmH8
zP4nwwrmXNnLZEpERERERESFYjIlIiIiIiIi2xJDGxUhmYoFlRtnMiUiIiIi
IqJCMZkSERERERGRbYmHwhhNo6aIymJB5caZTImIiIiIiKhQTKZERERERERk
W0ymREREREREZFtMpkRERERERGRbTKZERERERERkWxybl4iIiIiIiGyLyZSI
iIiIiIhsK0anCMlULKjcOJMpERERERERFYrJlIiIiIiIiEqCMB3D+GmUqGxO
s0ymREREREREZCYmUyIiIiIiIioJxAW6YmijwH8SheZcwSvHZEpEREREREQW
YTIlIiIiIiKiUobJlIiIiIiIiGyLyZSIiIiIiIhsi8mUiIiIiIiIbIvJlIiI
iIiIiGyLyZTIfP8fERERERFZrtAjbSZTIvPZ+g+aiIiIiMguFXqkzWRKZD7x
Z/U3ERERERGZ53//93+ZTInUxWRKRERERGQRJlMi1TGZEhERERFZhMmUSHVM
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
fPnyo0ePnjt3br169VDB29vbOtukMiZTIiIiIiKL2DyZ5ufnZ2dnJyUlRUVF
5ebmmtNnVENlLIIFsTiTqcaskUw//fRTBM8LFy7IC/39/V1dXR10nJ2dvby8
rLA1VsFkSkRERERkEdsm03uy06YxMTGRkZFIN8odRgVUQ2WeMLUVayRTUzIz
M8+ePRsYGBgXF6dK57XBZEpEREREZJGSkEzRJkJNWlpaVFRUeHh4UlKSqd5i
FiqgGipjESzIZKo9w/ipwNadtQ0mUyIiIiIii9g8md6ThdP09PSYmJjr16+H
hYXduXMnMzPzgQ5eYBKFmIUKqMZYakNMpoViMiUiIiIiskhJSKb3ZOEUqxCP
kkEOvXLlyiUdvMAkCjELFRhLqYRjMiUiIiIiskgJSab3nobTvLy87OxsrCg1
NRU5NFEHLzCJQsxCBcZSKuGYTImIiIiILFJykqmQn58v8mlubm62DCZFJkUF
q3aAqPiYTImIiIiILFLSkqlERFQJAynZESZTIiIiIiKLlNhkSmS/mEyJiIiI
iCzCZEqkOiZTIiIiIiKLMJkSqY7JlIiIiIjIIkymRKpjMiUiIiIisgiTKZHq
mEyJiIiIiCzCZEqkOiZTIiIiIiKLMJkSqY7JlIiIiIjIIkymRKpjMiUiIiIi
sgiTKZHqmEyJiIiIiCzCZEqkOiZTIiIiIiKLMJkSqY7JlIiIiIjIIkymRKpj
MiUiIiIisgiTKZHqmEyJiIiIiCzCZEqkuhKVTB2IiIioSGy9Dyd6tjCZEqmO
yZSIiKgUsPU+nOjZwmRKpLoSmExt3QsiIiJ7wr0nkfaYTIlUx2RKRERk17j3
JNIekymR6phMiYiI7Br3nkTaYzIlUh2TKRERkV3j3pNIe0ymRKpjMiUiIrJr
3HsSaY/JlEh1TKZERER2jXtPIu0xmRKpjsmUiIjIrnHvSaQ9JlMi1TGZEhER
2TXuPYm0x2RKpDomUyIiIrvGvSeR9phMiVTHZEpERGTXuPck0h6TKZHqmEyJ
iIjsGveeRNpjMiVSHZMpERGRXePek0h7TKZEqmMyJSIismvcexJpj8mUSHVM
pkRERHaNe08i7TGZEqmOyZSIiMiuce9JpD0mUyLVMZkSERHZNe49ibRnjWS6
devWkSNHJiUlqXGMX3hre/funT59emJioiqrKwn27NmDLVLlDUxJSVm2bBle
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
Z8+ezMxMw3L0Cn1DD5Vb1szjx48rVKiAL1VkZKTh3PT09CpVqmCu8nXRGkCC
njhxIt5Vw1kPHz7cuXMn4vPcuXOPHDlyT3GY5aK5f/8+2jd6u3Fpsm/fPmym
fAxqOfy9zJgxAxWSk5OtsXb8Ufz8888zdPBCm78RfLGxRUb/VKmU4d6TSHtM
pkSqYzK1O4cOHRo1apRChZCQEOXP9NSpU7NmzVK+BTU0NNTHxwfh9Ndffz1/
/jzCi3xucHCw0WebIhR7enqih4pboKl27drhS2U0dk2ZMgWz3nnnHe17JffX
X3+5u7ujJ4anm/EX+j//8z8OMp06dcrOzla3AydOnEDLa9euVbfZkmbp0qXY
zBEjRhidO3v2bMx94403TJ1eL44bN240aNBA/jk2bNgQhaqvSE+HDh2qV6+u
/LxjKh249yTSHpMpkeqYTO0ODqE3btxoai7yJhJlVlaWqQo5OTkTJkyIiIhQ
aAHZFunynu70HP5FDt21a9fx48cRVxMSEtLT0+Pj4w8cOJCWlpaYmBgeHn75
8uXffvtt586dONhG39DDYm6jij777DN8qZDE9cqjo6PLli2LWZcuXbJJxwTE
zFGjRolvvmEy/eKLL0QavXDhwpkzZ9q2bYvJgQMHqtsHLy8vNIvPUd1mS5qj
R49iM1955RXDWfgai3PrytfAF5n474W33357//79Bw8e7NixIyZbtWpljRQs
wY+As7Pzhx9+aL1VUMnBvSeR9phMiVTHZGp3unTpEhYWZmouApep6xWF9evX
K1/HiwSEmKl3RvXRo0dxcXGIqGjc399/3759fn5+AQEBiKv4/ly/fh3H9uK8
KgKO8uhMGtu0aRO+VD169NArHzp0KMrxr016JSD+v/jii9J5NL1kipiPZIHE
JF2YjRhbqVIlJyen2NhYFbvRokWL+vXrq9hgyXT37l28yXj3cGygN+uTTz7B
rL59+1pjvTExMWK9t2/fFiX4+DCJwlu3blljjYKvry9W8dNPP1lvFVRycO9J
pD0mUyLVMZnaF3xkDRo0UDjVglCpEFsiIyMnTZqUn59vdC6aPXbs2NGjR4vT
QzSCHt6zwu2QRXP58mV8qWrWrKlX6Ojo6OLiIoUF4cGDB1r2rWrVquhbt27d
xKWkesl09erVKBw+fLi80MPDA4XLli0zbA2Fn376aW5u7tKlS7t3796lS5eF
CxdmZWU9efLkhx9+6N+//xtvvDFmzBi9r0dCQgIaHDdunJhE5W3btg0aNOj1
119HnJ86dWppOpdat25dbKzeL574HwCw0uW1eAOx0nLlykl/dw8fPqxevbr5
5+uvX7+OD+jQoUMnT54cO3YsPsfRo0eLv1PMwtembdu2PXv23Lx5s/yXATWx
CunBT/jbR8133323TZs2I0aM+PHHH5Wv5yf7wr0nkfaYTIlUx2RqX8LCwhTO
SOLQ95dffjF1wIny+fPn//7776YWP336dEhISPE7qXxWV2P4kpcpUwbfq7i4
OKkQPUQJYpeYvH//PmJgu3btnJycmjdvvmLFCoUGg4OD15umMDKVIaSJffv2
IU18//33hskU8QGF3377rbzwP//5j2FcFRBYMOvNN9+U38/Yp0+fjz76SF7y
4osvyv9rYuvWrSiUBmGeNm2aqFapUiWENbyoUKFCMf+zouTo27cvtgjvtrzw
/fffR+Enn3xivfW6ubmJ/094/Pgx/gy/++47TNaqVcvMbIhMKq5DFp+IULZs
2bVr11arVk3+4a5bt05a6qWXXmrZsqV4HRUVhdWhgqOjoxj1C7p27WqVrSVb
4N6TSHtMpkSqYzK1LwEBAZ9++qmpuciDCp9mUFDQjBkz9IZD+Uvnb92ZnQMH
DqgyWAp6aPPRbuVwfI7vFbZOTB45cgSTVatWxW5ClIg49vbbb0+fPv3VV191
MHZfqmTevHkOpl29erUIPTSaTHv37o3CX375RV64a9cuFHbv3t2wEZFMEcN9
fHzy8vJ8fX0RQ1CCOLN06dK7d+/++eefzz//PEowS1pq8ODBWESMqoR/Ublc
uXIXLlxAaMrMzBwzZgzqv/fee0XYqBJo7ty52BxslFRy+vRplFSsWNHoGNR/
6/5AfvzxR1P/EWFmZj979mz9+vWxojp16iAwiq8fPiYzuy2SqYPuovTbt2/H
xsb26dNHlLRv3/748eM42vn8888x2aJFC7HIjRs3MIm/dzEpbiX28PDAZ4ot
wk8BNhkl586dM7MPVMJx70mkPSZTItUxmdoX5JSZM2eamnvs2LE7d+6Ymjtn
zpwzZ87oXQmMKPrw4UP8YCLymLrK11LooV6esi0xxND8+fP/1p04FkFVOjF6
8uRJJDiEL3ECq6CgoHXr1ghopu4BxN/LatPS09OL0EOjybRz584OBk+0EbG6
Q4cOho2IZCrP1K1atULJ6NGjpZJx48ahZNWqVWISn361atU6deokJiMiIsS5
vISEBFGCL8bChQu9vb2LsFEl0L59+7CBr732mpjE38Jbb72Fknnz5plaBG+R
wn9EuLu7m7NehMcmTZrIF2zTpo35NwuLZFq+fHnpjLyfn59oR2oEyVpEbDG5
Zs0aTEoXSAwbNgyTX375pdTm7t27161bZ9UbXUlL3HsSaY/JlEh1TKb2ZePG
jUgKRmfhEHrnzp2PHj0yOvfKlSvy41IBR+YPdfbv3x8eHq7WfWfoocLowdr7
9ttvpRCxbds2vK5Xr969p3fCTpgwQX5GFTZv3oySuXPnatZDo8m0R48eKPT3
95cXop8ofPfddw0bEclU/lBUcR3v+vXrpRLEc5R8/fXXYhJ/+/JJEA83QQjq
16/fDz/8oO5QSzYnBiMqW7asGK0L7xUmXV1dc3NzTS2Cv5FvvvnG1H9EHDx4
sNCVIv2J68nxjUpMTETq/+qrrxwdHStXrmzmna0imTZv3lwqiYqKQsnzzz8v
leCPV5wfF5P48iClSg97+vnnn8Wv68svvzx16lQkZY1vqSZr496TSHtMpkSq
YzK1L2t0jM66e/euwoNElyxZYjhmrzhhGhYWhix26dIlvEawLf6TLBQ6aRPi
ik03NzccjYs7/uSjE7/zzjsoQWaRSoKCglAyZMgQo62hkWzTivbuGU2mnp6e
KESmkBf+9NNPpk7ViWR68eJFqWTkyJEokZ/xXLRokTyKiqAaHBwsVYiOjn7t
tdfkZ/fatm2rwZM3tYFPR9yYefXqVXzbGzdurJfcrWHlypVYy8cffywvnDx5
snQev1Aimfbu3VsquX37toiZ8mpIuyKZ5ufnlytXrl+/fvK5+AUQT8YRkIux
dg6CVGpw70mkPSZTItUxmdoXhXOm165dk6cSuYSEBBwJGx6FIpnev39/165d
ycnJBw8ePH78OL4SOGJHeXHyaUk7Z4rAKO64FJc4vv766/K3QgQx+VmzW7du
oaRXr15GW/vqq69MX93pULQhpIwmUzFgr95wTMuXL0fhv//9b8NGRDKV3+ha
aDJ96623nn/+ecPPGlEUeapLly7iZF+VKlUKCgqKsF0lkBj8CnlfPE6oadOm
pi4zkOTk5Jj6jwhz3pauXbs6/PPe3r9115A76IarMqfPIpnK/ztCOZn+9ttv
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
juF1RERE48aNly5dKmZlZmY6OTn17NlToUEyE5Op3cHfftOmTfWux7tx44bR
h5nihyU4ONhoO/jczRynSLr51JDezafoFfpmp8++RLjGL1gRxiImIrIt7j2J
tGeNZOru7o6/5dq1a1erVu2dd97ZvHnzPd1lpWJ8wpYtW7733ntIrMhB/v7+
YhGRTOvXr+/o6Ii41KtXLzE8xeeffy41m5yc3KxZMzF0Xp8+fcSo+/IKb7/9
touLi7wnkydPRh3EMXnH6tWr16hRI0SwcuXKYRI9lOqLId/Rtx49erzyyit4
7ebmppBMt23b5qB7YDo6LAaQR6Q1f3XIhsizKMS60ALithhdUFxhe88gmSq/
h4bQDiofOXJEXojojXAq3ur+/fvn5uZKs5o0aYJZcXFxphokMzGZ2qMpU6Zs
2bJFXvLnn38aTaCfffZZVlaW0UYOHTqEnwvzVyrdfGpISnPoleEAs0REZFXc
exJpz3rJFOExOztbKhwzZgwKEf3E5JUrVypXrox0mZeXd+9pMpUnzfj4+Bdf
fBElZ8+eFSUeHh6YnDlzpphMT09v2rQpSo4ePSpKzEymiGP5+fmYvHv3bs2a
NVFy69YtTIaEhCCsoSQqKkrUF0FVIZmOHj26bdu2V69eFZOrVq1y0D1MzZzV
Qd++fTEpnVNOSkpSTqbK76EhEXv1ztJCTEzM4cOHDS/cHTBggIPuaQhGWyPz
MZnao6CgIL1RhkJDQ/VG2QX8IeOHxVQju3bt8vX1DQ8Pt2jV8ot75cSTZdAr
9M2iBomIqJi49yTSnvWSqV6zjRs3rlu3rrxk4sSJqBYcHHzvaTJFkpK3v3nz
ZhSuXr1aTCK16VUQV6tKSdDMZHry5EmpgjirKJ6ZIla3Zs0aaW5BQUGDBg3M
v880OjpajPhhzuoAQfWll16St7B7926FZKr8HurJyclx0D1Bz5yeC3PmzJG/
4VRkTKZ2qn///gEBAdIkkil+IfXqXLhwYeXKldKk/HmmeLFjxw78buCn6cyZ
MxZdwmrq4l4/P7/mzZvjt7d4W0ZERJbh3pNIe9ZLpqmpqVIJXos/8NdlRMmW
LVvuPU2mXbt2lbdz+fJlFHp4eNzTnXDE6y5dusgriKeP9evXT0yamUyTk5Ol
CosXL0bJ4cOH7z1Neb///ru8hYEDByonU29v7/Hjx3fq1KlFixYVK1Z00D3Q
zZzVRUVFiTPL8tYiIiJMJdNC30M94qHheE9M9dzQ9u3bscjs2bPNX4SMYjK1
U/jz79GjhzSJP3z8CunV2bdv37Zt26RJ+fNMc3JyxBM8MXn69GnkU6OPj1Fg
mE/Fn3n16tW/++47JN+ibxsREVmCe08i7WmTTEWEhCEyOOLq3bt3QEDAvafJ
VC+m4bBQLILXsbGxeC0NJCsg9KFQGmzWzGQq75h4QrqIih9//DFenzt3Tt7C
0KFDFZKpp6cn5pYpU6ZDhw6DBw9GJjVMpqZWhzfT0dGxXbt28gbxWZhKpoW+
h3rS0tJQuW3btkZ7bhQSLhZBJ81fhIxiMrVfw4cP37Rpk3gdHh5uOALSxo0b
jx07Jk3Kn2eq9/zTyMhIHx8fMwdEkpNuPv3+++8rV67s8FTz5s3lqyYiIuvh
3pNIe9okU6hdu/bLL79sahFpBCR5obi0dfHixWKybt26ehVOnDiBCtJItp06
dXL4522Vw4YNMz+Zrlu3Dq/FeE2Sli1bmkqm8fHxDrohkqQGQ0NDzU+mgOPM
8uXLR0RESBVmzpypcDWv8ntoCDm9UaNG5tcX98niwNv8RcgoJlP7FRsbi7/6
tLS0v3XR8uzZs3oVlixZYngiVUhMTAwMDJSX5ObmHtHJzMy0tCcpKSn40XMw
8P7776NjlrZGREQW4d6TSHuaJdM+ffqg0MfHRypZuXIlaorhg6QRkDZs2CDm
5uTkiNFuDx06JEr69esnT475+fldu3aVtykGCNqxY4eYTEpKqlGjhvnJ9PTp
03jdrFkzbKaYu2vXLtEro8lUXGzcuXNnqUScojU/mYqLe1u0aLFv376LFy/O
nz9frM5UMlV+Dw01bdq0cuXK8gfrKJsxY4aDbEQpKjImU7u2fv16/Fk9fvw4
Pj5eL2nCl19+aSoYGq3/t+4hp/izRcjFr5aZfcDa+/fv//33369evbpKlSp6
4dTFxQV/rZZeKkxERObj3pNIe5olU4Q75MRy5coNGzZs0aJFYljaV199VT42
b9WqVXHENWTIkJkzZ7722msOuoFtpWCFgFazZk1R4YsvvnjrrbfE6QOpS8ik
Drpnvnh4eMydO7d+/fqobH4yhY8++khcMufl5TV8+HA0JZ5NYzSZomO1a9cW
QXLJkiWIjeK5MOYn03tPz+oKjo6Os2bNUkimyu+hoalTp8o3v1AdOnTAMbD8
OTJUNEym9m7kyJHLly/XuzpXmDx5sqlHxuB37OTJk0ZnPXz48OrVq97e3qdP
n05OTlZYNX7QEGCXLVs2atQoUYJufPLJJ05OTnr51NXVdevWrXxUKBGRNXDv
SaQ9ayRTMWpQWlqaXvmpU6e6du1avnx5zMVRFgJmbGysmBUXF4dChMHFixcj
D+J1tWrVhg4dqtfI2bNnu3XrJiq88MILnp6emZmZ8gqzZ88WWdJBN0bup59+
6iAbutawY0iUDrInfuKAE0eD4tkuSLVffvnluHHj8PrGjRtGt/Ty5cvisafQ
qFEjPz8/B9nYvIWuTkDj69atW716NT4LMSwSNlzMEmsPCwsz5z00JO5aXbp0
qakKcjj6dXZ2xltqTmVSxmS6b98+Ly8voycQ/9aNFDRjxgxUUM5oNpSRkdGx
Y0fxt6M3a/z48aZOfZo6Zyp59OhReHj4gQMHdu/eff78+Vu3buEdyNLBi+vX
r//2228+Pj6bN2/u0KED+iBf9sqVK507d3Yw0KZNG8NLjomIqJiYTIm0Z41k
qiw7OzsiIkLhxFxeXh4qKKwIh7XR0dGm5hYUFGDx9PT0IvcQh51oAWsxs35i
YmJMTEwRVvTLL78gq0qPT4WFCxc6yG6tNaXQ91Aybdo0Nzc3vfxu1IIFC+rW
rZuUlFRoTSoUkykyHVY6YsQIo3Nnz56NuW+88YYYOKhkwt+Cg+7uAL3y0aNH
m1oE6fLw4cPmNI5fuZs3byKcIooe0Dl69OjFixfj4uJ+/vlnhM2EhASjCyLS
1q9f3zCfDh06FMuav3VEZI9u3Lgxfvx4/IDYZO046vDy8po5c6apn25fX19U
2L59u8YdsxImUyLtaZ9MSSLGXGrevPm3337r7e09duzYypUrlylTBh+KWqtA
hm3Xrt3kyZOVqwUHB1evXp13mKqFyRTfJaz0lVdeMZyVmJgoLnswdeFryZGR
kdG6dWu9o6xx48bJJ+XPMw0JCZk/f/6DBw+KvMZly5bhndE7W6qnoKBg4cKF
4hlVcnhXFyxYYP6trERkR86cOdOvXz9HR0f8sa9du9YmfXj8+LH49TZ6r316
erq4KV7+VGi7xmRKpD0mUxvKycnx8vKS3z7m6up6/PhxddeCcOrh4TFp0iRT
FU6fPt2qVaugoCB11/ssYzIVDyDGdxu/GHqzPvnkE8zq27evxl0qGuTojh07
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
tLJtMhUnPfHripbNiaWCCKdYBAvytKn2DpvniI5yU1lZWQ0aNHDQPbN7xYoV
06dPF/v33bt3S3ViY2Nr1KiB6Orp6Tlv3rx69eqhwvbt2628lcXCZGqmgIAA
9A3HMPJCHMk46O5RkhcOGTLEwda3VhlV8p9nar6zZ8+2bt3a8Bi4c+fOV69e
tXXviEqWmzdvfvzxx6YG3R05cuS1a9eKvxZ/f3+jmRcwq/jtW4l4FgyCua07
Uiwlee9JVFrZPJmK63iTkpIULuI1hMpYRLqmV8UuUaFUTKY7duzAz/6MGTOk
kuPHj6Nk0KBBUglCK0p++OEHMRkdHV2hQoXq1avHxcVZY+tUwWRaqNzc3Fu3
brm6ulasWDE2NlY+C8d76LCnp6e8sHv37igsgQ+OsZfnmZrpyZMnmzdv1hsI
1EE31Mm4ceNSU1Nt3UEi28PP+4ABA0wNujtt2jQVfxAmTJiAZhcsWCCV4LVY
F2aptRZ14WfkzTffxI+GOQ/EKclK5t6TqHSzeTLNy8tLT09PTk62tOdYBAuK
06YqdokKZRhCc54ynKXclL+//9y5cxFMpJKEhATsCDp16iQm8X0rU6ZMkyZN
5F88JFnU8fHxscbWqYLJVBk+TelA7ocfftCbiy8SDmlatGghlTx69KhWrVpV
qlSx3/uV7As+Ai8vL8NrCPERfPPNNw8fPrR1B4lsAL8/2Gd17NjR6BlMV1fX
JUuWZGZmqrvS6OhoU7NK4MhCYk89c+ZMvCH//ve/bd2d4iqBe0+iUs+GyTQ/
P//u3bv41Q0NDU1MTLS054gwISEhkZGR0Tq3qdhinrpz505KSoqpyK9iMjUk
ro1csGCBmLxx4wYmP/roI3md/fv3o3DhwoVF+NZpg8lUWV5eXr9+/QYNGuTr
62u0gjhRfvHiRTHp5+fnYDBaL1nbrVu38DEZHoE3bdoUf9q27h2Rdh48eLBt
27bmzZsbzaRNmjTZuHHjPft8MIq6vLy8xHvSuHFjHBLYujvFVQL3nkSlng2T
qYilOPhBHyx6tpeARYKDgyMiIqKiophMVRHzT6mpqUY/OHnw/E2nmMk0Ozt7
xowZEydObN++vaOjI3Ko9DUTw7TOnj1bXh9fGBR6eHgU8xtoPUymxXT69Gn0
uVatWt9+++3y5cufe+65mjVrpqWl2bpfz6Jjx44ZPSDv1atXeHi4rXtHZF3Y
r61evdrUoLtvvvmmr69vkQfdtRTS8XfffVeSBz5CD9999905c+aUjsdO2ePe
k8je2TCZxsbGIlQiWl66dKkIl4dhkYsXL968eVOcNrV1qisN9JLpnTt3jH5w
qifTlJQU+X8++/j4SF+z9evXo3Dt2rXy+nFxcSjs2rVrMb+B1sNkWnz4GlSr
Vs1Bd4cjDnWOHz9u6x49ux49erRu3TrxcciVKVNm6tSpRfh/RaKSLzk5+Ysv
vqhatarRTNq7d++TJ09q3CUxAGCpuau95LPTvSeRXSsJyRQBs2jJNCgoiMlU
RRYl05zCWHQ1b0ZGRmJi4q5du3r27IkdwYABA0S5GLsVhwfyypcvX3bQXdtZ
jG+fdTGZquKvv/7CXzdH3Skh0tPTP/vsM2dnZ71D9Fq1am3YsOHx48e27iCR
OnBY8sknnxgddPf/sXcf0FFUcf/wNwkhgUR6Cb0EBCM1NJVeBQsKAamioBQp
kSIdAkqXSBNQsYA0BZReBDEB5BACL4EIKZQ0SEjhn5DyJKTz/rL3cZ5x68xm
dmY2+/2cHM7OnTv33p3ZZPbLtHLlyo0dOzY0NFSRgfn5+fn6+uL/gmRju3tP
ANul7Nm83DFTy87mxTFTaYk6m1faZMqhTt3c3GhfQNuUJtltWkeNGsWvc+jQ
ISpcsWKFZR88GSCZ2o+y8TxT4eg7ee/evfW/sbdp00b+Q0gA0rpy5cq7775r
8Ka7tGOaOXNmXFyc0mME+WDvCSA/Ze+A9PjxYwqnN27c0HlshBC0CA0e15lK
SNQdkCRJpkuWLJk6dapORwMHDqR9QVBQEPuQlC9fvlGjRpmZmVyFGTNmUIUD
Bw6U+jNoLUim9qMsPc9UuN9//71Jkyb6396HDh2qwif7AJhWXFx84sSJbt26
GThtV3vT3RUrVqSmpio9TJAb9p4A8lP8qTEUYRITEy1LprQgLY6nxshMwnvz
Tpkyhf7s79q1iyt58OBBtWrVqlatyn3Shg0bRnU2b97MJu/du+fi4lKjRo2E
hAQrvcHSQzK1H2XseabC5ebmrlq1yt3dXedrPP16Llq0SM03aQHg5Ofn79y5
08vLy2Am9fT03L59+zPcdNdeYe8JID/Fkyl9gaFmKY+IupqMKtMitCCeZyo/
CZMpffwqVark4OAwcuTItWvXzpo1y8PDg3YES5cu5erQd/7q1au7urp++OGH
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
VLJnzx5+5b1791Jhv379SvWW7A+eZyoz7D0B5CcqmT5SAX6OK3t9yRCaQAZI
pmXbtGnTuK/0rISbpFnKjs1WXLhwgVtp7du3v337Niv/66+/qMTb21unPuVB
Kj937pycgywuLqYMRTlLP8qNHj2a/m7LORiL0b57+fLl7D5F+nr27Hn69OnS
92Jsg3bv3p1Kjh8/zq986tQpKnzttddK369dwfNMZYa9J4D8RCXTeBXgp8Wy
15cMoQlkgGRattHXbINf8vW/gYMx2dnZcXFxgYGBY8aM0WifIspuvUu/OCza
6NRv27YtlVN9RYa6dOlSV1dXnW1dsWLFL7744tl/H82pKjExMdOnT6dx6n9Q
HR0dfXx8goODperL2Abt378/TR47doxfmXZ2LBRL1budwPNMZYa9J4D8RCXT
BBXgp8Wy15f1MxPIAcm0bMvKynJ2dtb/tk+FONHOAp07d6a1t2TJkufaMEWv
GzVqpFOHHS1iYUcRsbGxw4cP19/oNNSDBw8qNSpjbt68OWrUKGM33Z00adK9
e/es1zt/g37wwQf0eufOnfwKP/74IxUOHjzYemMAKD3sPQHkh2Sqqr5kCE0g
AyTTMq9Xr1763/mpUOlxqR0l99DQ0PT0dH7h9u3bNf/eMyc3N5deu7m5FRUV
cRUKCwvZgT+BN4y1nosXL7Zr105/0/fo0YPCoLJjY86fP88OU+qrUqXKokWL
kpKSJOzO7AZduHAhvV67di2/wpo1a6jwk08+kXAkAJLD3hNAfqKS6WMV4KfF
steXDKEJZIBkWuaxr9Y6qFDpcandkCFDaEX5+/vzC2mSCt966y026enpSZN/
/fUXV+HPP/+kksaNG8s6ViMoMu/YsaNmzZo6W9/R0XHixIkpKSmKjIrC+6+/
/urt7W0wk9avX/+rr76yxgF9sxt0z5499Lp79+78Cl27dqXCXbt2ST4eAAlh
7wkgP1HJNFEF+Gmx7PUlQ2gCGSCZlnkhISH63/8VPNfUVmzdulWjfToJ7VBY
yaNHj2rXrk2FmzdvZiUbN26kyYEDB+bn59Mk/TtgwAAqoWyl2Lj1pKenz549
W/+k7sqVK9M42cjlkZOTs23btqZNmxrMpK1atfr555+tNx6zGzQ3N5cmHRwc
Ll68yCoEBgbSJIXljIwMK40KQBLYewLIT1QyTVIBflose33JEJpABkimZV5x
cTF7QAaHJm36SZfyoJzCjuu5u7uPGzfO19e3atWqGu1tWrlHlmRlZbF126lT
p/nz57O78nbu3Jl/fq9K3L17980339TPgy+++OLJkyet3TvtlD///HNjN93t
0aMHjcHan0khG3TdunUa7Q2jJmtVqFCBJk+cOGHVgQGUHvaeAPITlUyTVYCf
FsteXzKEJpABkqk9GDt2LD8I0KTSI7INSUlJY8aMcXBwYOvN2dl55syZOiea
xsTEdOnShVu3FEspAyo1YLPOnDnTsmVL/Ww4cODAiIgIa/QYGxtLGdDYTXeH
DBly9epVa/RrkJAN6u/v7+bmxirQsFetWiXb8MoSPM9UZth7AsgPyVRVfckQ
mkAGSKb2gF1Ax6FJpUdkS+jb9fXr1+/cuWPiRNO0tDSqYxNPbywoKNi4cWOV
KlV0cmK5cuUopkn4mI9bt26NHj2amtXPpC4uLhMnTlQqwpvdoEVFRZTTQ0ND
s7OzZR5bmYHnmcoMe08A+SGZqqovGUITyADJ1B7Qry13nIheJCt921hQ3JMn
T6ZMmaL/rJYaNWp88803hYWFpWn8r7/+ev311/UDqUZ7092FCxcmJiZK9UZA
nfA8U5lh7wkgP1HJNEUF+Gmx7PUlQ2gCGSCZ2gnuVqj0QumxgFqEhoYafKhQ
mzZtAgMDxbZGefbAgQMdOnQwmEnr16/v7++fmZlphfcBYO+w9wSQn6hk+kQF
+GnRtvqi+Gm2LxlCE8gAydROsGc1Enqh9FhAXX777bcmTZroZ0kfH5/o6Ggh
LeTk5Gzfvp09Q0ffyy+/vGvXLjlvAgxgb7D3BJCfqGSqBvy0aEN9zZgx4/79
+2b7kiE0gQyQTO3EhQsX2OqlF0qPBaxrz54906ZNO378uPD7z9CfglWrVnF3
/uG4urouWrSI9qrGFkxNTf3iiy/0H5nKdO/e/cSJE7gRtK3z9PQU+4kCmWHv
CSC/Mp9MfXx8Xn/99ZiYGBMlpe/LdJsUS+mPG5Kp/UAytRP5+fnuWjh0ZQ/Y
r5Kzs3OvXr3WrFkTEhIiJB4mJCS8//773CXJnLp16+7evVunBXbTXf0wq/n3
prtBQUFWe38gK27Liv1EgWyw9wSQn+TJ9MUXX5w3bx61KbC+WGKTKbtZIj8V
6peUvi8TbbJYimRqV5BM7cdgLaVHAXJYtmyZTlqsVavW2LFj9+zZY/b+V1ev
XuU/B4dDhewJL6GhoWPGjDF2092PP/44MjJSlncJMtH/OIn6RIEMsPcEkJ+o
ZJoqAPcHtkWLFiyiCllKOH5aFFKfZcYHDx6YKCl9X8ba5GKp2R6RTMsSJFP7
sU1L6VGATPSjBOPg4ODt7b1w4cILFy4YO4BeXFz8888/161bV3/xOnXqGGy2
cuXKCxYswE13yypjHydjnyg8z1Rm2HsCyE9UMk0TQP8PLEXU+fPnX7lyRcji
ZvHTopD6LDNGRUWZKCl9Xwbb9PX11WifZ8ceImC6RyTTsgTJ1H48ePDg4MGD
9HXx2rVrOrPojx7Ky1i5iSjBcXd3Hzx48LZt2+iz8VwPxYpFixa5urqabqRe
vXrr169nHy3ad+g0cvLkSZSXgXIhHyf+J4r9DwaeZyob7D0B5CdDMuVIElFt
JZlysXTv3r1CekQyLUuQTO3K4sWLaQ2vXLkS5WW+XGCOePvtt7du3WowmTLR
0dFDhw41uLiXl9fOnTvZYbJ3332XSmjXoLM4ystGuZCPE/8TNX36dDzPVE5s
/Ss9CgD7Imcy5ZQmotpEMuXHUoE9IpmWJUimduXkyZP0K3/27FmUl/lyYzs1
BweH9u3bL1iwIDAwUPjtsAICAho1asQ10qZNm+PHj/PvgfPDDz9Q16GhoToL
orxslJv4mmTZJwqkhb0ngPxEJdN0AYQkU35EpT+8V69eFdIyw0+LQuqzVBgT
E2OipPR98dv89NNPWSzdt2+f8B6RTMsSJFOAsqc0d0AypqCgwMPDo3z58suX
L5d2tKByuAOS+mHvCSA/ZZOpBRFV5clUP5YK7BHJtCxBMgUoe9ivkrOzc8+e
PVevXn3jxg1JnvGRk5NDu4DStwO2hfv+I/knCqSCvSeA/FSSTIVHVDUn03Hj
xunHUoE9IpmWJUimAGXMnj17pk6deuzYMdwZFSTh6emJT5TKYe8JID9RyTRD
AEmSaXBwsLH2+WlRyHiqVq3KUqGJktL3xdqsUKEC/fvqq6+mpqaaHoOxvmQI
TSADJFMAAACbhr0ngPxUkkzNBlIL0qKxVGi9ZPr7779XrlyZXrzzzjv8cIpk
am+QTAEAAGwa9p4A8lM2mQoPpDoJTp3JlNoMDAzUD6dIpvYGyRQAAMCmYe8J
ID9RyTRTAOGB9Nq1a0Ia1MFPi0Lqs1QYGxtroqT0ffHbvHDhAhdO09LSBPaI
ZFqWIJkCAADYNOw9AeQnZzItTSDVSXBqTqaZeuEUydTeIJkCAADYNOw9AeQn
QzKVJJDqJDiVJ9PM/4bTSpUqIZnaFSRTAAAAm4a9J4D8rJdMpQ2kOglO/ck0
kxdOGSRT+4FkCgAAYNOw9wSQn6hkmiVAy5YtFy5cSIFUSGUL8NOikPosM8bF
xZkoKX1fxtq8ePEiF05N94hkWpYgmQIAANg07D0B5Cd5MrU220qmWbxwimRq
P5BMAQAAbBr2ngDyE5VM/0cF+GlRSP2jR48ePHjw6dOnJkpK35fpNlk4ffjw
odm+ZAhNIAMkUwAAAJuGvSeA/Mp8MlVJX5cuXUpKSjLblwyhCWSAZAoAAGDT
sPcEkB+Sqar6kiE0gQyQTAEAAGwa9p4A8hOVTLNVgJ8Wy15fMoQmkAGSKQAA
gE3D3hNAfkimqupLhtAEMkAyBQAAsGnYewLID8lUVX3JEJpABkimAAAANg17
TwD5iUqmOSrAT4tlry8ZQhPIAMkUZJaZmTlnzpy5c+cWFxcbrHDo0CGqsGvX
LpkHBgBgo7D3BJAfkqmq+pIhNIEMkExBZoWFhRUqVKANfe/ePf25T548qVSp
Es09fvy4/GMDALBF2HsCyA/JVFV9yRCaQAZIpiC/Ll260Ib+9ddf9Wf5+vrS
rB49esg/KgAAG4W9J4D8RCVTGb7Sm8VPi2WvL2v3AvJAMgX5TZkyhTb0vHnz
dMofPHjg7OxMs4KDgxUZmFg5OTk7d+78TIte0KTZRVJSUvbv30/1FyxYcPDg
waKiIv06ly9f9vf3nzZt2vr166OionTm5ufn7969e86cOYsXLz516hT9FutU
ePr06ffff0+rd9asWd98883jx4/5c7Ozs/cZkpycLPLdK8CmTwUXsul1XLp0
ae3atVOnTl25cuWZM2f0KwQEBCxfvtzX13fPnj2PHj3SmRsUFKS/oc+fPy+8
hecWfchBfth7AsgPyVRVfVm7F5AHkinI77vvvqMN3b9/f53yESNGUDn9q8io
xLpz507jxo01PE2aNKFCE4tcvHixdu3a/EU6deqUlZXFVaBfyfHjx/MruLi4
/Pzzz/wKbdq04Vfo1q1beno6V+H06dPVq1fnV3jhhRf27t3LVbhw4YLGEJ3A
ok62eyq42U2vIz8//91339XZRr179+a2Na2K4cOH8+fSmjlx4gS/kV69eulv
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
62LWEwAAAMD/QjI1686dO++PGVXOyfH1Fi4Hhmlyl/wngXI/92YYLqcfWoQW
pMWpEWqKGlT6PYF12XMynTNnjrFjanyJiYmWtU+RVkj7FKCkfV+iLFu2jA2j
SpUqCQkJpit/8803rHKLFi3++ecfVvj06dPBgwdzb2f9+vVUOHfuXDZp8Ka4
bdu2pVmenp5imyX0t33AgAFcefny5bnXjRs3vnbtGtfLJ598wspfe+017l7E
qamp7733Hitv06ZNfn6+5esOAAAA7BWSqQlpaWmfzZ5V3tnJp5XzrSlGgyf7
CZ9mpgL9UCPUFDVIzeIq1DLMnpMp9xzP6dOnzzJi8eLFFrdPkfZzAW7dumVZ
+wUFBVECGLumsrCwkMtu7u7uf//9t9kei4qKuIOVzs7O9Lpv377sKTDsjFyy
Y8eO57zAe+/ePf12mjdvrtE+PlVss6Rr166s5M0334yMjCwuLn7y5Mny5cvZ
Q04rVarEZeHw8PB9+/Zt2LBBZw3QG2fRmFy6dEnw+gYAAAD4X0imxpw/f75R
vdqt67pc+ch85KSfO1MFVaMfapCapcapC6XfJViF3SZTiidubm6UTerXr6/0
WCxUmmOy9Ofx7bffZhWqVq0q/KLL5OTkt956S6cLypJHjx5lrw8cOPCcdyat
wXOhWd7kP9JUYLPnzp1jkz179qRMym9z27ZtbNakSZPMvouffvqJVaalBL5x
AAAAAA6SqUGrV68u7+z0RW9NwVJBYZOqRQg4ZsqvT41TF9SR0u8VpGe3yfSf
f/5h2WTo0KFKj8VCFifTpKSkjh07srmNGjUKDw8X2/Xp06f9/Pzee++9L774
4sqVKwUFBbt372YNslsenThxgk1STZ1lKVGyW+a+8cYbYptdsWIFmzx//rx+
s/Xq1dNoTwk2O35K4qydOXPmiH3vAAAAAEimOrKyska9N6x25fKBH4hIms8W
a+4bv87U2A91QR1Rd9Sp0u8bpGS3yfTHH39k2WTNmjVW6oJ+Wf4Q4PHjx5a1
n5mZeUIA/vM9SVxcXJMmTdh779Chg8VX0eqYPn26Rnu/3IyMDJq8ceMG62Lr
1q06NWNiYtgs/Uedmm2WTZKIiAj9yr169aJZbm5ubDIoKOjo0aMGbw7MBecN
GzaIfacAAAAASKZ8aWlpgwb09axZPm6muIz5P4s0sSIXYT+xn2qoO+r06dOn
Sr97kIzdJtMpU6awbPLXX3+Zrezr69u5c2fuiSoUCV9//XUqOXPmjImlVHgH
pCdPnnh6erJ+Bw8eLPaxnps3b6Y3rn+skz5IVatWpTbbtWvHSihIsrvg9ujR
Q6cy94jS3377TWyzVJMt++uvv+oPjyVudvlqYWEhezZNw4YN9WsuXrzY2CFd
AAAAALOQTDn01t54vV/bei7/3yRN0mfiAmbGAs3DWaJjafEyzQPfktOAqVPq
ugyvW3tjt8nU29ubgomDgwM7GGfakSNHNLzrIocOHUqTY8eONb2UCpPp+PHj
WacjRoyg7CZ2ce6+RsHBwfzy1atXs3JKjlzh1KlT2RoOCwvjCukj5+XlReUU
G9PT08U2+/fff7OSrl276sTqX375hc366KOPWAl34SoXgZmHDx+yS4w9PDzo
T5nYlQAAAACAZMoZ/8H7TWu6JH9W8ijSu9M16QtEZMy0+Zr42aKT6aNZJT/0
gjqlrmkASq8DkIZ9JlN64+xWri1bthRSv7i4mCVZWldffvklvXjllVdyc3NN
L5Wfnx8pQGZmphTvybzLly9TTmRhbf78+csN2bt3L6scGBjoofXZZ59xLYSE
hLAWmjdvfujQoZycnEePHnG5smHDhvx1cv/+fUdHRxYAL168WFRUFBMT06dP
H1Z53rx5FjRLG4J7ZEzfvn2vXbtG+Zrqb9261d3dnQorVKjAXTZ76tQp1mzl
ypX37dtHNQsKCs6ePVu/fn3Wwrfffmv1lQ4AAABlEZIps3Hjxuru5blrRfOW
lBzKzDPy6FL9nydzNYlzxMXS1HmaKN//m6SuaQA0DKXXBEjAPpMpdzTz/fff
F7jI8ePHqb6Xl5eTk1ODBg2SkpKsOkJrGDFihNkDuJQcWWWKdaxkwoQJ/EYW
LlzIVWbpnqlRo8bt27d1elywYAFXwcXFhXtNuZ7ipGXNxsfH0/rnKlAUZfmX
0Kb54Ycf+JUpgPMHwB8DRWMKy5KtXAAAALAnSKYkODjYtXy502N0k+MDX6Ex
M/kzTcpcEbGUMm+4XvKlAdAwaDBKrw8oLftMpjt27GDx5Ouvvxa+FLufbcWK
FUNCQqw3Nuvp0KGD2WTav39/VvmPP/5gJRMnTuQ3UlhYuHnzZnb5J0PBkDLv
/fv3DXa6e/fuWrVqcZXLlSs3ZcqU1NRUnWqims3MzPT19eXHTJZ2DW6X33//
vWnTplw1BweHF198kT2DBgAAAMAySKb0feyl5k1mv+aonx/jZpZETiFJ8/Gc
kiQrPJlGf1pyArB+OQ3jpeZNcateW2efydQCycnJjRo10vz3KZx2Ky8vLyws
7Ny5c1evXk1LSzNbPy4u7s8//wwODn769KlUzVKYvXfvHjV77do1+kNkuvLj
x48vXLjw999/cxe3AgAAAFgMyXTNmjVNarg8W2wgJxYsNXBk09gVo08NJU2D
P5RJKZkanEXDoMHQkJReK1AqSKZC5OTkdOnSRaN9Ign9SxlH6REBAAAAgGLU
n0wTExPDwsKCgoICAgLOa9ELmqRCmlXKxmNjY90ruhwfZTRFPpkr6HEwcTM1
WQsFxdJCv5IrWHONp10aDA2JBibJ2gNFIJmaVVxcPGzYMAqkw4cPZ8/B7N69
u9KDAgAAACVFaSk9ClCMapNpTk5OTEzM31o3b96MjIykD2qsFr2gSSpkc6ka
Vbasl9mzZvZq5mI6S96fUfK4UtN1Yj41X4f9JM4xf68kGhINTNr1CXJCMjWL
3UWnXbt22dnZlFJbt25Nk9yzTQEAAMAO7dBSehSgGHUm06dPn165cuXq1at3
796Nj49//PhxUlJSSkrKEy16QZNUSLOoAlWjyrSI2F4SExPdK7qce99MTnxq
/ORb7ifKV5MtIJkW+pWcHlyw1Ew1GhINrPRHhEEpSKam7d27l3JozZo14+Li
WMnBgwdx2BQAAMDOjdRSehSgGBUmU0pkgYGBt27dSkhISE5OTk1NzcjIyMrK
yuahSSqkWVSBqlFlWoTiqqiO1q5d276Bq5ADnXena3IMXYjKP65q8EpVnZ/k
z4Q+XIYGRsOz0hoGa0MyBQAAABCrtpbSowDFqC2ZPn78OCAgIDIykiLn06dP
WXf5+fmFhYVFPDRJhWxgVI0q0yK0IKVU4X218Wr+9SBBOTF1Xsk9jkxUuDdD
0I2SIqZp8s0dMGU/NDAanrXWMlgZkikAAACAKHfu3GEPI6MXSo8FlKGqZJqa
mhoYGHj37l3qKCsrKzc3t6CggHJocXGx/sipkGZRBapGlWkRWpAWp0aE9BUS
EuLk6CDwIaTsLNwiP6MVIqebj5yZC82fFcz90MBoeDRI661tsB4kUwAAAABR
Nm/ezJIpvVB6LKAM9STTnJyc4ODg8PBwipb0Oj8/31gm5WP5lCrTIrQgLU6N
CLkh0qpVq/o0F3QqL/t5NMvwE0jZD+XWQuO5lf08nKVJXyC0O/rp3dyVBmml
tQ1WhWQKAAAAIMo777zDkim9UHosoAz1JNPY2NiQkBAWSwsKCoq1hLwFVpMW
YeGUGhHyyJUBfXqs7CMiJ1IsfWj8hF5KpsXLzLQg5N5H/B8aHg3SSmsbrArJ
FAAAAEC4oqKiKlWqsGRKL2hS6RGBAtSTTIOCguLj47OzswUeLeXjjpzS4tQI
NWW6L6rmXtHl8gQROZFCJUVLY3PvTDWTTHMWl9wlSXh39EPDo0HSUK20wsF6
kEwBAAAAhLt27ZqGhyaVHhEoQCXJNDk5OSQkJDMzMy8vr7CwUFQsZWgRWpAW
p0aoKWrQRHeRkZH0mRf4BFLu567xi0kpmZpeNnWe5rGwu/JyPzQ8QkO1xgoH
q0IyBQAAABBu7dq1/GRKk0qPCBSgkmR679696Ohodh6v2AOmDHdDJGqEmqIG
TXR3/PjxulVdROVE+omdWXIXI4Ozbn9iZtmE2SXhVGyPNEgaqjVWOFgVkikA
AACAcAMGDOAnU5pUekSgAJUk09DQ0OTk5NzcXMsOmDLssCk1Qk1Rgya627Rp
U89mFcXmxKTPNP/PSLo0m0xjPhV9iJZ+ejSrQEO1xgoHq0IyBQAAABAoLy+v
YsWK/GRKk1So9LhAbipJpjdu3MjIyGDPLS1lMqVGqClq0ER3y5YtG9JK9DHT
lLkl4dTgLLNn896foXm2WHQypUHSUK2xwsGqkEwBAAAABLp48aJGDxUqPS6Q
m0qSKQ2D3ftIkmRKTVGDJrr77LPP3m9fTmxONHGtqNlkauIaVRM/NEgaqjVW
OFgVkikAAACAQMuWLdNPplSo9LhAbipJpiEhIewZppIkU2qKGjTR3dSpU0e3
1jzw1UROLwmV4dM092Zooj/VxM3UxM8uiZ/J2hN3n87XZC0sOQs3e1HJEU8q
pAqFfgZuwxtmPJkW+ZUsQr38j7YRaopeZCwoeQzNE+1BWOru0aySlmk8d7Xj
odboRZSvZlxbDQ3VGiscrArJFAAAAECgbt266SdTKlR6XCA3lSTT0NDQrKws
qZIpNWX6OlOdY6YUHvOWlGTGzIUlaZQyabI2MFJKfTir5BJRCon3Z2iufqz5
e3xJjKXkSPnx9iclP3e0r4+N1ERoy9ks/lwqoVnnxpa8puxJ+Td2ZkmzCbM1
iXNKzhBOnadJX1ASgXMWlxxX5cdeHDO1UUimAAAAAEJQuHB2dtZPplRIs5Qe
HchKJck0IiIiNTXV4kfGMNyDY6gpatBEdxZfZ0o/BmeZvQMSBdIci64zXb58
uTVWOFgVkikAAACAEH/88Yd+LGVoltKjA1mpJJnGxMTEx8fn5uaW/qkx1Ag1
FRsba6I7y+7N+3BWycFNy5Lpo1klR2PF9oh789ooJFMAAAAAIebOnWssmdIs
pUcHslJJMqWWIyMj6YXFJ/Ryp/JSI9QUNWiiO8ueZ2ri/rpm74Bk4r6+Jn7w
PFMbhWQKAAAAIESHDh2MJVOapfToQFYqSabkzp07aWlpeXl5Fhw25Q6Y0uLU
CDVlui+KrvRpF/WA0eJlJVeY6t/7iEumxmaxn6yFJZeXioqlNDzCAjvYFiRT
AAAAALPoe7ujo6OxZEqzqILSYwT5qCeZJiYmRkVFPeMdNhUYTllN7oApNUJN
me4rOzvbvaLr5QkiciJFy+hPjc4NM5dMi/zM19H5oeHRIGmoVlrhYD1IpgAA
AABmHTlyxFgsZaiC0mME+agnmebk5ISFhSUkJLCrTQWGUy6WsitMafHw8HBq
ymx3A/r0WNlHRE5MnFPykBdjc8OnlWRP0y1E+Zbc/ld4jzQ8GqSV1jZYFZIp
AAAAgFnTp083nUypgtJjBPmoJ5mS9PT0W7dupaSkcOGUndZrMJ+ycqrAxVJa
kBanRoT0tWrVqt7NXYXnxIhpJU+WMTG3YKmZFv7fvJLH0AjvkYZHg7Te2gbr
QTIFAAAAMMvLy8t0MqUKSo8R5KOqZEpYumThND8/Xyef8nGZlKpxsZT+FdhR
SEiIk6ODsafA6PxkLiw54mmiwt3ppnIr+yn0E3Rolf3QwGh4NEirrm2wEiRT
AAAAANMSExNNx1KGqik9UpCJ2pLps3/DaUJCAr3Oy8vj8qkOlkmpAlWjyqJi
KdPGq/nXgwTlxLiZZp75cn+GJtdcMn2ufe5MmrBnx9DA2r78olXWL1ifnSfT
sLCwWgJcuXJF6ZECAACAYvbt2yckmVI1pUcKMlFhMn2mPa03PDw8KioqLS2N
JnNzc1lE5dAkFdIsqkDVqLLAk3j51q5d276B+RN6ny3WRE43c/OiKF9NjpEH
yvB/crRNCUmmNDAanvRrFmRh58n0p59+ErKjSUlJUXqkAAAAoJiPPvqI+1bg
7e09iYcmuVlUTemRgkzUmUyZxMTEO3fuREZGxsfHp6amZmVl5WjRC5qkQppF
FczeiddE++4VXc69b/5AZ+o8M3WiPxX6DJrYmeYPm9KQaGAWvy9QnJ0n0ylT
pnC7kqVGrFmzRulhyur8+fNOTk5t2rQxViEmJmbChAktW7Z0dXV9+eWXaaf8
559/Cm8/IyNj0aJFnTp1qlSpUv369UeOHLl169a8vDyDlS9duuTj40O9VKhQ
oU6dOr179165ciV9bkW/KwAAgFIYP358YGAgvTh06JD+/2A3aNCA5vbs2bNJ
kyZKjxRkouZkylAIjY2NDQ8PDw0NvaVFL2iSCmlWKRufPWtmr2YuJkIi5c27
5g6YsryZtVBQMs1ZXHK7JNNXm/b0dKGBSbL2QBF2nkzZI7MdHBzS09OVHosq
0B8rSou0Tl566SWDFQICAiiQ6uyRHR0df/jhByHt09/DWrVq6e/T+/Tpk5mZ
qVOZvgYYPITdtGnT27dvl/atAgAAiGcsmSo9LpCb+pOpVdE3RveKLsdHGQ2J
92doMhaYz5uPZgmqxn7+f/buAzyKen0ffhITekchgD+qoNJUOirHIygiNhAF
PYoe7A1FETxHEBBQQSw0CzWoIMpBaQKh1z8tL0JIIb1XYsomppd5n91nmWx2
Z2ZnktmdJNyfay6uZObbZjLZzM20pPfM76CRW0qDoSHRwIzeNlB913IypdX3
8fGhPyg333yz0WOpFS5dutSjRw/+IyuZTJOSklq2bMlRdPr06du3b//ss89a
t27NVX7//Xfl9vPy8nr16sWFn3rqqZ07d+7YseOxxx7jOXfeeadt4WXLlvH8
Nm3aLFq0aO/evRs3bhwxYgTP7Nu3byHOnAIAgNshmQK7xpMpoYPAbtc3LJS6
S/SvmeaToWrCZvJ7ah9tJFge0hv2lvQTk2gYNBgaktFbBWrkWk6mZ86c4T8o
zz77rNFjMVhxcfHcuXM5pysk03fffZeX+vn5iTMpz7Zq1coxWjoS7+qdOnWq
7XxKqTw/Ojqa55SVlTVv3pzmUMuJiYliyYqKikmTJnHhdevWVXt9AQAAqgfJ
FBiSaW5u7q09u713p5djSFTzllKeUqd7ZKh7AQ1POf/xiJgqcZEwDePWnt3z
8vKM3ipQI9dyMl2xYgX/QVm2bJnRYzES5cG+ffvypvD29vb09JRMpuXl5XzC
tGPHjvS17aI333yTq1+4cEGhowcffJDKXHfdddnZ2bbzjx49ytW/+eYbnnPu
3Dmes2DBArtG4uLieNEbb7xRzRUGAACoLiRTYEim5OzZs40aeO95pjIhUmak
5Jij+gLdKzM80t7XkEz5AuCUqtf00gBoGDQYo7cH1NS1nEwnT57Mf1Cu8ZfC
/P7777wdunbtevr06X/+85+SyTQoKIiLzZgxw24R7UK86KOPPlLoiFrYsGHD
0qVL7ebv3buXq3/33Xc8Z/fu3YMHD+7UqdO+ffvsCtNOy4XHjRuneVUBAABq
BskUGJIp+/rrr9s2axA5tTI2Jr+nIWZmztRWnqbyOVXCL3VNA6BhGL0lQAfX
cjK95ZZb+A9Kx44du8t4+umnq93+xIkTWzrTu3dvHdeoeiiZ+vr6fvnll/n5
+fStXDL18/PjzbVlyxa7RaWlpbxowoQJWnununwulcTHxzstf/DgQS48d+5c
rX0BAADUEJIpMCRT0ZTnJ3e/oWH6++brcqPedv48XrurcynMakqmNBXNNl8w
XDDLgzqlrmkARm8D0Mc1m0xzcnL4slVlr776arW7GDNmjNP2O3TooONKVQ8F
0kKbpwnJJdMlS5bwmA8fPuzYCN8WOnToUJWdFhQUnDp1as6cOf379+dmJ02a
5LRWeXn5kCFDuPz+/ftV9gUAAKAXJFNgSKYiWrWxD9x3W6eGwW84eauL45T3
X7XPSnIMp9QddUpd1+Nte625ZpPpoUOH+K/JoEGD3pV3/Pjxanfxyy+/fOxM
LbzFVS6Zzp49m7dYYGCgY60uXbrQon79+qnsRTwDy55++umKigqntaZOncrl
H3roIZUdAQAA6AjJFBiSqa2srKwHR4/q2a5hvMaYWTjLI/rt6iRT6oi6o06z
s7ONXnvQzTWbTBctWsR/TVS+iPPaIZdMZ8yYwVssJibGsdZtt91Gi3r06KGy
l3nz5nlYnoYk/ll//PHH+XJiOXPnzuWSrVq1Sk5OVtkRAACAjpBMgSGZ2snL
y3t64hPtWzY48ryGgFnykUf4W5pjKXVBHVF3eBhvPXPNJlPKQfzX5NKlS0aP
pXaRS6ZiMIyIiHCs1bNnTw/La0ZV9pKTk2MymYqKio4ePdqvXz/lC3rLyspe
f/11LtOsWbMTJ05oWiMAAAC9IJkCQzJ1VFBQ8OmnnzbwuW7+vWrfGlMx13xR
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
sbGxVJ7+TUlJocBL8TMvL4/iMH2RkZFBAZZy7uXLl2k7UzEapL5bG9wDyRQA
AABcSzKZ9uol1OwhJ4ZAMgVmeDLlC3qzLU/o3Rlc3GqB0HBO9SeqTo1QU9Sg
3KW8LCgoyPE0qNwrY06cOEGZUXIDmkymhIQETducuqAoyjmU6lJKjYuLoy9S
U1MpuhYVFXGxAwcOXLp0Sd+tDe6BZAoAAACuJZlMafr8c6NHphmSKTDDk2nh
1dOmf5kKYzOKVv6/ksZzBZ+PqjNRRapOjVBTyidMCWXANWvWlJWV2W4NiquS
W2nHjh1yd4mmpKRQxtT950IDo+HRIHXf2uAGSKYAAADgWnLJtHlzITXV6MFp
g2QKrDYkU77blB/SG32laOkJ83N6vWdrm6gKVaTq/EhehTtMRdu2bYuKirLd
GsHBwY6bKDMz8+DBg3IbMCYmhraJ7j+X6OhoGp7umxrcA8kUAAAAXEsumdL0
/PNGD04bJFNgtSGZFtq82zQtuzAqvWhrYPEtX1dcN1tQOVFhqkIVqbrcO0wd
BQUF7dmzx3ZrSN4xSuk1ICBAbgNetpB8blJN0MBwKW/dhWQKAAAArqWQTD09
hbNnjR6fBkimwGpJMi2seuY0NqPoQmLRf/eWdvqswmuWoDBRASpGhamK+rOl
jOLk+vXraaXErRESEuK4ic6fPx8TEyO3AYODgwsKCsLCwmzbqSFqigZGw3PR
pgZXQzIFAAAA11JIpjQNGSJIPTuldkIyBVZ7kmmhTTj9y1SYlFUUmV50PqHo
m/9XMnFTWe+vK1p9XOEzW6CJvqBvaSYtogJUjApTFU2xlJ07d872OUiSV/Me
O3YsPT1dbgNGREQIlif0RkVFJSYmVuOlpY5oSDQwl21mcDkkUwAAAHAt5WRK
k5+f0UNUC8kUWK1KpoU24TQ7z3zylCJn9JWi0JSiwKSigPiis7Hmib6gb2km
LaICVIwKVyOWkry8PD8/P/ERRpJPQNqzZ4/CxbrR0dH8RUVFRUpKSnh4eEFB
QU1+IrSRaUg0MNdsYHAHJFMAAABwLafJ1NdXyM01epSqIJkCq23J1NpdfmU+
/ctkvvk0JbsoMbMo/i/zRF/QtzSTFomZ9O/qXvoaHBy8ZcsW3hqhoaGOb43Z
vn27wgaMi4uz/TY3NzcsLCw1NbXaJ09pMDQkXTcnuBuSKQAAALiW02RK04wZ
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
ivx/C4888ojWit7e3h6Wc5Gaak2cOJFqtW/fXmt3vKcNHDhQa0U67KGK48aN
01qRz5m+9dZbmmrx5d8dO3bU2t2QIUM8LNc5a61IfVFF6ldTLVovD8s5U63d
8dl52qpqCiOZAoAIyRSYIcm0AKCOqN4ejmTKcJ+pHNxnKgn3mcrBfaYA4FrF
xcLBg8L77wtDhpi/djskU2BuTqbiAX/+VX8D1DLizlntfIpkimSqDMlUEpKp
HCRTAHChnTuFpk0FDw/rdPiw+4eAZArMbcnUNpBSI7m5uSaLnKuyAQwl7oq8
Z9IuKqZUrfkUyRTJVBmSqSQkUzlIpgDgQhERlbGUphkz3D8EJFNg7kmmYizN
y8ujI//MzMy0tLTk5OTExMT4q+Li4mItYgDciPe6eBu0W1Imol2UdlTaXWmn
1RpOkUyRTJUhmUpCMpWDZAoArtW9e2Uy7dfP/f0jmQJzQzLlQ3qqaDKZMjIy
6GgzNTWVDviLiooqKiqM3gAA9uhok/Zb2kVpR6XdlXZa2nVpB1YfTpFMkUyV
IZlKQjKVg2QKAK5FfwFtT5smJ7u5fyRTYK5OpnyqlGrRcX5aWhodalIgNXql
AdSi3ZXPn9IOzBf3qgmnSKZIpsqQTCUhmcpBMgUA19q5s0oyXbfOzf0jmQJz
aTIVz5bSUT2fezJ6dQGqg8/1czhVc+YUyRTJVBmSqSQkUzlIpgDgWn//LTRo
UJlMn3zSzf3Pnz/fMZnSnxI3DwMM5+pkSkcmJpMpLS0NsRTqNNqBaTemnVnN
aVMkUyRTZUimkpBM5SCZAoDLjRpVmUx79XJz5++9955jMq3GpxDUda5LpuIj
j+iQPtnt16sD6I52Y9qZxQciIZk6PbAcN24c/WX55JNPLmp0/fXXU8UDBw5o
qrVt2zaq1bVrV63d/fe//6WKEydO1Fpx1KhRVPGLL77QWrF58+acFzTV+vXX
X6lWr169tHY3ffp0qvjss89qrci5Zvny5VorNmrUiCqePn1aU62ffvqJavXt
21drd1OnTqWKU6ZM0Vpx2LBhVPG7777TWtHLy4sqnj9/XlOtdevWUa0BAwZo
7e7VV1+liq+99prWinfccQdVXL9+vaZadGBAtWgdtXZHW5Iq0lZVUxjJFKB2
+fpr4a67hAULhIAAwe3PgUEyBebSZEqFs7OzExMTi414aS+Avmg3TkhIoF2a
r+lFMnV6YEkh0fEPDQAAQTIFABGSKTAXJVO+Fy8vL+/KlStaL8kDqLVoZ6Zd
mnZs5btNkUxZnz596C9L586db9PI29ubKvbu3VtTrZtvvplqNWzYUGt3nTp1
oopt27bVWrFly5ZUsUuXLlor8rWgtH001erVqxfVatSokdbuOnbsSBWvv/56
rRVbtGjhYTkNrbWip6cnVezXr5+mWjfddJOH5cYird35+vpSxXbt2mmt2KxZ
M6rYvXt3rRX5qKl///6aavXo0YNqNW3aVGt37du3p4r0r9aK1BdVpH411aL1
4hXU2h1tSapFW1VNYSRTABAhmQJzXTLNz8/Pzc2lI/ns7Gyj1xJAH7Qz0y5N
O7byBb1Ipgz3mcrBfaaScJ+pHNxnCgD1G5IpMNclU76UNy4ujr41ei0B9EE7
M+3STi/oRTJFMlWGZCoJyVQOkikA1G9IpsBcnUxjYmLKy8uNXksAfdDOTLs0
kilDMkUylYNkKgnJ1BaSKQCIkEyBuS6Z5uXlZWZmRkZGGr2KAHqiXZp2bL7V
FMkUyRTJVBKSqSQkU1tIpgAgQjIF5upkGh4ebvQqQt1AR90rV66kjKD1YM/N
aJdGMmVIpkimcpBMJSGZ2kIyBajVsrOF//1PiIpyT29IpsBcnUzDwsKMXkWo
GxYtWsQfRLSPGT0WJbRLI5kyJFMkUzlIppKQTG0hmQLURoWF5lea3nUXfcwJ
Hh7mr90CyRSYS5MplUcytePn50eHT3SgaPRAtHHDsOtQMqUdG8lUQDJFMpWH
ZCoJydQWkilAbVRRIbRrZ86kPFFEdQskU2AuTaYZGRmhoaFGr2Ltct9999Hv
2k033WT0QLRxw7DrSjKlXZp2bCRTAckUyVQekqkkJFNbSKYAtdTkyZXJlD4H
3PLyRyRTYEimboZkKgfJtM5BMkUylYNkKgnJ1BaSKUAttWlTZTKlacsWN/SJ
ZAqs3ifTpKQkOtrJycmxm5+bmxsYGEhHeo6L7JSUlFDJqKioiooK5ZJq2qx2
xCsvL6d1OXfu3JUrV1SWDA8Ppx+EyvapcEhICK2s5FKVw6bq58+fp3YcF9H+
QPNpf0tLS5PcksrJVP1PwdWQTEVODyxph6EfaOPGjVtq5OnpSRWbN2+uqVaz
Zs2olpeXl9buGjVqRBUbNGigtaK3tzdVpBSmtSKvYIsWLTTVqkMryL/LWlew
adOmfCiitbuGDRtSRfpXa8V6v4KcoKlfTbVovXgFtXbH/yNBW1VNYSRTgFoq
I0Pw8qpMpi+84IY+kUyB1bNkSqntOotVq1atXr26V69evG+vX79eLBMQEDB6
9GjbPf/ee++l9OrY2qFDh4YMGcKHBPzH/f7775d8D46aNrt3784HCeKvG+nT
p4/TlSorK5s/f76vr69Yt3Pnzs8884xjRC0tLZ07d65tSR8fnyeffDIiIsKu
5FtvvUW9d+rUiX5Yzz//fPv27bk8HVFQ+fT0dJXDFtuhfWPs2LF83EXDs+2L
MvIDDzzAh+KM2ly+fLndkOSSqfqfgnsgmYqcHlh27drV8Q8NAABBMgWovQYP
rkymnTq5oUMkU2D1LJmmpqbyzjx+/HjbPCUm08uXL7dq1cpx56eZdkNdtmyZ
2IKXl5dYslmzZpSVbEuqbPPGG290LNOzZ0+nK/XKK69I/lmnAHjhwgXbki++
+KJkyS5duiQnJ9uWfPXVV2l+27Ztn3jiCcfyPXr0KCoqUjNsbqd169ajRo2y
HZjY0aVLl1pePb9g55NPPrEdkmQyVf9TcBskU5HTA8tJkybRD2v16tU5GvF/
lYSFhWmqde7cOd45tXb3xRdfUEX69dFa8dFHH6WKP/zwg9aK/IkRFxenqdaJ
EyeoVt++fbV2R79rHpbLlbVWfOCBB6jiL7/8orVi48aNPSzXY2uqdfDgQao1
cOBArd3NmTOHKk6bNk1rRdpLqeK2bdu0VuSPo8zMTE21du/eTbXuvPNOrd19
8MEHHpbLlbVWHD58OFXcs2ePplr0t54/crV2R1vSwxI51RRGMgWovT76qMoF
vZcuubpDJFNg9TWZeliuIaS/47t27Tp58iTNFyxnVLt37+5hOZM4d+7c06dP
nzlzZt68eXxBV7du3cSzkDR+Pv1HMw8fPlxSUhIfH79y5Uo+GhkxYoTYo/o2
ExISIiMjhw0bRvMp7kVaJCYmKq/R/PnzeXX69+///fffUwr+3//+9+yzz/LM
3r17iyU/+ugjnjlo0KA1a9bQUf0ff/zx0ksv8czbbrvNZDKJhTlRMooP+/fv
p5Hs27evT58+PHPJkiVqhm3bDm2Wb7/99pQFL6WN1qlTJ/5smTFjBm3JoKAg
Cpt8kSfx8/MTh+SYTNX/FNwJyVTk9MAS95nKwX2mknCfqRzcZwoAbkUHchRI
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
SKmpqSEhIfHx8UavLkB1JCQk0A5Mu7HTZx8hmdpKAQCQgWQKACIdk2lycjJX
b9KkiZp7LlJskmmrVq3sXoGBZOpmLk2mhVev6c3KyqKf++XLl4ODg3Nzc41e
aQC1aHelnZZ2XdqBaTd2eh0vkimSKQCogWSqVlGR0KyZ0KCBqmnJEqOHC1Ad
OibT7du3c/W7775bTfkUSzKlGHvbbbfRF2PHjrVd6phMw8PD33//fSr28MMP
f/jhh/StuCgoKGjGjBmHDh36/vvvR48e/d///jciIiIkJIRmnjhx4syZM9On
Tx81ahT9e/bsWSofGhpKZWjO008/vXfvXtt+6Zjzq6++eumll+69994nnniC
itnmUDXJlFoYP378OBV27NihZkO5h6uTqW04TU1NjYyMpB7pUD8pKYlmlpeX
G70BAOzRbkk7J+2itKPS7kqfKrTrqo+lSKZIpgDgFJKpWnQEa/tkVOWp/j5o
VMLRo8LTTwurV8sW8PcXZs0SnntOWLBAOHTI/CQfZWVlwubNwsaNSlNkZGX5
khKBAsvcueYu3n1XWLVKSEiQbjkkxPzgoLfeEqZMMd+wuXu38xs2Ke+8+abw
9tuC0zfIL1xoLvnOO4LcK+xpO3BTxcVOmjKOjsl01qxZXJ3aVFM+xZJMW7Vq
deHCBR8fH/ra9olAdsn022+/5TJeFvRF48aNxfJbt26lOX369BFX4X//+x/l
Pg/L0wu5ImvWrJmfnx91aru+lKm5nXPnzrVt21bcCOIpYJrPBdQkUzybV0F+
fj5f1puRkZGYmEiH+oGBgWfOnDl58uTx48ePHDly2OKQxUEAN+K9jvdA2hVp
h6TdknZO2kVpR6XdlXZavojX6e2lSKZIpgCgEpKpWitWVAbPhg2dTFFRRg/X
XWJihLZtzdvkmWckllJGu+8++9g+ZIiQmanUZna28+z/+efWwpSLb7rJfmmT
JvanrSm9vvqqQAnLruRddwkKTwelWoMGWUs6fYp7167WkhQ/Jc2ebS2g+ChX
Y+mYTPmh62Tz5s1qyqdcTabC1Qeht2zZkg7/eKltMg0ICKB0SaNavHgxR5uF
CxdSPm3YsCGfOeVkyqdr161b98477xQVFXEyJffee++lS5cuXrx411138Zxh
w4bt3LmTBjBx4kQPmwebP/TQQ/TthAkTqNni4mI6TB04cCDNmTx5MhdQk0yp
2VbqLF++vBrb2UXck0wLr95zajKZsrOz6VA/LS0tKSmJ4nysRUxMTPRVUQBu
JO54tBPy3ki7Je2ctIvSjkq7K+20au4tRTJFMgUA9ZBM1XruOWus0P5KrHor
LU3o18+6WSST6WOPVW60F14Q7rjD+m3fvkrnDU0m58n0m2/MJRMShDZtrHOG
DzdHwvHjK+Pnjz9WtjljhnUmBZ9nnzWn1J49rXP69JE9jTtrVmWP6pOpp6dw
+LBEgWspmVZUVPB72ZwGN1GKTTItKSnha3rHjBnDS22T6SuvvEJfv/jii7bV
KS2KMzmZNmnShA4gxQKcTGkmxSie4+fnR3O8vb2Tk5N5Dr8VrkePHoLlHYWU
TPv3759i8xab9evXU4GRI0fyt7jPtObJVGyH5OXl0dF+Tk4OHfZnXvUXgKHE
XZF2S9o5aRelHZX3WK37OZIpkikAKEMyVevWW62x4urpkmvdDz9UpkLJZHry
pHXRww9bL4WtqBCmTrXOVH7Fdna2+byq3fTTT5UhlIMtpV2e8/XXlXUDAszn
TGlm27bWi3Xj481pkQOymDKoBYqoXF3yXNWJE1XOsapPpjR16ybk5dkX0DeZ
0nh+/VV47TVB4wudlemVTCMjI7luW/opqJNik0yJeE0vv3HGNpneeuutHg5v
iD506JDH1TdxczK9/fbbbQtwMu3Xr584h7qgOd27dxfnpKen05xOnTrZViwr
KwsPD9+1a9fixYv/aXnfwXDaAy2QTPVKpozPgAPUcuov37WDZIpkCgDKkExV
MZms0UYuxVxTCguFMWPsT2I6JlPxLHNwcOXMkhLr1b9Xj+3VEk+P+vpWpksK
gHx5sJ0PP7R2zZdVU4jmb/fsqVKMwmODBub5FFHt0E/cNmlqTaY0vf66fQG9
kumpU+atJ6ZmXY9z9Eqm27Zt47riSU+nUqomUzJv3jya06JFi4SEBNtkymdj
7fJgREQEzWzXrp1wNZmOHz/etgAnU9uXpV66dInmDBw4UJyTmZlpm0yTkpKe
e+65Ro0a2W0QJFPR37omU4D6DckUyRQAlCGZqnL4cGXiOH3a6NEYLT3duiko
Km7fLnTvLh3u+HLZO+6wn//aa9bqV65o6JRSBtf69VfrnPx8YdgwoXNnYeZM
+8LffGMtfPKk9ds+fcyJODvbvuQNN5iL3Xef/XyO1S1bCtOmaUumAwZYE7Sn
p/lxT7bEa4Mdh6FJUFCVCPzRRzVqrSp932eqSYpDMi0pKbn99ttp5gMPPPDI
I4+IybRHjx4eDu9IPXfunHgClJPpU089ZVuAk+mECRPEOdSCQjKlw8jevXvT
t+3bt588efKyZcvokHLPnj1IpraQTAHUQzJFMgUAZUimqixaZE0BPj7OHy1b
72VkmCMb5Sy+X08ymf79t3WLvfqqffX1662Ljh1T26O/v7WKyhNwHGMpGyqf
naRow83aPTyWwq94p+pXX2lLpmPHCps2Wat06VLlml69kimh6CQm08GDa9qa
jVqVTAXLjZ+2j9LlZDpmzBj6es2aNbYlV65cSTP5I0uXZMqXB7dr1+6vq/el
kuXLl9PMIVdP0yOZIpkCqIdkyhz/ygAAMCRTVehollPAgAFGD6V2KCmp/Jov
qbW7mjcx0brFKI7Z2b7duuh//1PbHT86iZKmzTsrZR06ZG3fJnFIKCsT7r3X
WnLXrsr5SUlC69bmmU88Yf62GsmUjBsnEcx1TKYvvliZTL28BJvn/NRQbUum
5OOPPxZHwsn022+/pa+7du2alpYm1r3xxhtp5tKlSwWdkunmzZs9LCdMi68+
rSs+Pr5z584ellfP8BwkUyRTAPWQTJFMAUAZkqkqnTtbU4C3tzl0KExz5xo8
1NxcYcQI832IaiaKXTUnmUxDQqxbzLGL48etizZsUNV+QIC1/IMPOi8cHGzN
lRSmzp5VKvnKK9ZmH3mkcmZFhTBqlHlmhw7WM8LVS6aUmPh2WpoOHLAW0DGZ
Uqi3vaB306aaNnhVLUympaWld9xxB4+Ek2lZWdmAAQPoW19f32nTpr3zzjvt
2rWjb5988skyy/OgdEmmlEP5DtPhw4cvXLjw5Zdfpu743akUV7k8kimSKYB6
SKY4sAQAZfgAcY5Sht3TfhSmqg9dMUBqqobRvvCCDj1KJtPwcGsXtk/NZWLS
rHo1piwxQv7xh5OSFy+aE6XTuy/Ly4W33rIWa9dOsHkniPDll9b5e/da51Qv
mZKff7ZW7NzZ/N8Fgq7JlFqwfW6w402+1VULk6lgiZANGjQQk6lg/g+Y3Fde
eaVhw4Y8ws6dO1M+pQzLS7dv3+6YTHfv3k0zJ02aJM4JCQnxuPo4X2b3BKTf
fvuN0ih3QZl05MiRoaGh3bt3p2/PnTtHBfr06UNfx8XF6bolagUkUwDdIZni
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
ZuY5dPw/dKj1UTY0de9e+STbgQOtM729hWPH3LcuUCf071+ZTGm3qYFankwv
XbrUo0cPHpVkMl21ahUv9fX1Xbly5cGDB7/++uu2bdvSHC8vL39/f+X28/Ly
evXqxS089dRTO3fu3LFjx2OPPcZz7rzzTtvCy5Yt4/lt2rRZtGjR3r17N27c
OGLECJ7Zt2/fwrp85hTJFEB3SKY4sAQAZfgA0Z9CMiVffmldanuQHBtrPnNK
x/9ivrjnHuHixcoCR4+aL+ilWOrpKXz/vctXAeqWmTOrnDaNiKh2S7U2mRYX
F8+dO9fHx0cclWMyraio6NKlCy1q0aJFLP1OXRUYGNigQQOaP3nyZOVe1q9f
z41PnTrVdj6lVJ4fHR3Nc8rKypo3b05zWrVqlZiYaDuGSZMmceF169bVZJWN
hWQKoDskUxxYAoAyfIDUIkVF5jR67pz0WynLyoTUVA2PCIZrx+HD1kzaoYPw
73+bT81XV+1MppQH+/bty4Px9vb29PSUTKZnz57lMrQWdovoo4zmt2vXTrmj
Bx98kNc3Ozvbdv7Ro0e55W+++YbnnDt3jucsWLDArpG4uDhe9EbNrqw2FpIp
gO6QTHFgCQDK8AECUOcVFwuLFwsXLtS8pdqZTH///XceSdeuXU+fPs0x0zGZ
mkymvXv3Ll68ODAw0G7R0KFDqUr79u2VOwoKCtqwYcPSpUvt5lOzPIDvvvuO
5+zevXvw4MGdOnXat2+fXWE6/uTC48aN07aetQmSKYDukExxYAkAyvABAgCi
WptMfX19v/zyy3zLnddyyVTO0aNHvb29qcqUKVOq0XtpaSmfSyXx8fFOyx88
eJALz507txrd1RJIpgC6QzLFgSUAKMMHCACIamcypUBaaPM0IZXJNCEh4aef
fnr66aebNm1K5Vu2bHnmzBn1nRYUFJw6dWrOnDn9+/fn7TBp0iSntcrLy4cM
GcLl9+/fr7672gbJFEB3SKY4sAQAZfgAAQBR7UymdlQmU34akrgKjpf4KvPz
87PdCJRwK1S8s0l8Z81DDz2kqbvaBskUQHdIpjiwBABl+AABAFG9SaZlZWXe
FuJatGnTZs+ePep7mTdvHq+72MLjjz+eL77IScrcuXO5ZKtWrZKTk9X3VQsh
mQLoDskUB5YAoAwfIAAgqjfJlCQlJZWXl6ekpMyePZsjKv176dIllb3k5OSY
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
Dpp1uMSMQ5mqxmzevLnfIrfddptM//77762/ynTevHl67po1a2RKvXr13D9M
mEKZQqFMAeMoUwBAzvDVV1+pTGjVqpX7pdx/znT9+vV6ir0u586dK9+3aNEi
1OIOZTpmzBj5/pFHHvFbpGPHjjL93Xfftf4qU/tFcDZs2CBT6tat6/5hwhTK
FAplChhHmQIAcjP3Zbp582Y9xV6XP/30U570U++GWtyhTD/99FP7UcFa69at
ZfqUKVOsv8pUalTPpUyzEGUKhTIFjKNMAQC52fmX6Z49e/KknyxX/qrqAV9/
/XXRokXVAFWm8t/AZVetWiXfV6lSJSUlRS+bnJxcvnx5mb548WKLMs1mKFMo
lClgHGUKAMjNzr9M09LS1AVl9F5R0bhxY5ny4osvyvcjRoyQ759//vnAZeUP
sWSp3JQxetkhQ4bIlNKlS6tcpUyzFcoUCmUKGEeZAgBys/MvUyv9gN7Y2FiZ
8re//a1Xr141atSQ7+Pj4xMTE2XupEmT5GZcXFyjRo3kb67fsl9++WVMTIxM
ad269YABA1q1aiXfFy1aVP91pkyzFcoUCmUKGEeZAgByMzdlWqdOnaBlet99
9+kpS5YsUZcZVW655RbdkidPnmzatKnKz1GjRgUuu3Dhwssvv1wtKAHbuHHj
pUuX6rn169eX6b///rueospUpp//w0ekKFMolClgHGUKAIAphw8fXrNmzaFD
hwJnSZ/u378/LS0t1LLy3lXe6yYlJWXmBuJ8UaZQKFPAOMoUAADAJcoUCmUK
GEeZAgAAOKhZs2aTJk1++uknK3SZylwZU7169azeWFwglClgHGUKAADgoE+f
PqpApT0HDx4cWKbFihVT3zzxxBPR3cX8+fMnu7B69WqzDw1Ro0wB4yhTAAAA
Bz/++GNgjQY1Y8aM6O6iQoUKbtbfr18/sw8NUaNMAeMoUwAAAAdnz54tXry4
m3I8cOBAFOvft2+fy/KdNWuW8UeH6FCmgHGUKQAAgLMHHnggbDbWqlUrupXP
mTNHraFu3bpLHUndmH1ciBplChhHmQIAADibMmVK2DJ99tlno1t5//791Rp6
9+5tdrOReShTwDjKFAAAwNmhQ4diY2Ody3T27NnRrbxly5ZqDdOnTze72cg8
lClgHGUKAAAQVqNGjRyyVLr12LFjUaw2LS2tZMmSaiXbtm0zvtnIJJQpYBxl
CgAAENawYcMcyrR+/frRrVZqVK1B+tTsBiNTUaaAcZQpAABAWAkJCQ5lGvX1
XKZPn67WcMcdd5jdYGQqyhQwjjIFAOQGS5cuvffee2vVqlWoUKFy5co1a9Zs
6NCh8nfQ5eJJSUkDBw5s2rRpyXQNGjQYO3bs6dOngw7euXNn165dr7rqqoIF
C8o9du/efeHChee/2o0bNz700EOyQlltlSpVWrVq9cUXXwQd2a1btw4hjBo1
yuVDRqBKlSqFKtP58+dHt87nn39eraFMmTJtQ7vnnnvMPpbsY/jw4Q1ckP9n
s3pLM6BMAeMoUwBAjtelS5egNVG9evUNGzaEXTwhIeHKK68MXFwmSoT6Df7x
xx+lHP1GxsbGTpw48XxW+8477+TPnz9wsARLamqqfeShQ4dC1ZO4++67I332
oPXs2TPos1qgQIFQ/54Q1i233OLw89Jq1qxp9rFkH6H+9/QTFxeX1VuaAWUK
GEeZAgBytrFjx6p3tpdeeumbb775/fffT5069bbbblMTr7322v857jk9c+aM
RIEaXLt27Q8//HD27Nk9evRQU6pWrWpPkr179xYvXjxPeoq+8MILMnL48OH6
/DZffvlldKtdu3atylJ5c96/f/8FCxZI51apUkUNHjp0qH2DZa6aXq1atWsD
PP/88+ae2lznm2++CRpNjRs3jm6FKSkphQsXViu5zJFEsX3B1NTU+fPn9+vX
7+GHH+7QocOQIUPk9+fUqVMmHqWTKVOmjBgx4tChQ3pKcnLyea5z4MCBV7tQ
r16987wjsyhTwDjKFACQg507d+6SSy6Rt/0lSpTYs2ePnp6Wlibv51URfPTR
Rw5rkPf8alirVq3+Z2tYaUM1fcCAAXpi79691cSPP/5YT1y/fr3cu0y8+eab
o1ut3lU3a9YsPfHgwYNlypTJE3DmnLfeeksN3rFjh7snCW4lJSUVKlQosEwH
Dx4c3QrXrVun1lCxYkX3S8k7t6pVqwZuRo0aNVatWhXdlrh04403yh0lJCSo
m/L/Trly5TL1HrMtyhQwjjIFAORga9asUW/aX3/9db9Zu3btUrOeeuophzU0
bNhQxhQsWFDG+81SlxGpXLmyupmamqp2mJYvX97vCNunn35a3devv/4a6WpF
3bp1ZUqpUqX8Rj7zzDOBEdqxY8c86TuIHR4Uota2bdvAJFy2bFl0a/vwww/V
Gtq3b+9ykXnz5qkd6BKnb731ltyUN3Lvvffe9ddfLxPz5cunf8cyQ5cuXeRX
V/++5c2bV+4x8+4uO6NMAeMoUwBADvbtt9/Wr1+/QoUKgSeokT+CKgratWvn
sAYVm7feemvgrP79+6s1qMtQbtiwQd3s27ev30j5U6tmvfrqq5GuVtx+++1B
y/TZZ59VI/fu3asnXnPNNTJFFnF4UIja+++/75elRYoUOXv2bHRr6969u1rJ
8OHD3Yw/fvy4/DKrkj158qR9lvw+//3vf5dZDz30UHQbEwXKNOw7bcoUcI8y
BQDkTj/88IOKgkGDBoUaI2/+1ZiOHTsGzh0xYoSaO2fOHLn58ccfq5szZ870
G5mSkqJm3XvvvZGuVowZM0ZNsR94nJiYKK0qE2+44QY9MSkpSWJBJr700ktL
ly4dOnRoly5dBg4c+OWXX0Z9ih7Y7dmzx69M77zzzqjXVqdOHbUS+W10M/6d
d96RweXKlZNEDZy7ZcuW2NhYmSsRZKX/U0nfvn0XLVokNd2yZcuXX35569at
Mv3o0aOjR49+/PHHmzVrdt9998n0P/74Q61h1KhRssjGjRvtq/39999l4oQJ
E+T7cePGyffyu7dt2zb5JiYmRv1TzCeffPLuu+/KNytWrLAvu3fvXpk4duxY
hwf13nvvtXPhQha3G5QpYBxlCgDIhVJTU2+66SYVBQsWLHAYqervlltuCZz1
3HPPqTVMnjxZbo4cOVLd/PHHHwMHq4+7NmjQINLVin379qmz+Ep39OzZc/r0
6f/85z8lQNQwKQK97OrVq/OEcPnlly9fvtz1M4SQateubX9i33rrrejWk5SU
lC9fPlmD9F3Q0gzUuHFjGd+7d+9QA7Zv356Wlqa+/+KLL2RwrVq19KZ+/vnn
a9asUb97Qv0jhihcuLBMt/76oLTf8e1yUyb279/fsn3OdPHixfYnoXnz5uqj
034nfx42bJhM7NWrl8OD4ty8ABTKFACQC+lPaLZp08Z55K233pon2Mf3Tp48
GR8fr1YyZswYmTJgwAB1U58fxk6dSve6666LdLXK6dOnpWoD367PnTvXvviE
CRPsc2vWrCkpoc/+KiWydu3aSJ4nBKEPt1akUKJbjz7G+8orr3S5iIpK/U8W
zlSZ5kk/aPyjjz567rnnzpw5I7/wedL33W/ZsiU5OXnRokX16tWTKY8++qj1
1xHpci/6+GT5Rt2pOrbcfgakU6dO5U0n30hl7969OzY2Nn/+/FJhehvUv6g4
/9bJhpVwoXz58i6fpQuDMgWMo0wBALnNoEGD1Dt2ebu7b98+58Hvvfeezof1
69ericeOHbv77rt1m4wcOVIm9u3bV90MelJctaOtRo0aka5WyNvali1b6ukF
ChTQ31etWlXt7VKefPJJNf3mm2/W5yI+cuTIAw88oKZff/31UX8oEsrKlSv1
81+yZEm/s125pw/SVlUYlnSlGv/zzz/bp48aNWro0KGvpxuSbvv27dZfZVq4
cOHDhw+rkfLGT8pUfgcSExP14pMmTcqTvtNT3VTt+fXXX6ubs2fPlpu33Xab
fa7+txe/z5mqD0TrnfhqD36tWrUifGIuDpQpYBxlCgDIPc6dO6fbrWjRom5O
qSrdoXdW5s+fX75v0aKFugqMPirygw8+sGzBqz7N5+eKK67Ik3751EhXK265
5RY1RbJi8+bNaWlp0hqDBw9W52gtVqyYbuHff/992rRpo0eP9vtUqTxwfQzq
0qVLz+c5hPzs1PV68oQ7fZazhx9+WK1k3LhxbsbLD1Edf+u3o1z/wmifffaZ
9VeZ1qlTJ+iqtmzZIusZMWJE06ZNZVijRo3ULPVR1g4dOqib9957r9yUelU3
nctUfvfy2K6OpE5Jrf+BJYehTAHjKFMAQC4h7wz/9re/6V1d7j90efDgwcBr
hUhLqt1JOgT0kbRBrymp8sF+SVOXq12wYIG62aRJE/0RQkVFhOjevXvYR6F2
jQlZyuUDRyiPPfaYejLffvvtqFei/63A/UVIK1asKOMHDhxon/jJJ5+M/4v6
BxB7mfpdj2bv3r2dOnUqWLCg3y+eLtNjx47J3EKFCp08efLo0aNxcXFFihQ5
deqUmutcpklJSeqk0zt27FCHAcuA/fv3R/X0ZHeUKWAcZQoAyA0OHDig3lSL
KlWq/P7775Gu4bvvvpMieOCBB4YMGbJixYqUlJQpU6aoFapTHs2dO1fdlJF+
y0pRqr1drVu3jnS1r7/+uroZePpWWa26hoibDypKiav1vPDCC5E+dviZOXOm
ejL9TmOb2R555BG50zvuuCPUgObNm/uV6YMPPqjnyhs/dVGhyy677NFHHx07
dqy8CZTfQHuZCllEpkjwqkvkdO7cWc9yLlPRo0cPGTB06NCvv/466C98jkGZ
AsZRpgCAHG/37t3VqlVTKVGvXj1TO3F69eqVJ/18uSdOnJCbP//8s7qL8ePH
+43cuXOnmhV4qdOwq1U3xaZNmwIHq0MxixQpom6uXLly9uzZQU8OrMN59OjR
kT5S+JEfTf78+ePj4y/w/epLHUn6BR2gzqwVqkwXLVokU8qWLWs/SdG4ceNk
4k033aSnqN30bdu2bdasmXyzZMkSPSuwTIV9A1atWqX+L+vatWueYFdQyjEo
U8A4yhQAkLMdPny4Ro0a6v383XffHellPceOHXvnnXcG7vqRv6ElS5bMY/sc
n9SKOgtu48aN/QbrS5RKLES6Whmplv33v/8duHmquNXHV8+dO6euTVO5cuXA
kfqMsoG7dBGF5s2bB70cbWZTu03Fyy+//Oeff6qJqampa9euveOOO9SsUGU6
Y8YMtcM0OTlZTdm9e7f8tsjE2rVr62GytkqVKqlVyf879mPI/cq0UKFCctPv
kjdXX311nvTzTstv8pkzZzLnach6lClgHGUKAMjZ9NUSO3ToIO0W6eL6vEar
V6+2T3/jjTfUdClHPVFd+TEmJsZ+kOf//jqEUrJRv4d3v9ply5apKbfccotf
VqvQEN26dVNT9AdXdQIrkjBFihSR6fHx8fIOOdInAYFGjx49ceLEC3+/J0+e
bN++fZ6/SFc2bNiwaNGi6qak4sCBA9XvSWCZSoeqT5g2atRo6NChTzzxhPw+
xMbGqly134u+BNKQIUPs0/3KVFWt1Kv+DRRvvfWWWtbvuqg5DGUKGEeZAgBy
sOXLl0snqvfJ/fr1GxzM1KlT9Xgpu/h0Bw4cUFN++eUXtYYrrrji888/T0pK
2rNnj+5KeWdu3yu0bds29T5f1rBkyZLU1NSdO3eqj/6JF198UY90v9q0tDR9
yZgWLVqsWbNG+lrGjx8/XvWIxIj+2Oy3336rVlu8ePFp06bJyJSUlPnz56sz
54j3338/05/03GHr1q1BLw90YcgPt0mTJvp3W76pXr16586dd+3apceoU2nZ
y1TMmjVLXzBXflfll1N+eWRZuWm//ND27dtlnTJAYta+uCrT3377TW+GOk7g
kksu0WP279+vNszvX11yGMoUMI4yBQDkYB06dMgTjr6So6hfv76aqI+TFC+/
/LIerC7UopQuXXrDhg1+9/jSSy/pAXFxcfr7hg0bSk7aR7pf7d69e/XRlSpF
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
++Gef5kmJSUdcMf/CXQu0w4dvHP/OkY6g//8xxdctovmhFezpnepJ54IP1hf
81S+ChVylcAuF4moTMOe4smhTOVHr68Mq55MyhQAEBplChiXG8rUsl0qOk/6
dS39ylT3RZUqVYKu/NSpU3Pnzl2zZs3Bgwf1RFNnQKpZs6aauGjRoqBLtWnT
Rg14Wd7Mp3MuU309lI+CXUTyl19+kYSsUKHC/ekfHmzcuLEaPCnEoZ4yfsGC
BVu3bg17JoQoHojxMq1Ro0bQAfoU9+pkStKhOks3btzoNzgtLa1UqVJqwMKF
C9XE7HsGJH0Cn9q1g8yV4lNzS5QIf2ytZu/ZL74IM3jIEN/gyy7zHAYclvtF
7rrLc3KkoF8FC3rXEBfnnRL2qqkOZSrkN0Ef06u/KFMAQDCUKWBcLinT06dP
X3HFFX5v/nWZJiYm6hMlTZs2LXBxfR2W0qVL6x2OurN0vIQVtEz16ZVatGgR
uIg8HL1t+oJizmXar18/NfeGG24InDtkyBA1t3P6aUh79uypbl5zzTWBl5iR
V1F5yGpA0DP92kXxQIyXaR7bdV40uTs1K2/evOrSqH369FFTbr/99sC12a9n
qq83lH3LdP16X0atXOk/V5+YN8Te5OC+/da3zs2bnUbKPcbEeEdWq2b98Uf4
lUexSFCmzoBkN3w4ZQoAcIMyBYzLJWVqpV/U0n6Vrjy2MrVsR3vGx8dv2LDB
vuDPP/9crFgxNVfiQk+/77771MQPP/zQ5UYGLdM1a9boZPO7FufBgwf15U4q
VKigo9i5TPfs2aPP6vOvf/3LPmvr1q3qOp5iTvppbbZt2xYXF6emPPfcc+ds
55BJS0vTlygtUqTIMX2pxxCieCCZUaZVq1a1X/s7MTFRXwLmySefVBPfeOMN
NUWeKPljYV+V/J7Yz4n05ZdfqunnX6ZTp05t5U7r1q0z/CuBc5mK66/3Dqhc
2XMFFu2ll3yFZd+zn5bm+VjloEGeL1l5IH29mLg4p9MKyaw6dbwjCxb0nEfo
f/8L/qUfThSLhJIZZSqbd9NNlCkAICzKFDAu95Sp6N27d6gyPXToUIkSJdR0
KbV+/fp9/fXXkydPlvzUF0MpW7as/Xoo3bt3V9MvueSSe+6555FHHgm7kUHL
1LJd00S0a9fu008/Xbhw4ciRI8uXL6+n29vNuUwt26loxf333z9jxgxpqOHD
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
     "], {{0, 502.5}, {623., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{623., 502.5},
   PlotRange->{{0, 623.}, {0, 502.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`vInitial = 
     10, $CellContext`\[CapitalTheta]Initial = 
     30, $CellContext`\[CapitalTheta]Final = 
     30, $CellContext`t = -3, $CellContext`ball = {{
        GrayLevel[1], 
        EdgeForm[{
          Thickness[0.007], 
          GrayLevel[0]}], 
        Disk[{0, 0}, 3.05]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{0, 3}, {1.6, 2.2}, {2, 0.75}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-0.8, 2.9}, {0.8, 2.2}, {1, 1}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{1, 1}, {1.5, 0.5}, {2.8, 0.8}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{1, 1}, {-0.5, 0}, {-0.4, -2.2}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-0.4, -2.2}, {-0.2, -2.8}, {0.6, -2.9}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-0.4, -2.2}, {-0.5, -2.8}, {-1.5, -2.6}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{0.1, 0}, {1.5, -1.2}, {2.8, -0.75}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-0.3, -1.2}, {1.2, -2.5}, {2.2, -2}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-1.5, -2.6}, {-1.6, 0}, {0.4, 2}}]}, {
        GrayLevel[0], 
        Thickness[0.003], 
        BezierCurve[{{-2.2, -2}, {-2.5, 1}, {-0.35, 2.6}}]}}}},
 CellTags->"Snapshot",
 CellID->225469559,ExpressionUUID->"88439a68-3536-4bc8-a023-ad8b50dac655"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"482bfd6d-27aa-41b8-9e1c-e6c431afc1c2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8d531ae1-1434-41a2-a65a-ef303fae5cce"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"e5719156-aaad-42e6-9352-96cac847dc1b"],

Cell["Anissa Dadkhah", "Item",
 TaggingRules->{},
 CellID->240922164,ExpressionUUID->"8cb91d5c-d61d-46a9-9b55-86deeacdd726"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ed6d340b-06c2-416a-bd5d-e56f5da192a2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"b1a9ddeb-1f88-46fd-8402-27f44fe08c84"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "73079739-38c8-4b2c-8bc1-5a61a098b9af"],
 " is the coefficient of restitution = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SubscriptBox["h", "r"], "/", 
     SubscriptBox["h", "d"]}]], TraditionalForm]], "InlineMath",
  ExpressionUUID->"e9b29dd8-81ef-4d67-95c0-04d10b1077da"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "r"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "26e67191-1d0b-4362-9e22-632bc5bb562f"],
 " is the rebound height and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "d"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "d0fb33ed-95b7-4687-b689-92172a09bea0"],
 " is the drop height."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394893319591055`*^9}, {3.6394904605373654`*^9, 
   3.639490462324608*^9}, {3.6417507804613028`*^9, 3.6417508820470695`*^9}, {
   3.6417510374425993`*^9, 3.6417511341822824`*^9}, 3.642258867347031*^9, {
   3.6422641252298937`*^9, 3.642264125233103*^9}, 3.642268958233506*^9, {
   3.642268993820223*^9, 3.64226910285472*^9}, 3.642441042564155*^9},
 CellID->106341504,ExpressionUUID->"350ab74b-2d7c-4ba3-baf6-4298b0d12dee"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "0"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "bb3e7c04-e251-4591-a283-726d623fe33e"],
 " is the initial total velocity."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.639489363830705*^9}, 3.639489462202213*^9, {
   3.6394895108048124`*^9, 3.639489512320529*^9}, {3.639492056574151*^9, 
   3.639492061835257*^9}, 3.6422691160078707`*^9, 3.64226914637514*^9},
 CellID->34646646,ExpressionUUID->"d46cddf7-7a41-4ed9-ae05-34ef0aa5c2a2"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", 
    RowBox[{"y", 
     SubscriptBox["\[InvisibleComma]", "0"]}]], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"a072dfe5-aefa-491a-a2bb-69cc6e86f6e1"],
 " is the initial vertical velocity",
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394893898704343`*^9}, {3.6394895137748404`*^9, 
   3.639489515587451*^9}, {3.639492068034792*^9, 3.6394921153769817`*^9}, {
   3.642269090112494*^9, 3.642269092633444*^9}, 3.64226914181929*^9},
 CellID->181970446,ExpressionUUID->"96ce18ef-11e5-4b0b-9de5-ae76bf19b12e"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", 
    RowBox[{"x", 
     SubscriptBox["\[InvisibleComma]", "0"]}]], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"561311b9-7925-426d-9deb-8cfc175707f9"],
 " is the initial horizontal velocity."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394894198136625`*^9}, {3.639489517368805*^9, 
   3.6394895202596025`*^9}, {3.639492118832819*^9, 3.639492151568351*^9}, 
   3.6422691529199867`*^9, {3.642269267839394*^9, 3.642269274985469*^9}},
 CellID->168003900,ExpressionUUID->"c5689e1f-2594-41e9-8802-291c0ff603a4"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["V", TraditionalForm]], "InlineMath",ExpressionUUID->
  "9e6168d8-86c0-4952-b154-27c017069699"],
 " is the final total velocity",
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394894316383443`*^9}, {3.639489522759747*^9, 
   3.6394895237441807`*^9}, {3.639492131544827*^9, 3.639492156800009*^9}, 
   3.6422691537011766`*^9},
 CellID->556042036,ExpressionUUID->"818c2c15-1444-48f1-8d49-217859db4c6f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "y"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "01200966-2a6d-4f3a-b86d-3e6eeb3ce2ef"],
 " is the final vertical velocity."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394894654992867`*^9}, {3.639489525416154*^9, 
   3.6394895266193514`*^9}, 3.6394921614398727`*^9, 3.642269154736047*^9, {
   3.6422692870806713`*^9, 3.642269292464106*^9}},
 CellID->828532078,ExpressionUUID->"b7a1ae19-127f-4094-8c92-b815793cb1bb"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "x"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "feedb28a-b360-45af-84cb-a740b26d4454"],
 " is the final horizontal velocity."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.639489529150752*^9}, {3.639492166255625*^9, 
   3.639492167951565*^9}, 3.6422693037683973`*^9},
 CellID->51585035,ExpressionUUID->"a02b8c59-4461-42f4-b50f-e6592329111e"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "y"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "f07e7998-661b-4ba6-a0dd-81847ac54bc7"],
 " is the net vertical force."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.6394896160202827`*^9}, {3.63949217249538*^9, 3.639492182350953*^9}, {
   3.6422693077441273`*^9, 3.642269320831382*^9}},
 CellID->560397343,ExpressionUUID->"2666dba7-0f51-4401-9189-8515405d4b86"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "x"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "af70dc5d-89b2-4b12-adb6-e32a3b070540"],
 " is the net horizontal force."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.639489640598787*^9}, {3.639489912502765*^9, 3.6394899125186033`*^9}, {
   3.639492188510724*^9, 3.639492193414877*^9}, 3.642269310367675*^9},
 CellID->741681756,ExpressionUUID->"d22c1210-c656-49f0-af82-58ac1f411589"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "Net"], "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       SubscriptBox["F", "x"], "2"], "+", 
      SuperscriptBox[
       SubscriptBox["F", "y"], "2"]}]]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"55bf5078-c91a-4f6e-9e29-a643870fb57f"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.639489640598787*^9}, {3.639489912502765*^9, 3.6394899368752246`*^9}, {
   3.6394899744125195`*^9, 3.63949000517673*^9}, {3.639492202521665*^9, 
   3.639492245036723*^9}},
 CellID->372145280,ExpressionUUID->"e04ea793-5171-4671-b811-ab8e8af13fa2"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "a61b53f1-2def-41e7-8cb4-25d455b30779"],
 " is the mass",
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.639492564436078*^9, 3.639492578761547*^9}, {
   3.642258916905077*^9, 3.6422589231563807`*^9}, 3.64226915765077*^9},
 CellID->843617777,ExpressionUUID->"995eae5b-8d6e-46e5-b785-3d4b76b9b2a9"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "Net"], "=", 
    RowBox[{"arctan", "(", 
     RowBox[{
      SubscriptBox["F", "y"], "/", 
      SubscriptBox["F", "x"]}], ")"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"943afd3e-4eb6-4536-b821-93bec6d81c22"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.639489640598787*^9}, {3.639489912502765*^9, 3.639489965821909*^9}, {
   3.6394901784767065`*^9, 3.639490188115096*^9}, {3.639490226391622*^9, 
   3.6394902563181*^9}, {3.639490419240257*^9, 3.639490475411846*^9}, {
   3.639492256228725*^9, 3.639492276491686*^9}, {3.6422588954747553`*^9, 
   3.642258931841549*^9}, {3.6422693547049723`*^9, 3.6422693564864397`*^9}},
 CellID->446391455,ExpressionUUID->"02c21b90-680e-49a3-a948-d404e8ce3f9f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "0"], "=", 
    RowBox[{"m", " ", 
     SubscriptBox["V", "0"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"cc9de284-98fb-4b2f-bcd6-7acf83160916"],
 " is the initial momentum",
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.6394897855440855`*^9}, {3.639492283766564*^9, 3.63949231999459*^9}, 
   3.642269159315387*^9},
 CellID->704618187,ExpressionUUID->"99942304-83d4-4d3a-963c-ac65a84de23c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", 
    RowBox[{"m", " ", "V"}]}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a7e7cd2c-caba-48cc-b562-802896644b57"],
 " is the final momentum",
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.639489785965843*^9}, {3.6394898659071283`*^9, 3.6394898659071283`*^9}, {
   3.6394923309742193`*^9, 3.639492352145184*^9}, 3.642269160438156*^9, {
   3.642269368086535*^9, 3.642269369519227*^9}},
 CellID->677383914,ExpressionUUID->"1fe1e366-c586-46db-a4d0-99fa3038d9a5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "Friction"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        SubscriptBox["V", "x"]}], "-", 
       RowBox[{"m", " ", 
        SubscriptBox["V", 
         RowBox[{"x", 
          SubscriptBox["\[InvisibleComma]", "0"]}]]}]}], ")"}], "/", "t"}]}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "e4bf47fb-a994-43fb-a8d5-f350a5d62796"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.639489785965843*^9}, {3.6394898659071283`*^9, 3.6394898816597576`*^9}, {
   3.639490499330553*^9, 3.6394906503048124`*^9}, {3.639492371828021*^9, 
   3.6394924245106173`*^9}, {3.642269388105959*^9, 3.642269390518749*^9}},
 CellID->828763261,ExpressionUUID->"e27d374c-266a-4810-9a98-5b05e682e498"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "Normal"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m", " ", 
         SubscriptBox["V", "y"]}], "-", 
        RowBox[{"m", " ", 
         SubscriptBox["V", 
          RowBox[{"y", 
           SubscriptBox["\[InvisibleComma]", "0"]}]]}]}], ")"}], "/", "t"}], 
     "+", 
     SubscriptBox["F", "Gravity"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"b62ef245-5637-4390-9da1-24b56b6f806a"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.639489785965843*^9}, {3.6394898659071283`*^9, 3.6394898932708635`*^9}, {
   3.6394906597446775`*^9, 3.639490722836114*^9}, {3.6394924347705708`*^9, 
   3.639492510107686*^9}, {3.642269397086361*^9, 3.642269408126911*^9}},
 CellID->134724084,ExpressionUUID->"0ef706a5-3cd2-45f2-b412-aa631d2f1593"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "Gravity"], "=", 
    RowBox[{"10", " ", "m"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"84cb1a3f-249f-4e43-8ccb-b8679fcc33cd"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6314630771536674`*^9, {3.633704650580481*^9, 3.633704694194376*^9}, {
   3.6368080848016768`*^9, 3.636808114646421*^9}, {3.636808153524069*^9, 
   3.636808162476673*^9}, {3.6370961714437046`*^9, 3.6370962280327883`*^9}, {
   3.637096326719674*^9, 3.6370963551368227`*^9}, {3.637097339169338*^9, 
   3.637097351185048*^9}, {3.639253936733046*^9, 3.63925404511063*^9}, {
   3.63948930388848*^9, 3.6394895078303227`*^9}, {3.6394895511607704`*^9, 
   3.639489785965843*^9}, {3.6394898659071283`*^9, 3.6394899075373383`*^9}, {
   3.639490629036954*^9, 3.6394906382149253`*^9}, {3.639492521715226*^9, 
   3.63949253017069*^9}},
 CellID->137976333,ExpressionUUID->"ebf60c0e-51dc-4158-a87f-430e99402b06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7cc227b9-fd99-4fde-b94c-23f4b5a84692"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"28655020-929f-494c-977c-a1ef547597ca"],

Cell["References for demonstration.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343,ExpressionUUID->"49c8de22-517d-494f-9ad0-4f32b0d03dcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5d7f1f43-71e9-4197-9a9a-1ad4c3f81515"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"b09a7ef0-31c8-4f7b-8afa-f1fe8205d414"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"4c294480-21b3-4b8c-9b1f-c15aa297f21f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4f658aeb-8388-4491-b792-6521c89793da"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"e3cc1c87-0d3e-49ca-8597-304b8113cd1f"],

Cell["soccer", "Item",
 TaggingRules->{},
 CellID->580523355,ExpressionUUID->"6e542580-0995-4b68-a1b8-273d63c187f3"],

Cell["ball", "Item",
 TaggingRules->{},
 CellID->959769204,ExpressionUUID->"529c30d2-bc41-438c-95da-99785f50c335"],

Cell["basketball", "Item",
 TaggingRules->{},
 CellID->745366246,ExpressionUUID->"5a959069-1c52-4ef5-9e21-52f8695159a4"],

Cell["volleyball", "Item",
 TaggingRules->{},
 CellID->376085447,ExpressionUUID->"6aaf3e83-7fe0-4e12-9c60-444056aec980"],

Cell["baseball", "Item",
 TaggingRules->{},
 CellID->372497692,ExpressionUUID->"b813859b-fcf1-4fd7-ad48-2964d64bcb23"],

Cell["field", "Item",
 TaggingRules->{},
 CellID->625598563,ExpressionUUID->"7aa10716-7488-4587-b1d2-2324458345e0"],

Cell["hoop", "Item",
 TaggingRules->{},
 CellID->325671953,ExpressionUUID->"cfcb76b5-7e99-46ab-afdd-003eb3171186"],

Cell["bat", "Item",
 TaggingRules->{},
 CellID->264688450,ExpressionUUID->"ece352c2-7c62-4992-8297-291e2800b094"],

Cell["net", "Item",
 TaggingRules->{},
 CellID->23023753,ExpressionUUID->"7a8bee6b-7f21-4157-954c-921d11314e28"],

Cell["force", "Item",
 TaggingRules->{},
 CellID->503007992,ExpressionUUID->"278abae8-66d1-498e-a7a2-ccd90415efb8"],

Cell["forces", "Item",
 TaggingRules->{},
 CellID->650958906,ExpressionUUID->"1c516568-e733-4e8f-968d-9c6aa50726c2"],

Cell["gravity", "Item",
 TaggingRules->{},
 CellID->107781929,ExpressionUUID->"42e83baa-465d-43f2-bdd6-796b055e4cb8"],

Cell["normal", "Item",
 TaggingRules->{},
 CellID->296715022,ExpressionUUID->"a94a03f6-8c10-439c-8f08-ae8e73ebf6d2"],

Cell["friction", "Item",
 TaggingRules->{},
 CellID->394374992,ExpressionUUID->"42424a71-5227-42f6-a017-4bdbacd4bc5e"],

Cell["velocity", "Item",
 TaggingRules->{},
 CellID->631394656,ExpressionUUID->"8c5528d9-e82b-4f0c-bb90-98707a8575fd"],

Cell["angle", "Item",
 TaggingRules->{},
 CellID->720902404,ExpressionUUID->"9e4d58c9-8856-4352-8566-f877e9d5f1bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3ce8f8bb-27ec-4979-a767-cbe2cca061d5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"259863c0-af34-49c4-be07-9ac4c01290a1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Vector Algebra", {False, "Vector Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox["\"Ecology\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox[
                    "\"For Kids\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    "\"High School Computer Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox[
                    "\"Business\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox["\"Microeconomics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox["\"Elementary School 3-5 Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Mechanics", {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Quantum Mechanics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Thermodynamics"}], "\" \"", 
                    StyleBox[
                    "\"Thermodynamics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox["\"Patterns\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetv3LgRb8+xvX7s+\
hE7j7vrQUHRO6A444oeigL9pqwfWfi1tXw5oN9oid7lhRJVitpk89d3hpJWI1G7Tj+0nxJzqOFwHr/\
5DdffOQnWAzOXPNi4zU2am5Ngczjl4QcePa5lz65EZoKtax5OWSLCLNgIUqVNFgze89Ao7flywh80A\
yUjw+PMB3U718xMecwM7Pd3T4LDIJwqJT26/OokeHMmecwTw/TcK3dcnvyV7nr8XXF+596fT/\
7Wvff1tYgiyT331HrPy3diMu3Y4fdOgmMqK6/njepvj6j8gquYGz2vxT90fj7yWBJ591pMVNL+\
omHMWPOQyTCXOTH3z3THsBRbjX7C5Bws7zDkLw1DohlLQh41v74SCWeLGNaffkc/PReJMLzbjy/\
oxsCANGtueOZrThRvnf07h00qIVuOzz6lKoHgCgaH5UnYkr+q5KXNasK0MNM4oyGZp1w/\
KAmO6NCwPYpQvRGcLO6OEg7GyNZyb5QYPuGaLB2OtLZGg303efzQEO4WK95bllE1R2OmGQYELOq489\
aYawFiruu1r8ai/mNnrOQcMgV8ktFVzU+\
caPXHqMs1bf9uudV3vGv5JUnQblduvFcyj3m9sFma4289XTn/\
i9LYG6o4lfyTe5nBsuzu9u3eP3MWYZzh3krT7Dpc+LHDIS0crAXP/TSVAiqOwssmOAnWtfokYqvUu+\
ZmqqIvMfsQbghZAy4oqj4T5Kvnt1AARZZ5dzwDBeGUhPs2NSIWn+\
2GevkgSHm4pOp6v7IZl9zQMxbY8f3CAn/v/\
49OvaGTBftVFrie2TkFp83g5jNany9OxeMj1yXqdFTowTumYwUtr0PllsUI3UifF9e5hDMAmtgDNB/\
XxL4tOVcZrEtm4O6QZbxRvQKyJkm8INePLKSijQCuRBdWBbJfJui54JLm2dGpyELNm8iO/e+Lwb8/\
VJFIJt79lCsaWliPH0TC4NTG/t0LzdKps713w81HpT9QBwcAzTxpXvpeSDitXli/\
15xuwD5hURVowpK236vy0D9+so/vl3kHGTDMdSN5DmuR+x0RupE7WFERg6FNt4A7mNs+/\
7iRvK6m3pmUIm30o9flLjjgXjPQDhDXTvlv0CFcn5yiD7MC8Vzlz0mvdaV7NzzDZB4zA82tAZRjyRL\
eZS3C8aTVHmFpyqMGno61+g19M+tSsnPHH6XjuUEAZkZdZ7qh2YIOxJKJbKDEO/hHFZhLq+\
QZRPIsD0H3D5lXUlPy2dfnKk+iEo3VY3cuHlxA+n5YIvslyZScoR+\
1Ajih3ahfEo6ijPy1pRRkGS34+\
o6nGlpEYmoLXe4wznUTGbaeyPsVEPxUvr46nScstl4O5hmOEQ5IAHaoPHWWdy4TZZzVw9puUAmEUYQ\
kQ+1uHqNrZw1A6d2rVEk1oZbdccDIqv1Td6DfL5QEYulZekCAlWzriN+\
q2G7XFBpz7El23T9lhnX1PFTNHgAwDY3QHXRVZS8Omd/IlR0MXl4kBJ68DZFWBcvGwD/\
3c6PsjYBcsAxwivptWR94QZR2xn2/2MA7evzBQmSbRrOPDPU8NWqCAqrNOgO/g+\
zOGkRnfxSzCa8u3jB+\
JauqDQxCgf0ICdy3DbrT2vBf3H7VFffsXQKj89BAIdJaKjsypgMWaDgFlkRhDDI2183rHxeRwUInRn\
Vesyg/8unNZeD95P2q5CPMMws3rKP5XMpcIkErkoMytHPNQtOk10sbw7eBQODwmv5yLDkK8gdIf5Nb\
2uyID8ZTiJ2FkMLGzN8Ab/iZ0ThWzP2v2vNJJSGJBe2CVU4gLh1COcP/\
AG03WkoWEhpWXENDLiEybcznCdD0zu+ejxKlJ/jI0qn1drnscHH1DmH/\
jGkzXQQOvPAjvUAhRbZ9lswEOKSkT5UTCUTApAJZ1ALIw6JD2twiZ3wzlAwKLazWvJqbUVLS2GXEI/\
zXVip1GaApfAm5tND/e5z6NASJSemgwGbhjMzvI1Wh02OxTsLqhypvAequzYq0vRWGTCk5Ikhbsn+\
GrEND/k8w2FmM1g3Kxcy0+vreucyBjyxe04gfAQNmosh+\
B0i3Oj7YwJGuYckYQilC2WEkjraJyeNKgjYeVGsduo8XvQabXiXHuK5K7gGYDSNTVPRyIljHUZJ2rS\
vxyOsyhXaz+VbYvEJ4bQStXKdUgsNYqtIyTR35PvCEj5DRHT3u4FpBWCxiOZ/1bxjgLA5QzdG/\
j6TVuPs3/6VaK4DmEwBmZKdVngJF2B5zHfK0Cbfb42wO12tZUCw6qbd5FrZ29q55JEJwPymkt3mGbQ\
An80DZSbAESPTogQ9NBAdT6XapXvUlyTY4EV9HCpLzpoEWlcQiBnQi1lA2gHakFa82UYHoFmw6Otau\
2EeK6gof6AisY+6+xPlbJ1WrsAN0k/jvVV6okgzRvyJSpcjkUWOI3rkCYpC3Kdbr0pE/\
etcq4hI9XD7Z4NP2qia4O5wy5TLZvXrutgpJh2sOsO2HoY6munPBgOE79LfoMhZKAJYxpSk7xXeKEw\
BZyGtrQZMDu8P4Ctr4RE92J/RkAskGdwS2+\
L13D8iSFHUPrnxZ9eXy2cztQEcL8CF6aAWKmVgiw9kaAFm6HLWA6rZWzJfBUOgwF8Y75ZmYNJ7N4E8\
mO+nkcoRfwUF7Lo17UWlYdtvBDYPRZ+FBouxOPagW7XAMxvut+1AAZG7pePHbus01cD8tI4zQH7p/\
sHEwpWMf/ljj7Dtu/lDjyPtnM67nEZt72DCIVcClHfJfv2+0y2qzpCjYaL6Ml6ya7VeN7U/\
jEsUYjMFRefcrBsuYHr6mh+3f808A3V2jSUfOLGti2zdALSYtzr+E6/\
aHdtydFZb42zVswt8W9dvVsPdeZGiiS+x3fQ0mQo7iCIO4vSJIa6CeAAfwLUV+\
GlmJaINyfHIsezXChlNkCsLNPHXSZv0a2l9oh/\
nqx0BcIBtaRbJr5e4bpnv77UsRYbc4zxMcG76raGj++bPkRQOtHxdsq/3jEtk/vLqgav1/\
WrrbZmEMJAGYc73/zdL91ev705XXA897eC86mKRFfx5BI8ya2b5ZHkmcUh9MWizgEgQmjrEtVC/Y+\
MOcfd3a+fm0Y0A+fM/tkOv93TvnrDUjD4Kpgmwt1dKigSWodzMPNu5VCgrBxlvLzrJsa/HGgT+\
A469crcWB9WsKrdvaD/NDMsf+x7GuhzBJqHiUwASbrZ9Dk+\
b1IjbF7NmNSrj94S1TOXBCyEYe9E95DGebIrXLH7NgEI/K84dr/wFruMOg"},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->874890799,ExpressionUUID->"6901fd95-faae-419d-9227-4b0b6b38ec2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fa0968e7-6ea8-4b12-b730-bfe0008ac7b7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"fb93b165-3b5c-43a1-aba7-faa075c724b5"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->939515199,ExpressionUUID->"12c912c7-3f2f-4f6c-b317-6e68a3eec1e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "da496c7f-8ad0-47ce-8d32-307a10202e22"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"3f18ae0c-f17b-439a-a842-62c0088d22f8"],

Cell["Link to external information", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->903878728,ExpressionUUID->"a51b0e0a-b895-40fe-9cf5-4a99badd6188"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3b6652cb-c6e2-4a0a-b431-12ac8c3b32c6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"95063188-1e6c-41b8-9887-d36cab28e55d"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->576624648,ExpressionUUID->"6f1a8a5f-e54c-4785-a575-c04cdbdcfe3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e70ac5b6-4b6b-43a4-a3c6-a4def2b0d142"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"b2ba7f46-edeb-4902-81bf-66e3b86b34d1"],

Cell["2015-06-09", "Text",
 TaggingRules->{},
 CellID->742276060,ExpressionUUID->"e512edbb-a762-46bf-87bb-631a50196859"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "79feb179-f753-4335-95f1-235e32c75e9d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"33f571a5-2eef-478a-ac33-6d49b88bc226"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d5bc646c-3df5-4b62-8ddc-9cfe0facbfd9"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->327726311,ExpressionUUID->"fddff49c-3645-4ef3-bef5-3a95f50dc864"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->544125060,ExpressionUUID->"59808724-8848-4ec1-b970-e7dfebfe41a4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6d696b99-2bc2-4f25-bc0a-773e8f1d159e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->316191303,ExpressionUUID->"d3c1443d-5367-48f4-aff4-77d05ec0b01c"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->583889232,ExpressionUUID->"c14dadd3-66af-4607-afa4-672176447dc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "49e39f96-0a44-474b-a88e-6e8bfa3902a9"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->474357662,ExpressionUUID->"dee5d31d-4c3a-426c-8c3a-796a5934afe4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->132666508,ExpressionUUID->"81509e71-0ee2-4499-896c-c4f436dc0e4f"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.05.27", "CreationTimestamp" -> 
  3.928323855946509`16.346782273532682*^9, "UpdatedTimestamp" -> 
  3.928323855946583`16.34678227353269*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (June 13, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X x86 (64-bit) (June 13, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"b2215913-1890-44ac-ad6e-d94c69ba0b85"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Name"->{
  Cell[580, 22, 386, 6, 70, "Title",ExpressionUUID->"3d914caa-2c59-4b6a-a5b9-cf2a60c2ee61",
   CellTags->{"Name", "Title"},
   CellID->835860012]},
 "Title"->{
  Cell[580, 22, 386, 6, 70, "Title",ExpressionUUID->"3d914caa-2c59-4b6a-a5b9-cf2a60c2ee61",
   CellTags->{"Name", "Title"},
   CellID->835860012]},
 "Caption"->{
  Cell[991, 32, 1495, 33, 70, "Section",ExpressionUUID->"df2f3096-ff93-4594-a6e4-adc8b44c3af7",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "CaptionCells"->{
  Cell[991, 32, 1495, 33, 70, "Section",ExpressionUUID->"df2f3096-ff93-4594-a6e4-adc8b44c3af7",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "TemplateCellGroup"->{
  Cell[991, 32, 1495, 33, 70, "Section",ExpressionUUID->"df2f3096-ff93-4594-a6e4-adc8b44c3af7",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581],
  Cell[5494, 125, 2246, 48, 70, "Section",ExpressionUUID->"3bbf16ce-1744-45f5-b58c-2c5f9cc63c28",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593],
  Cell[45466, 1238, 1944, 40, 70, "Section",ExpressionUUID->"c8623103-da94-49c0-9f32-c7f275627569",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314],
  Cell[142499, 3462, 1302, 31, 70, "Section",ExpressionUUID->"274b43e9-0131-47b0-a901-7de16ca997e9",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448],
  Cell[623519, 11453, 1221, 29, 70, "Subsection",ExpressionUUID->"e5719156-aaad-42e6-9352-96cac847dc1b",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948],
  Cell[624904, 11491, 2197, 46, 70, "Subsection",ExpressionUUID->"b1a9ddeb-1f88-46fd-8402-27f44fe08c84",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514],
  Cell[644316, 11933, 2173, 45, 70, "Subsection",ExpressionUUID->"28655020-929f-494c-977c-a1ef547597ca",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655],
  Cell[647107, 11994, 1242, 30, 70, "Subsection",ExpressionUUID->"b09a7ef0-31c8-4f7b-8afa-f1fe8205d414",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429],
  Cell[648978, 12040, 1106, 27, 70, "Subsection",ExpressionUUID->"e3cc1c87-0d3e-49ca-8597-304b8113cd1f",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184],
  Cell[652026, 12136, 1128, 27, 70, "Subsection",ExpressionUUID->"259863c0-af34-49c4-be07-9ac4c01290a1",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503],
  Cell[838796, 15598, 1216, 30, 70, "Subsection",ExpressionUUID->"fb93b165-3b5c-43a1-aba7-faa075c724b5",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753],
  Cell[840632, 15644, 1558, 37, 70, "Subsection",ExpressionUUID->"3f18ae0c-f17b-439a-a842-62c0088d22f8",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725],
  Cell[842807, 15697, 1191, 29, 70, "Subsection",ExpressionUUID->"95063188-1e6c-41b8-9887-d36cab28e55d",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547],
  Cell[844634, 15742, 1070, 26, 70, "Subsection",ExpressionUUID->"b2ba7f46-edeb-4902-81bf-66e3b86b34d1",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554],
  Cell[845864, 15777, 1073, 26, 70, "Subsection",ExpressionUUID->"33f571a5-2eef-478a-ac33-6d49b88bc226",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "Initialization Code"->{
  Cell[5494, 125, 2246, 48, 70, "Section",ExpressionUUID->"3bbf16ce-1744-45f5-b58c-2c5f9cc63c28",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "InitializationCode"->{
  Cell[5494, 125, 2246, 48, 70, "Section",ExpressionUUID->"3bbf16ce-1744-45f5-b58c-2c5f9cc63c28",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "Manipulate"->{
  Cell[45466, 1238, 1944, 40, 70, "Section",ExpressionUUID->"c8623103-da94-49c0-9f32-c7f275627569",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "ManipulateGroup"->{
  Cell[45466, 1238, 1944, 40, 70, "Section",ExpressionUUID->"c8623103-da94-49c0-9f32-c7f275627569",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "SnapshotGroup"->{
  Cell[142499, 3462, 1302, 31, 70, "Section",ExpressionUUID->"274b43e9-0131-47b0-a901-7de16ca997e9",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshots"->{
  Cell[142499, 3462, 1302, 31, 70, "Section",ExpressionUUID->"274b43e9-0131-47b0-a901-7de16ca997e9",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshot"->{
  Cell[264380, 5494, 119994, 1989, 70, "Output",ExpressionUUID->"761a43ad-ee75-465a-91e0-244a94ad6312",
   CellTags->"Snapshot",
   CellID->704566744],
  Cell[384377, 7485, 122242, 2019, 70, "Output",ExpressionUUID->"b8f14550-3d46-4700-81dc-9ae0632dc5a4",
   CellTags->"Snapshot",
   CellID->428436850],
  Cell[506622, 9506, 116562, 1933, 70, "Output",ExpressionUUID->"88439a68-3536-4bc8-a023-ad8b50dac655",
   CellTags->"Snapshot",
   CellID->225469559]},
 "SourceInformationGroup"->{
  Cell[623221, 11444, 273, 5, 70, "Section",ExpressionUUID->"482bfd6d-27aa-41b8-9e1c-e6c431afc1c2",
   CellTags->"SourceInformationGroup",
   CellID->62407265]},
 "AuthorNames"->{
  Cell[623519, 11453, 1221, 29, 70, "Subsection",ExpressionUUID->"e5719156-aaad-42e6-9352-96cac847dc1b",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "Contributed By"->{
  Cell[623519, 11453, 1221, 29, 70, "Subsection",ExpressionUUID->"e5719156-aaad-42e6-9352-96cac847dc1b",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "AuthorNotes"->{
  Cell[624904, 11491, 2197, 46, 70, "Subsection",ExpressionUUID->"b1a9ddeb-1f88-46fd-8402-27f44fe08c84",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DetailCells"->{
  Cell[624904, 11491, 2197, 46, 70, "Subsection",ExpressionUUID->"b1a9ddeb-1f88-46fd-8402-27f44fe08c84",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "Details & Citations"->{
  Cell[624904, 11491, 2197, 46, 70, "Subsection",ExpressionUUID->"b1a9ddeb-1f88-46fd-8402-27f44fe08c84",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "ReferenceCells"->{
  Cell[644316, 11933, 2173, 45, 70, "Subsection",ExpressionUUID->"28655020-929f-494c-977c-a1ef547597ca",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "References"->{
  Cell[644316, 11933, 2173, 45, 70, "Subsection",ExpressionUUID->"28655020-929f-494c-977c-a1ef547597ca",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "DefaultContent"->{
  Cell[646492, 11980, 578, 9, 70, "Text",ExpressionUUID->"49c8de22-517d-494f-9ad0-4f32b0d03dcb",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[648352, 12026, 589, 9, 70, "Text",ExpressionUUID->"4c294480-21b3-4b8c-9b1f-c15aa297f21f",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[840015, 15630, 580, 9, 70, "Item",ExpressionUUID->"12c912c7-3f2f-4f6c-b317-6e68a3eec1e7",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->939515199],
  Cell[842193, 15683, 577, 9, 70, "Item",ExpressionUUID->"a51b0e0a-b895-40fe-9cf5-4a99badd6188",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->903878728],
  Cell[844001, 15728, 596, 9, 70, "Item",ExpressionUUID->"6f1a8a5f-e54c-4785-a575-c04cdbdcfe3c",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->576624648]},
 "TabNext"->{
  Cell[646492, 11980, 578, 9, 70, "Text",ExpressionUUID->"49c8de22-517d-494f-9ad0-4f32b0d03dcb",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[648352, 12026, 589, 9, 70, "Text",ExpressionUUID->"4c294480-21b3-4b8c-9b1f-c15aa297f21f",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[840015, 15630, 580, 9, 70, "Item",ExpressionUUID->"12c912c7-3f2f-4f6c-b317-6e68a3eec1e7",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->939515199],
  Cell[842193, 15683, 577, 9, 70, "Item",ExpressionUUID->"a51b0e0a-b895-40fe-9cf5-4a99badd6188",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->903878728],
  Cell[844001, 15728, 596, 9, 70, "Item",ExpressionUUID->"6f1a8a5f-e54c-4785-a575-c04cdbdcfe3c",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->576624648]},
 "Submission Notes"->{
  Cell[647107, 11994, 1242, 30, 70, "Subsection",ExpressionUUID->"b09a7ef0-31c8-4f7b-8afa-f1fe8205d414",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "SubmissionNotes"->{
  Cell[647107, 11994, 1242, 30, 70, "Subsection",ExpressionUUID->"b09a7ef0-31c8-4f7b-8afa-f1fe8205d414",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "Keywords"->{
  Cell[648978, 12040, 1106, 27, 70, "Subsection",ExpressionUUID->"e3cc1c87-0d3e-49ca-8597-304b8113cd1f",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184]},
 "Categories"->{
  Cell[652026, 12136, 1128, 27, 70, "Subsection",ExpressionUUID->"259863c0-af34-49c4-be07-9ac4c01290a1",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "DemoCategories"->{
  Cell[652026, 12136, 1128, 27, 70, "Subsection",ExpressionUUID->"259863c0-af34-49c4-be07-9ac4c01290a1",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "CheckboxCell"->{
  Cell[653157, 12165, 185602, 3428, 70, "Output",ExpressionUUID->"6901fd95-faae-419d-9227-4b0b6b38ec2f",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->874890799],
  Cell[848090, 15837, 1370, 35, 70, "Output",ExpressionUUID->"59808724-8848-4ec1-b970-e7dfebfe41a4",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->544125060],
  Cell[851959, 15945, 1328, 34, 70, "Output",ExpressionUUID->"81509e71-0ee2-4499-896c-c4f436dc0e4f",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->132666508]},
 "Topics"->{
  Cell[653157, 12165, 185602, 3428, 70, "Output",ExpressionUUID->"6901fd95-faae-419d-9227-4b0b6b38ec2f",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->874890799]},
 "Topics-Checkboxes"->{
  Cell[653157, 12165, 185602, 3428, 70, "Output",ExpressionUUID->"6901fd95-faae-419d-9227-4b0b6b38ec2f",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->874890799]},
 "Related Demonstrations"->{
  Cell[838796, 15598, 1216, 30, 70, "Subsection",ExpressionUUID->"fb93b165-3b5c-43a1-aba7-faa075c724b5",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "RelatedDemonstrations"->{
  Cell[838796, 15598, 1216, 30, 70, "Subsection",ExpressionUUID->"fb93b165-3b5c-43a1-aba7-faa075c724b5",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "External Links"->{
  Cell[840632, 15644, 1558, 37, 70, "Subsection",ExpressionUUID->"3f18ae0c-f17b-439a-a842-62c0088d22f8",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "ExternalLinks"->{
  Cell[840632, 15644, 1558, 37, 70, "Subsection",ExpressionUUID->"3f18ae0c-f17b-439a-a842-62c0088d22f8",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "Related Symbols"->{
  Cell[842807, 15697, 1191, 29, 70, "Subsection",ExpressionUUID->"95063188-1e6c-41b8-9887-d36cab28e55d",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "RelatedSymbols"->{
  Cell[842807, 15697, 1191, 29, 70, "Subsection",ExpressionUUID->"95063188-1e6c-41b8-9887-d36cab28e55d",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "Published Date"->{
  Cell[844634, 15742, 1070, 26, 70, "Subsection",ExpressionUUID->"b2ba7f46-edeb-4902-81bf-66e3b86b34d1",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "PublishedDate"->{
  Cell[844634, 15742, 1070, 26, 70, "Subsection",ExpressionUUID->"b2ba7f46-edeb-4902-81bf-66e3b86b34d1",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "Compatibility"->{
  Cell[845864, 15777, 1073, 26, 70, "Subsection",ExpressionUUID->"33f571a5-2eef-478a-ac33-6d49b88bc226",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "CompatibilityARSupport"->{
  Cell[848090, 15837, 1370, 35, 70, "Output",ExpressionUUID->"59808724-8848-4ec1-b970-e7dfebfe41a4",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->544125060]},
 "CompatibilityARSupport-Checkboxes"->{
  Cell[848090, 15837, 1370, 35, 70, "Output",ExpressionUUID->"59808724-8848-4ec1-b970-e7dfebfe41a4",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->544125060]},
 "ScrapeDefault"->{
  Cell[850671, 15908, 139, 3, 70, "Text",ExpressionUUID->"c14dadd3-66af-4607-afa4-672176447dc2",
   CellTags->"ScrapeDefault",
   CellID->583889232]},
 "CompatibilityCloudSupport"->{
  Cell[851959, 15945, 1328, 34, 70, "Output",ExpressionUUID->"81509e71-0ee2-4499-896c-c4f436dc0e4f",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->132666508]},
 "CompatibilityCloudSupport-Checkboxes"->{
  Cell[851959, 15945, 1328, 34, 70, "Output",ExpressionUUID->"81509e71-0ee2-4499-896c-c4f436dc0e4f",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->132666508]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Name", 994287, 18649},
 {"Title", 994447, 18653},
 {"Caption", 994609, 18657},
 {"CaptionCells", 994811, 18661},
 {"TemplateCellGroup", 995018, 18665},
 {"Initialization Code", 997988, 18711},
 {"InitializationCode", 998216, 18715},
 {"Manipulate", 998436, 18719},
 {"ManipulateGroup", 998651, 18723},
 {"SnapshotGroup", 998864, 18727},
 {"Snapshots", 999070, 18731},
 {"Snapshot", 999275, 18735},
 {"SourceInformationGroup", 999761, 18745},
 {"AuthorNames", 999941, 18749},
 {"Contributed By", 1000160, 18753},
 {"AuthorNotes", 1000376, 18757},
 {"DetailCells", 1000612, 18761},
 {"Details & Citations", 1000856, 18765},
 {"ReferenceCells", 1001095, 18769},
 {"References", 1001309, 18773},
 {"DefaultContent", 1001527, 18777},
 {"TabNext", 1002362, 18793},
 {"Submission Notes", 1003206, 18809},
 {"SubmissionNotes", 1003432, 18813},
 {"Keywords", 1003651, 18817},
 {"Categories", 1003845, 18821},
 {"DemoCategories", 1004063, 18825},
 {"CheckboxCell", 1004279, 18829},
 {"Topics", 1004925, 18839},
 {"Topics-Checkboxes", 1005140, 18843},
 {"Related Demonstrations", 1005360, 18847},
 {"RelatedDemonstrations", 1005602, 18851},
 {"External Links", 1005837, 18855},
 {"ExternalLinks", 1006057, 18859},
 {"Related Symbols", 1006279, 18863},
 {"RelatedSymbols", 1006502, 18867},
 {"Published Date", 1006725, 18871},
 {"PublishedDate", 1006945, 18875},
 {"Compatibility", 1007165, 18879},
 {"CompatibilityARSupport", 1007376, 18883},
 {"CompatibilityARSupport-Checkboxes", 1007635, 18887},
 {"ScrapeDefault", 1007874, 18891},
 {"CompatibilityCloudSupport", 1008057, 18895},
 {"CompatibilityCloudSupport-Checkboxes", 1008325, 18899}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 386, 6, 70, "Title",ExpressionUUID->"3d914caa-2c59-4b6a-a5b9-cf2a60c2ee61",
 CellTags->{"Name", "Title"},
 CellID->835860012],
Cell[CellGroupData[{
Cell[991, 32, 1495, 33, 70, "Section",ExpressionUUID->"df2f3096-ff93-4594-a6e4-adc8b44c3af7",
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581],
Cell[2489, 67, 2968, 53, 70, "Text",ExpressionUUID->"235dd197-9fd8-47e0-b67b-bcba0ed2a5d2",
 CellID->783605]
}, Closed]],
Cell[CellGroupData[{
Cell[5494, 125, 2246, 48, 70, "Section",ExpressionUUID->"3bbf16ce-1744-45f5-b58c-2c5f9cc63c28",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 CellID->447669593],
Cell[7743, 175, 37686, 1058, 70, "Input",ExpressionUUID->"381d0bd5-a154-4956-9a36-08809cc1eb56",
 CellID->1057865521]
}, Closed]],
Cell[CellGroupData[{
Cell[45466, 1238, 1944, 40, 70, "Section",ExpressionUUID->"c8623103-da94-49c0-9f32-c7f275627569",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314],
Cell[CellGroupData[{
Cell[47435, 1282, 49780, 1042, 70, "Input",ExpressionUUID->"6a311ee2-9158-4474-aca6-a78b7b3e0777",
 CellID->70707974],
Cell[97218, 2326, 45232, 1130, 70, "Output",ExpressionUUID->"1c0bc82a-6540-4936-8fe4-39bf60a40b22",
 CellID->750784482]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[142499, 3462, 1302, 31, 70, "Section",ExpressionUUID->"274b43e9-0131-47b0-a901-7de16ca997e9",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448],
Cell[143804, 3495, 120573, 1997, 70, "Output",ExpressionUUID->"4b84d064-1448-42c7-bcc4-db27907cdd7c",
 CellID->724530839],
Cell[264380, 5494, 119994, 1989, 70, "Output",ExpressionUUID->"761a43ad-ee75-465a-91e0-244a94ad6312",
 CellTags->"Snapshot",
 CellID->704566744],
Cell[384377, 7485, 122242, 2019, 70, "Output",ExpressionUUID->"b8f14550-3d46-4700-81dc-9ae0632dc5a4",
 CellTags->"Snapshot",
 CellID->428436850],
Cell[506622, 9506, 116562, 1933, 70, "Output",ExpressionUUID->"88439a68-3536-4bc8-a023-ad8b50dac655",
 CellTags->"Snapshot",
 CellID->225469559]
}, Closed]],
Cell[CellGroupData[{
Cell[623221, 11444, 273, 5, 70, "Section",ExpressionUUID->"482bfd6d-27aa-41b8-9e1c-e6c431afc1c2",
 CellTags->"SourceInformationGroup",
 CellID->62407265],
Cell[CellGroupData[{
Cell[623519, 11453, 1221, 29, 70, "Subsection",ExpressionUUID->"e5719156-aaad-42e6-9352-96cac847dc1b",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948],
Cell[624743, 11484, 124, 2, 70, "Item",ExpressionUUID->"8cb91d5c-d61d-46a9-9b55-86deeacdd726",
 CellID->240922164]
}, Open  ]],
Cell[CellGroupData[{
Cell[624904, 11491, 2197, 46, 70, "Subsection",ExpressionUUID->"b1a9ddeb-1f88-46fd-8402-27f44fe08c84",
 CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514],
Cell[627104, 11539, 1629, 36, 70, "Text",ExpressionUUID->"350ab74b-2d7c-4ba3-baf6-4298b0d12dee",
 CellID->106341504],
Cell[628736, 11577, 910, 17, 70, "Text",ExpressionUUID->"d46cddf7-7a41-4ed9-ae05-34ef0aa5c2a2",
 CellID->34646646],
Cell[629649, 11596, 984, 20, 70, "Text",ExpressionUUID->"96ce18ef-11e5-4b0b-9de5-ae76bf19b12e",
 CellID->181970446],
Cell[630636, 11618, 982, 19, 70, "Text",ExpressionUUID->"c5689e1f-2594-41e9-8802-291c0ff603a4",
 CellID->168003900],
Cell[631621, 11639, 850, 17, 70, "Text",ExpressionUUID->"818c2c15-1444-48f1-8d49-217859db4c6f",
 CellID->556042036],
Cell[632474, 11658, 895, 17, 70, "Text",ExpressionUUID->"b7a1ae19-127f-4094-8c92-b815793cb1bb",
 CellID->828532078],
Cell[633372, 11677, 818, 16, 70, "Text",ExpressionUUID->"a02b8c59-4461-42f4-b50f-e6592329111e",
 CellID->51585035],
Cell[634193, 11695, 891, 17, 70, "Text",ExpressionUUID->"2666dba7-0f51-4401-9189-8515405d4b86",
 CellID->560397343],
Cell[635087, 11714, 914, 17, 70, "Text",ExpressionUUID->"d22c1210-c656-49f0-af82-58ac1f411589",
 CellID->741681756],
Cell[636004, 11733, 1092, 25, 70, "Text",ExpressionUUID->"e04ea793-5171-4671-b811-ab8e8af13fa2",
 CellID->372145280],
Cell[637099, 11760, 404, 10, 70, "Text",ExpressionUUID->"995eae5b-8d6e-46e5-b785-3d4b76b9b2a9",
 CellID->843617777],
Cell[637506, 11772, 1257, 25, 70, "Text",ExpressionUUID->"02c21b90-680e-49a3-a948-d404e8ce3f9f",
 CellID->446391455],
Cell[638766, 11799, 943, 21, 70, "Text",ExpressionUUID->"99942304-83d4-4d3a-963c-ac65a84de23c",
 CellID->704618187],
Cell[639712, 11822, 993, 20, 70, "Text",ExpressionUUID->"1fe1e366-c586-46db-a4d0-99fa3038d9a5",
 CellID->677383914],
Cell[640708, 11844, 1263, 29, 70, "Text",ExpressionUUID->"e27d374c-266a-4810-9a98-5b05e682e498",
 CellID->828763261],
Cell[641974, 11875, 1328, 31, 70, "Text",ExpressionUUID->"0ef706a5-3cd2-45f2-b412-aa631d2f1593",
 CellID->134724084],
Cell[643305, 11908, 974, 20, 70, "Text",ExpressionUUID->"ebf60c0e-51dc-4158-a87f-430e99402b06",
 CellID->137976333]
}, Open  ]],
Cell[CellGroupData[{
Cell[644316, 11933, 2173, 45, 70, "Subsection",ExpressionUUID->"28655020-929f-494c-977c-a1ef547597ca",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655],
Cell[646492, 11980, 578, 9, 70, "Text",ExpressionUUID->"49c8de22-517d-494f-9ad0-4f32b0d03dcb",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343]
}, Open  ]],
Cell[CellGroupData[{
Cell[647107, 11994, 1242, 30, 70, "Subsection",ExpressionUUID->"b09a7ef0-31c8-4f7b-8afa-f1fe8205d414",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429],
Cell[648352, 12026, 589, 9, 70, "Text",ExpressionUUID->"4c294480-21b3-4b8c-9b1f-c15aa297f21f",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112]
}, Open  ]],
Cell[CellGroupData[{
Cell[648978, 12040, 1106, 27, 70, "Subsection",ExpressionUUID->"e3cc1c87-0d3e-49ca-8597-304b8113cd1f",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184],
Cell[650087, 12069, 116, 2, 70, "Item",ExpressionUUID->"6e542580-0995-4b68-a1b8-273d63c187f3",
 CellID->580523355],
Cell[650206, 12073, 114, 2, 70, "Item",ExpressionUUID->"529c30d2-bc41-438c-95da-99785f50c335",
 CellID->959769204],
Cell[650323, 12077, 120, 2, 70, "Item",ExpressionUUID->"5a959069-1c52-4ef5-9e21-52f8695159a4",
 CellID->745366246],
Cell[650446, 12081, 120, 2, 70, "Item",ExpressionUUID->"6aaf3e83-7fe0-4e12-9c60-444056aec980",
 CellID->376085447],
Cell[650569, 12085, 118, 2, 70, "Item",ExpressionUUID->"b813859b-fcf1-4fd7-ad48-2964d64bcb23",
 CellID->372497692],
Cell[650690, 12089, 115, 2, 70, "Item",ExpressionUUID->"7aa10716-7488-4587-b1d2-2324458345e0",
 CellID->625598563],
Cell[650808, 12093, 114, 2, 70, "Item",ExpressionUUID->"cfcb76b5-7e99-46ab-afdd-003eb3171186",
 CellID->325671953],
Cell[650925, 12097, 113, 2, 70, "Item",ExpressionUUID->"ece352c2-7c62-4992-8297-291e2800b094",
 CellID->264688450],
Cell[651041, 12101, 112, 2, 70, "Item",ExpressionUUID->"7a8bee6b-7f21-4157-954c-921d11314e28",
 CellID->23023753],
Cell[651156, 12105, 115, 2, 70, "Item",ExpressionUUID->"278abae8-66d1-498e-a7a2-ccd90415efb8",
 CellID->503007992],
Cell[651274, 12109, 116, 2, 70, "Item",ExpressionUUID->"1c516568-e733-4e8f-968d-9c6aa50726c2",
 CellID->650958906],
Cell[651393, 12113, 117, 2, 70, "Item",ExpressionUUID->"42e83baa-465d-43f2-bdd6-796b055e4cb8",
 CellID->107781929],
Cell[651513, 12117, 116, 2, 70, "Item",ExpressionUUID->"a94a03f6-8c10-439c-8f08-ae8e73ebf6d2",
 CellID->296715022],
Cell[651632, 12121, 118, 2, 70, "Item",ExpressionUUID->"42424a71-5227-42f6-a017-4bdbacd4bc5e",
 CellID->394374992],
Cell[651753, 12125, 118, 2, 70, "Item",ExpressionUUID->"8c5528d9-e82b-4f0c-bb90-98707a8575fd",
 CellID->631394656],
Cell[651874, 12129, 115, 2, 70, "Item",ExpressionUUID->"9e4d58c9-8856-4352-8566-f877e9d5f1bb",
 CellID->720902404]
}, Open  ]],
Cell[CellGroupData[{
Cell[652026, 12136, 1128, 27, 70, "Subsection",ExpressionUUID->"259863c0-af34-49c4-be07-9ac4c01290a1",
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503],
Cell[653157, 12165, 185602, 3428, 70, "Output",ExpressionUUID->"6901fd95-faae-419d-9227-4b0b6b38ec2f",
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->874890799]
}, Open  ]],
Cell[CellGroupData[{
Cell[838796, 15598, 1216, 30, 70, "Subsection",ExpressionUUID->"fb93b165-3b5c-43a1-aba7-faa075c724b5",
 CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753],
Cell[840015, 15630, 580, 9, 70, "Item",ExpressionUUID->"12c912c7-3f2f-4f6c-b317-6e68a3eec1e7",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->939515199]
}, Open  ]],
Cell[CellGroupData[{
Cell[840632, 15644, 1558, 37, 70, "Subsection",ExpressionUUID->"3f18ae0c-f17b-439a-a842-62c0088d22f8",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725],
Cell[842193, 15683, 577, 9, 70, "Item",ExpressionUUID->"a51b0e0a-b895-40fe-9cf5-4a99badd6188",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->903878728]
}, Open  ]],
Cell[CellGroupData[{
Cell[842807, 15697, 1191, 29, 70, "Subsection",ExpressionUUID->"95063188-1e6c-41b8-9887-d36cab28e55d",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547],
Cell[844001, 15728, 596, 9, 70, "Item",ExpressionUUID->"6f1a8a5f-e54c-4785-a575-c04cdbdcfe3c",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->576624648]
}, Open  ]],
Cell[CellGroupData[{
Cell[844634, 15742, 1070, 26, 70, "Subsection",ExpressionUUID->"b2ba7f46-edeb-4902-81bf-66e3b86b34d1",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554],
Cell[845707, 15770, 120, 2, 70, "Text",ExpressionUUID->"e512edbb-a762-46bf-87bb-631a50196859",
 CellID->742276060]
}, Open  ]],
Cell[CellGroupData[{
Cell[845864, 15777, 1073, 26, 70, "Subsection",ExpressionUUID->"33f571a5-2eef-478a-ac33-6d49b88bc226",
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920],
Cell[CellGroupData[{
Cell[846962, 15807, 1125, 28, 70, "Subsubsection",ExpressionUUID->"fddff49c-3645-4ef3-bef5-3a95f50dc864",
 CellID->327726311],
Cell[848090, 15837, 1370, 35, 70, "Output",ExpressionUUID->"59808724-8848-4ec1-b970-e7dfebfe41a4",
 CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
 CellID->544125060]
}, Closed]],
Cell[CellGroupData[{
Cell[849497, 15877, 1171, 29, 70, "Subsubsection",ExpressionUUID->"d3c1443d-5367-48f4-aff4-77d05ec0b01c",
 CellID->316191303],
Cell[850671, 15908, 139, 3, 70, "Text",ExpressionUUID->"c14dadd3-66af-4607-afa4-672176447dc2",
 CellTags->"ScrapeDefault",
 CellID->583889232]
}, Open  ]],
Cell[CellGroupData[{
Cell[850847, 15916, 1109, 27, 70, "Subsubsection",ExpressionUUID->"dee5d31d-4c3a-426c-8c3a-796a5934afe4",
 CellID->474357662],
Cell[851959, 15945, 1328, 34, 70, "Output",ExpressionUUID->"81509e71-0ee2-4499-896c-c4f436dc0e4f",
 CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
 CellID->132666508]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
